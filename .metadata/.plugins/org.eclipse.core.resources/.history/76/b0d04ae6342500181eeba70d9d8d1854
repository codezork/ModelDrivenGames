/*
 * generated by Xtext 2.12.0
 */
package com.hypermodel.games.engine.ui.contentassist

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.xtext.ui.editor.contentassist.ConfigurableCompletionProposal
import org.eclipse.xtext.ui.editor.contentassist.ReplacementTextApplier
import org.eclipse.swt.widgets.DirectoryDialog

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class GameDSLProposalProvider extends AbstractGameDSLProposalProvider {
	
	override completeGameAndroid_Dir(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		dirPickerProposal(model, assignment, context, acceptor)
	}
	
	def dirPickerProposal(EObject model, Assignment assignment, ContentAssistContext context,
		ICompletionProposalAcceptor acceptor) {
		var fileName = createCompletionProposal("Select Android SDK directory...", context) as ConfigurableCompletionProposal
		if (fileName !== null) {
			var applier = new DirTextApplier()
			applier.setContext(context)
			fileName.setTextApplier = applier
		}
		acceptor.accept(fileName)
	}
}

class DirTextApplier extends ReplacementTextApplier {
	var ContentAssistContext context

	def setContext(ContentAssistContext context) {
		this.context = context
	}

	// this will inject a file dialog when selecting the file picker proposal 
	override getActualReplacementString(ConfigurableCompletionProposal proposal) {
		var display = context.getViewer().getTextWidget().getDisplay();
		var fileDialog = new DirectoryDialog(display.getActiveShell());
		fileDialog.message = "Select Android SDK directory" 
		var fileName = fileDialog.open();
		fileName = fileName.replace("\\", "/")
		return "\"".concat(fileName).concat("\"");
	}
}
