/**
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLFactory;
import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GameDisplay;
import com.hypermodel.games.engine.gameDSL.GameDisplayValueType;
import com.hypermodel.games.engine.gameDSL.GameImport;
import com.hypermodel.games.engine.gameDSL.GameModel;
import com.hypermodel.games.engine.gameDSL.GamePackage;
import com.hypermodel.games.engine.gameDSL.GamePlatform;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfig;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigAndroid;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigIOS;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigIOSMOE;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfiguration;
import com.hypermodel.games.engine.gameDSL.GameRoot;
import com.hypermodel.games.engine.gameDSL.GameScene;
import com.hypermodel.games.engine.gameDSL.GameScore;
import com.hypermodel.games.engine.gameDSL.GameScreen;
import com.hypermodel.games.engine.gameDSL.GameScreenOrientation;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GameDSLPackageImpl extends EPackageImpl implements GameDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePackageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePlatformConfigEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePlatformConfigAndroidEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePlatformConfigIOSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePlatformConfigIOSMOEEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gamePlatformConfigurationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameRootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameScreenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameSceneEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameScoreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gameDisplayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum gameDisplayValueTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum gamePlatformEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum gameScreenOrientationEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.hypermodel.games.engine.gameDSL.GameDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GameDSLPackageImpl()
  {
    super(eNS_URI, GameDSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link GameDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GameDSLPackage init()
  {
    if (isInited) return (GameDSLPackage)EPackage.Registry.INSTANCE.getEPackage(GameDSLPackage.eNS_URI);

    // Obtain or create and register package
    GameDSLPackageImpl theGameDSLPackage = (GameDSLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof GameDSLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new GameDSLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theGameDSLPackage.createPackageContents();

    // Initialize created meta-data
    theGameDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGameDSLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GameDSLPackage.eNS_URI, theGameDSLPackage);
    return theGameDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameModel()
  {
    return gameModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGameModel_Packages()
  {
    return (EReference)gameModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameImport()
  {
    return gameImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameImport_ImportedNamespace()
  {
    return (EAttribute)gameImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePackage()
  {
    return gamePackageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePackage_Name()
  {
    return (EAttribute)gamePackageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePackage_Imports()
  {
    return (EReference)gamePackageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePackage_Config()
  {
    return (EReference)gamePackageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePackage_Games()
  {
    return (EReference)gamePackageEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePlatformConfig()
  {
    return gamePlatformConfigEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePlatformConfig_Android()
  {
    return (EReference)gamePlatformConfigEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePlatformConfig_Ios()
  {
    return (EReference)gamePlatformConfigEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePlatformConfig_Iosmoe()
  {
    return (EReference)gamePlatformConfigEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePlatformConfigAndroid()
  {
    return gamePlatformConfigAndroidEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_MinAndroidVersion()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_TargetAndroidVersion()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_ApiLevel()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_Orientation()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_AppIcon()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_AppName()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_AppLabel()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigAndroid_UseAccelerometer()
  {
    return (EAttribute)gamePlatformConfigAndroidEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePlatformConfigIOS()
  {
    return gamePlatformConfigIOSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigIOS_UseAccelerometer()
  {
    return (EAttribute)gamePlatformConfigIOSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePlatformConfigIOSMOE()
  {
    return gamePlatformConfigIOSMOEEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfigIOSMOE_UseAccelerometer()
  {
    return (EAttribute)gamePlatformConfigIOSMOEEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGamePlatformConfiguration()
  {
    return gamePlatformConfigurationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGamePlatformConfiguration_Platform()
  {
    return (EAttribute)gamePlatformConfigurationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGamePlatformConfiguration_Config()
  {
    return (EReference)gamePlatformConfigurationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameRoot()
  {
    return gameRootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameRoot_Name()
  {
    return (EAttribute)gameRootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameRoot_Width()
  {
    return (EAttribute)gameRootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameRoot_Height()
  {
    return (EAttribute)gameRootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameRoot_Title()
  {
    return (EAttribute)gameRootEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameRoot_Ppm()
  {
    return (EAttribute)gameRootEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGameRoot_Scenes()
  {
    return (EReference)gameRootEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGameRoot_Screens()
  {
    return (EReference)gameRootEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameScreen()
  {
    return gameScreenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameScreen_Name()
  {
    return (EAttribute)gameScreenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameScreen_AtlasName()
  {
    return (EAttribute)gameScreenEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameScene()
  {
    return gameSceneEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameScene_Name()
  {
    return (EAttribute)gameSceneEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameScene_HasScore()
  {
    return (EAttribute)gameSceneEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGameScene_Score()
  {
    return (EReference)gameSceneEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameScore()
  {
    return gameScoreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameScore_TopPadding()
  {
    return (EAttribute)gameScoreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGameScore_Displays()
  {
    return (EReference)gameScoreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGameDisplay()
  {
    return gameDisplayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_Name()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_Type()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_Format()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_HasInitial()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_InitialNumberValue()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_InitialIntValue()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_InitialStringValue()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_HasDelta()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_DeltaValue()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_TimePeriod()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_HasAdder()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGameDisplay_HasSetter()
  {
    return (EAttribute)gameDisplayEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getGameDisplayValueType()
  {
    return gameDisplayValueTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getGamePlatform()
  {
    return gamePlatformEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getGameScreenOrientation()
  {
    return gameScreenOrientationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameDSLFactory getGameDSLFactory()
  {
    return (GameDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    gameModelEClass = createEClass(GAME_MODEL);
    createEReference(gameModelEClass, GAME_MODEL__PACKAGES);

    gameImportEClass = createEClass(GAME_IMPORT);
    createEAttribute(gameImportEClass, GAME_IMPORT__IMPORTED_NAMESPACE);

    gamePackageEClass = createEClass(GAME_PACKAGE);
    createEAttribute(gamePackageEClass, GAME_PACKAGE__NAME);
    createEReference(gamePackageEClass, GAME_PACKAGE__IMPORTS);
    createEReference(gamePackageEClass, GAME_PACKAGE__CONFIG);
    createEReference(gamePackageEClass, GAME_PACKAGE__GAMES);

    gamePlatformConfigEClass = createEClass(GAME_PLATFORM_CONFIG);
    createEReference(gamePlatformConfigEClass, GAME_PLATFORM_CONFIG__ANDROID);
    createEReference(gamePlatformConfigEClass, GAME_PLATFORM_CONFIG__IOS);
    createEReference(gamePlatformConfigEClass, GAME_PLATFORM_CONFIG__IOSMOE);

    gamePlatformConfigAndroidEClass = createEClass(GAME_PLATFORM_CONFIG_ANDROID);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__APP_ICON);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__APP_NAME);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL);
    createEAttribute(gamePlatformConfigAndroidEClass, GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER);

    gamePlatformConfigIOSEClass = createEClass(GAME_PLATFORM_CONFIG_IOS);
    createEAttribute(gamePlatformConfigIOSEClass, GAME_PLATFORM_CONFIG_IOS__USE_ACCELEROMETER);

    gamePlatformConfigIOSMOEEClass = createEClass(GAME_PLATFORM_CONFIG_IOSMOE);
    createEAttribute(gamePlatformConfigIOSMOEEClass, GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER);

    gamePlatformConfigurationEClass = createEClass(GAME_PLATFORM_CONFIGURATION);
    createEAttribute(gamePlatformConfigurationEClass, GAME_PLATFORM_CONFIGURATION__PLATFORM);
    createEReference(gamePlatformConfigurationEClass, GAME_PLATFORM_CONFIGURATION__CONFIG);

    gameRootEClass = createEClass(GAME_ROOT);
    createEAttribute(gameRootEClass, GAME_ROOT__NAME);
    createEAttribute(gameRootEClass, GAME_ROOT__WIDTH);
    createEAttribute(gameRootEClass, GAME_ROOT__HEIGHT);
    createEAttribute(gameRootEClass, GAME_ROOT__TITLE);
    createEAttribute(gameRootEClass, GAME_ROOT__PPM);
    createEReference(gameRootEClass, GAME_ROOT__SCENES);
    createEReference(gameRootEClass, GAME_ROOT__SCREENS);

    gameScreenEClass = createEClass(GAME_SCREEN);
    createEAttribute(gameScreenEClass, GAME_SCREEN__NAME);
    createEAttribute(gameScreenEClass, GAME_SCREEN__ATLAS_NAME);

    gameSceneEClass = createEClass(GAME_SCENE);
    createEAttribute(gameSceneEClass, GAME_SCENE__NAME);
    createEAttribute(gameSceneEClass, GAME_SCENE__HAS_SCORE);
    createEReference(gameSceneEClass, GAME_SCENE__SCORE);

    gameScoreEClass = createEClass(GAME_SCORE);
    createEAttribute(gameScoreEClass, GAME_SCORE__TOP_PADDING);
    createEReference(gameScoreEClass, GAME_SCORE__DISPLAYS);

    gameDisplayEClass = createEClass(GAME_DISPLAY);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__NAME);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__TYPE);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__FORMAT);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__HAS_INITIAL);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__INITIAL_NUMBER_VALUE);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__INITIAL_INT_VALUE);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__INITIAL_STRING_VALUE);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__HAS_DELTA);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__DELTA_VALUE);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__TIME_PERIOD);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__HAS_ADDER);
    createEAttribute(gameDisplayEClass, GAME_DISPLAY__HAS_SETTER);

    // Create enums
    gameDisplayValueTypeEEnum = createEEnum(GAME_DISPLAY_VALUE_TYPE);
    gamePlatformEEnum = createEEnum(GAME_PLATFORM);
    gameScreenOrientationEEnum = createEEnum(GAME_SCREEN_ORIENTATION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(gameModelEClass, GameModel.class, "GameModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGameModel_Packages(), this.getGamePackage(), null, "packages", null, 0, -1, GameModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameImportEClass, GameImport.class, "GameImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, GameImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePackageEClass, GamePackage.class, "GamePackage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGamePackage_Name(), ecorePackage.getEString(), "name", null, 0, 1, GamePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePackage_Imports(), this.getGameImport(), null, "imports", null, 0, -1, GamePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePackage_Config(), this.getGamePlatformConfig(), null, "config", null, 0, 1, GamePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePackage_Games(), this.getGameRoot(), null, "games", null, 0, -1, GamePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePlatformConfigEClass, GamePlatformConfig.class, "GamePlatformConfig", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGamePlatformConfig_Android(), this.getGamePlatformConfigAndroid(), null, "android", null, 0, 1, GamePlatformConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePlatformConfig_Ios(), this.getGamePlatformConfigIOS(), null, "ios", null, 0, 1, GamePlatformConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePlatformConfig_Iosmoe(), this.getGamePlatformConfigIOSMOE(), null, "iosmoe", null, 0, 1, GamePlatformConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePlatformConfigAndroidEClass, GamePlatformConfigAndroid.class, "GamePlatformConfigAndroid", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGamePlatformConfigAndroid_MinAndroidVersion(), ecorePackage.getEInt(), "minAndroidVersion", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_TargetAndroidVersion(), ecorePackage.getEInt(), "targetAndroidVersion", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_ApiLevel(), ecorePackage.getEInt(), "apiLevel", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_Orientation(), this.getGameScreenOrientation(), "orientation", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_AppIcon(), ecorePackage.getEString(), "appIcon", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_AppName(), ecorePackage.getEString(), "appName", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_AppLabel(), ecorePackage.getEString(), "appLabel", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGamePlatformConfigAndroid_UseAccelerometer(), ecorePackage.getEBoolean(), "useAccelerometer", null, 0, 1, GamePlatformConfigAndroid.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePlatformConfigIOSEClass, GamePlatformConfigIOS.class, "GamePlatformConfigIOS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGamePlatformConfigIOS_UseAccelerometer(), ecorePackage.getEBoolean(), "useAccelerometer", null, 0, 1, GamePlatformConfigIOS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePlatformConfigIOSMOEEClass, GamePlatformConfigIOSMOE.class, "GamePlatformConfigIOSMOE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGamePlatformConfigIOSMOE_UseAccelerometer(), ecorePackage.getEBoolean(), "useAccelerometer", null, 0, 1, GamePlatformConfigIOSMOE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gamePlatformConfigurationEClass, GamePlatformConfiguration.class, "GamePlatformConfiguration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGamePlatformConfiguration_Platform(), this.getGamePlatform(), "platform", null, 0, 1, GamePlatformConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGamePlatformConfiguration_Config(), this.getGamePlatformConfigAndroid(), null, "config", null, 0, -1, GamePlatformConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameRootEClass, GameRoot.class, "GameRoot", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameRoot_Name(), ecorePackage.getEString(), "name", null, 0, 1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameRoot_Width(), ecorePackage.getEInt(), "width", null, 0, 1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameRoot_Height(), ecorePackage.getEInt(), "height", null, 0, 1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameRoot_Title(), ecorePackage.getEString(), "title", null, 0, 1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameRoot_Ppm(), ecorePackage.getEInt(), "ppm", null, 0, 1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGameRoot_Scenes(), this.getGameScene(), null, "scenes", null, 0, -1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGameRoot_Screens(), this.getGameScreen(), null, "screens", null, 0, -1, GameRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameScreenEClass, GameScreen.class, "GameScreen", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameScreen_Name(), ecorePackage.getEString(), "name", null, 0, 1, GameScreen.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameScreen_AtlasName(), ecorePackage.getEString(), "atlasName", null, 0, 1, GameScreen.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameSceneEClass, GameScene.class, "GameScene", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameScene_Name(), ecorePackage.getEString(), "name", null, 0, 1, GameScene.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameScene_HasScore(), ecorePackage.getEBoolean(), "hasScore", null, 0, 1, GameScene.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGameScene_Score(), this.getGameScore(), null, "score", null, 0, 1, GameScene.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameScoreEClass, GameScore.class, "GameScore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameScore_TopPadding(), ecorePackage.getEInt(), "topPadding", null, 0, 1, GameScore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGameScore_Displays(), this.getGameDisplay(), null, "displays", null, 0, -1, GameScore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gameDisplayEClass, GameDisplay.class, "GameDisplay", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGameDisplay_Name(), ecorePackage.getEString(), "name", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_Type(), this.getGameDisplayValueType(), "type", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_Format(), ecorePackage.getEString(), "format", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_HasInitial(), ecorePackage.getEBoolean(), "hasInitial", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_InitialNumberValue(), ecorePackage.getEFloat(), "initialNumberValue", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_InitialIntValue(), ecorePackage.getEInt(), "initialIntValue", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_InitialStringValue(), ecorePackage.getEString(), "initialStringValue", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_HasDelta(), ecorePackage.getEBoolean(), "hasDelta", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_DeltaValue(), ecorePackage.getEFloat(), "deltaValue", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_TimePeriod(), ecorePackage.getEFloat(), "timePeriod", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_HasAdder(), ecorePackage.getEBoolean(), "hasAdder", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGameDisplay_HasSetter(), ecorePackage.getEBoolean(), "hasSetter", null, 0, 1, GameDisplay.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(gameDisplayValueTypeEEnum, GameDisplayValueType.class, "GameDisplayValueType");
    addEEnumLiteral(gameDisplayValueTypeEEnum, GameDisplayValueType.INT);
    addEEnumLiteral(gameDisplayValueTypeEEnum, GameDisplayValueType.FLOAT);
    addEEnumLiteral(gameDisplayValueTypeEEnum, GameDisplayValueType.STRING);

    initEEnum(gamePlatformEEnum, GamePlatform.class, "GamePlatform");
    addEEnumLiteral(gamePlatformEEnum, GamePlatform.ANDROID);
    addEEnumLiteral(gamePlatformEEnum, GamePlatform.DESKTOP);
    addEEnumLiteral(gamePlatformEEnum, GamePlatform.HTML);
    addEEnumLiteral(gamePlatformEEnum, GamePlatform.IOS);
    addEEnumLiteral(gamePlatformEEnum, GamePlatform.IOSMOE);

    initEEnum(gameScreenOrientationEEnum, GameScreenOrientation.class, "GameScreenOrientation");
    addEEnumLiteral(gameScreenOrientationEEnum, GameScreenOrientation.LANDSCAPE);
    addEEnumLiteral(gameScreenOrientationEEnum, GameScreenOrientation.PORTRAIT);

    // Create resource
    createResource(eNS_URI);
  }

} //GameDSLPackageImpl
