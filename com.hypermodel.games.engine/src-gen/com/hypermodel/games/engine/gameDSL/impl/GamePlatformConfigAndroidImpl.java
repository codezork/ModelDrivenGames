/**
 * generated by Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigAndroid;
import com.hypermodel.games.engine.gameDSL.GameScreenOrientation;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Platform Config Android</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getMinAndroidVersion <em>Min Android Version</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getTargetAndroidVersion <em>Target Android Version</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getApiLevel <em>Api Level</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getOrientation <em>Orientation</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getAppIcon <em>App Icon</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getAppName <em>App Name</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#getAppLabel <em>App Label</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigAndroidImpl#isUseAccelerometer <em>Use Accelerometer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GamePlatformConfigAndroidImpl extends MinimalEObjectImpl.Container implements GamePlatformConfigAndroid
{
  /**
   * The default value of the '{@link #getMinAndroidVersion() <em>Min Android Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAndroidVersion()
   * @generated
   * @ordered
   */
  protected static final int MIN_ANDROID_VERSION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinAndroidVersion() <em>Min Android Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAndroidVersion()
   * @generated
   * @ordered
   */
  protected int minAndroidVersion = MIN_ANDROID_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getTargetAndroidVersion() <em>Target Android Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetAndroidVersion()
   * @generated
   * @ordered
   */
  protected static final int TARGET_ANDROID_VERSION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTargetAndroidVersion() <em>Target Android Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetAndroidVersion()
   * @generated
   * @ordered
   */
  protected int targetAndroidVersion = TARGET_ANDROID_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getApiLevel() <em>Api Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApiLevel()
   * @generated
   * @ordered
   */
  protected static final int API_LEVEL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getApiLevel() <em>Api Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApiLevel()
   * @generated
   * @ordered
   */
  protected int apiLevel = API_LEVEL_EDEFAULT;

  /**
   * The default value of the '{@link #getOrientation() <em>Orientation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrientation()
   * @generated
   * @ordered
   */
  protected static final GameScreenOrientation ORIENTATION_EDEFAULT = GameScreenOrientation.LANDSCAPE;

  /**
   * The cached value of the '{@link #getOrientation() <em>Orientation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrientation()
   * @generated
   * @ordered
   */
  protected GameScreenOrientation orientation = ORIENTATION_EDEFAULT;

  /**
   * The default value of the '{@link #getAppIcon() <em>App Icon</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppIcon()
   * @generated
   * @ordered
   */
  protected static final String APP_ICON_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppIcon() <em>App Icon</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppIcon()
   * @generated
   * @ordered
   */
  protected String appIcon = APP_ICON_EDEFAULT;

  /**
   * The default value of the '{@link #getAppName() <em>App Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppName()
   * @generated
   * @ordered
   */
  protected static final String APP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppName() <em>App Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppName()
   * @generated
   * @ordered
   */
  protected String appName = APP_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getAppLabel() <em>App Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppLabel()
   * @generated
   * @ordered
   */
  protected static final String APP_LABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppLabel() <em>App Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppLabel()
   * @generated
   * @ordered
   */
  protected String appLabel = APP_LABEL_EDEFAULT;

  /**
   * The default value of the '{@link #isUseAccelerometer() <em>Use Accelerometer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUseAccelerometer()
   * @generated
   * @ordered
   */
  protected static final boolean USE_ACCELEROMETER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUseAccelerometer() <em>Use Accelerometer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUseAccelerometer()
   * @generated
   * @ordered
   */
  protected boolean useAccelerometer = USE_ACCELEROMETER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GamePlatformConfigAndroidImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_PLATFORM_CONFIG_ANDROID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getMinAndroidVersion()
  {
    return minAndroidVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinAndroidVersion(int newMinAndroidVersion)
  {
    int oldMinAndroidVersion = minAndroidVersion;
    minAndroidVersion = newMinAndroidVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION, oldMinAndroidVersion, minAndroidVersion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getTargetAndroidVersion()
  {
    return targetAndroidVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetAndroidVersion(int newTargetAndroidVersion)
  {
    int oldTargetAndroidVersion = targetAndroidVersion;
    targetAndroidVersion = newTargetAndroidVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION, oldTargetAndroidVersion, targetAndroidVersion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getApiLevel()
  {
    return apiLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setApiLevel(int newApiLevel)
  {
    int oldApiLevel = apiLevel;
    apiLevel = newApiLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL, oldApiLevel, apiLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameScreenOrientation getOrientation()
  {
    return orientation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOrientation(GameScreenOrientation newOrientation)
  {
    GameScreenOrientation oldOrientation = orientation;
    orientation = newOrientation == null ? ORIENTATION_EDEFAULT : newOrientation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION, oldOrientation, orientation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAppIcon()
  {
    return appIcon;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAppIcon(String newAppIcon)
  {
    String oldAppIcon = appIcon;
    appIcon = newAppIcon;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_ICON, oldAppIcon, appIcon));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAppName()
  {
    return appName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAppName(String newAppName)
  {
    String oldAppName = appName;
    appName = newAppName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_NAME, oldAppName, appName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAppLabel()
  {
    return appLabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAppLabel(String newAppLabel)
  {
    String oldAppLabel = appLabel;
    appLabel = newAppLabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL, oldAppLabel, appLabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isUseAccelerometer()
  {
    return useAccelerometer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseAccelerometer(boolean newUseAccelerometer)
  {
    boolean oldUseAccelerometer = useAccelerometer;
    useAccelerometer = newUseAccelerometer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER, oldUseAccelerometer, useAccelerometer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION:
        return getMinAndroidVersion();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION:
        return getTargetAndroidVersion();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL:
        return getApiLevel();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION:
        return getOrientation();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_ICON:
        return getAppIcon();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_NAME:
        return getAppName();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL:
        return getAppLabel();
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER:
        return isUseAccelerometer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION:
        setMinAndroidVersion((Integer)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION:
        setTargetAndroidVersion((Integer)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL:
        setApiLevel((Integer)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION:
        setOrientation((GameScreenOrientation)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_ICON:
        setAppIcon((String)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_NAME:
        setAppName((String)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL:
        setAppLabel((String)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER:
        setUseAccelerometer((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION:
        setMinAndroidVersion(MIN_ANDROID_VERSION_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION:
        setTargetAndroidVersion(TARGET_ANDROID_VERSION_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL:
        setApiLevel(API_LEVEL_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION:
        setOrientation(ORIENTATION_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_ICON:
        setAppIcon(APP_ICON_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_NAME:
        setAppName(APP_NAME_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL:
        setAppLabel(APP_LABEL_EDEFAULT);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER:
        setUseAccelerometer(USE_ACCELEROMETER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__MIN_ANDROID_VERSION:
        return minAndroidVersion != MIN_ANDROID_VERSION_EDEFAULT;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__TARGET_ANDROID_VERSION:
        return targetAndroidVersion != TARGET_ANDROID_VERSION_EDEFAULT;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__API_LEVEL:
        return apiLevel != API_LEVEL_EDEFAULT;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__ORIENTATION:
        return orientation != ORIENTATION_EDEFAULT;
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_ICON:
        return APP_ICON_EDEFAULT == null ? appIcon != null : !APP_ICON_EDEFAULT.equals(appIcon);
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_NAME:
        return APP_NAME_EDEFAULT == null ? appName != null : !APP_NAME_EDEFAULT.equals(appName);
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__APP_LABEL:
        return APP_LABEL_EDEFAULT == null ? appLabel != null : !APP_LABEL_EDEFAULT.equals(appLabel);
      case GameDSLPackage.GAME_PLATFORM_CONFIG_ANDROID__USE_ACCELEROMETER:
        return useAccelerometer != USE_ACCELEROMETER_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (minAndroidVersion: ");
    result.append(minAndroidVersion);
    result.append(", targetAndroidVersion: ");
    result.append(targetAndroidVersion);
    result.append(", apiLevel: ");
    result.append(apiLevel);
    result.append(", orientation: ");
    result.append(orientation);
    result.append(", appIcon: ");
    result.append(appIcon);
    result.append(", appName: ");
    result.append(appName);
    result.append(", appLabel: ");
    result.append(appLabel);
    result.append(", useAccelerometer: ");
    result.append(useAccelerometer);
    result.append(')');
    return result.toString();
  }

} //GamePlatformConfigAndroidImpl
