/**
 * generated by Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigIOSMOE;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Platform Config IOSMOE</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigIOSMOEImpl#isUseAccelerometer <em>Use Accelerometer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GamePlatformConfigIOSMOEImpl extends MinimalEObjectImpl.Container implements GamePlatformConfigIOSMOE
{
  /**
   * The default value of the '{@link #isUseAccelerometer() <em>Use Accelerometer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUseAccelerometer()
   * @generated
   * @ordered
   */
  protected static final boolean USE_ACCELEROMETER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUseAccelerometer() <em>Use Accelerometer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUseAccelerometer()
   * @generated
   * @ordered
   */
  protected boolean useAccelerometer = USE_ACCELEROMETER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GamePlatformConfigIOSMOEImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_PLATFORM_CONFIG_IOSMOE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isUseAccelerometer()
  {
    return useAccelerometer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseAccelerometer(boolean newUseAccelerometer)
  {
    boolean oldUseAccelerometer = useAccelerometer;
    useAccelerometer = newUseAccelerometer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER, oldUseAccelerometer, useAccelerometer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER:
        return isUseAccelerometer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER:
        setUseAccelerometer((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER:
        setUseAccelerometer(USE_ACCELEROMETER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG_IOSMOE__USE_ACCELEROMETER:
        return useAccelerometer != USE_ACCELEROMETER_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (useAccelerometer: ");
    result.append(useAccelerometer);
    result.append(')');
    return result.toString();
  }

} //GamePlatformConfigIOSMOEImpl
