/**
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfig;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigAndroid;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigIOS;
import com.hypermodel.games.engine.gameDSL.GamePlatformConfigIOSMOE;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Platform Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigImpl#getAndroid <em>Android</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigImpl#getIos <em>Ios</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GamePlatformConfigImpl#getIosmoe <em>Iosmoe</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GamePlatformConfigImpl extends MinimalEObjectImpl.Container implements GamePlatformConfig
{
  /**
   * The cached value of the '{@link #getAndroid() <em>Android</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAndroid()
   * @generated
   * @ordered
   */
  protected GamePlatformConfigAndroid android;

  /**
   * The cached value of the '{@link #getIos() <em>Ios</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIos()
   * @generated
   * @ordered
   */
  protected GamePlatformConfigIOS ios;

  /**
   * The cached value of the '{@link #getIosmoe() <em>Iosmoe</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIosmoe()
   * @generated
   * @ordered
   */
  protected GamePlatformConfigIOSMOE iosmoe;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GamePlatformConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_PLATFORM_CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GamePlatformConfigAndroid getAndroid()
  {
    return android;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAndroid(GamePlatformConfigAndroid newAndroid, NotificationChain msgs)
  {
    GamePlatformConfigAndroid oldAndroid = android;
    android = newAndroid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID, oldAndroid, newAndroid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAndroid(GamePlatformConfigAndroid newAndroid)
  {
    if (newAndroid != android)
    {
      NotificationChain msgs = null;
      if (android != null)
        msgs = ((InternalEObject)android).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID, null, msgs);
      if (newAndroid != null)
        msgs = ((InternalEObject)newAndroid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID, null, msgs);
      msgs = basicSetAndroid(newAndroid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID, newAndroid, newAndroid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GamePlatformConfigIOS getIos()
  {
    return ios;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIos(GamePlatformConfigIOS newIos, NotificationChain msgs)
  {
    GamePlatformConfigIOS oldIos = ios;
    ios = newIos;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__IOS, oldIos, newIos);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIos(GamePlatformConfigIOS newIos)
  {
    if (newIos != ios)
    {
      NotificationChain msgs = null;
      if (ios != null)
        msgs = ((InternalEObject)ios).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__IOS, null, msgs);
      if (newIos != null)
        msgs = ((InternalEObject)newIos).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__IOS, null, msgs);
      msgs = basicSetIos(newIos, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__IOS, newIos, newIos));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GamePlatformConfigIOSMOE getIosmoe()
  {
    return iosmoe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIosmoe(GamePlatformConfigIOSMOE newIosmoe, NotificationChain msgs)
  {
    GamePlatformConfigIOSMOE oldIosmoe = iosmoe;
    iosmoe = newIosmoe;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE, oldIosmoe, newIosmoe);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIosmoe(GamePlatformConfigIOSMOE newIosmoe)
  {
    if (newIosmoe != iosmoe)
    {
      NotificationChain msgs = null;
      if (iosmoe != null)
        msgs = ((InternalEObject)iosmoe).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE, null, msgs);
      if (newIosmoe != null)
        msgs = ((InternalEObject)newIosmoe).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE, null, msgs);
      msgs = basicSetIosmoe(newIosmoe, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE, newIosmoe, newIosmoe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID:
        return basicSetAndroid(null, msgs);
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOS:
        return basicSetIos(null, msgs);
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE:
        return basicSetIosmoe(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID:
        return getAndroid();
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOS:
        return getIos();
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE:
        return getIosmoe();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID:
        setAndroid((GamePlatformConfigAndroid)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOS:
        setIos((GamePlatformConfigIOS)newValue);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE:
        setIosmoe((GamePlatformConfigIOSMOE)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID:
        setAndroid((GamePlatformConfigAndroid)null);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOS:
        setIos((GamePlatformConfigIOS)null);
        return;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE:
        setIosmoe((GamePlatformConfigIOSMOE)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_PLATFORM_CONFIG__ANDROID:
        return android != null;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOS:
        return ios != null;
      case GameDSLPackage.GAME_PLATFORM_CONFIG__IOSMOE:
        return iosmoe != null;
    }
    return super.eIsSet(featureID);
  }

} //GamePlatformConfigImpl
