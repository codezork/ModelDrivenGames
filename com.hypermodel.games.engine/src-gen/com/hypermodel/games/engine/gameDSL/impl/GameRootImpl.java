/**
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GameRoot;
import com.hypermodel.games.engine.gameDSL.GameScene;
import com.hypermodel.games.engine.gameDSL.GameScreen;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Root</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getWidth <em>Width</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getHeight <em>Height</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getPpm <em>Ppm</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getScenes <em>Scenes</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameRootImpl#getScreens <em>Screens</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameRootImpl extends MinimalEObjectImpl.Container implements GameRoot
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected static final int WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected int width = WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected static final int HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected int height = HEIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected static final String TITLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected String title = TITLE_EDEFAULT;

  /**
   * The default value of the '{@link #getPpm() <em>Ppm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPpm()
   * @generated
   * @ordered
   */
  protected static final int PPM_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPpm() <em>Ppm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPpm()
   * @generated
   * @ordered
   */
  protected int ppm = PPM_EDEFAULT;

  /**
   * The cached value of the '{@link #getScenes() <em>Scenes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScenes()
   * @generated
   * @ordered
   */
  protected EList<GameScene> scenes;

  /**
   * The cached value of the '{@link #getScreens() <em>Screens</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScreens()
   * @generated
   * @ordered
   */
  protected EList<GameScreen> screens;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameRootImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_ROOT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_ROOT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getWidth()
  {
    return width;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWidth(int newWidth)
  {
    int oldWidth = width;
    width = newWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_ROOT__WIDTH, oldWidth, width));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getHeight()
  {
    return height;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHeight(int newHeight)
  {
    int oldHeight = height;
    height = newHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_ROOT__HEIGHT, oldHeight, height));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTitle(String newTitle)
  {
    String oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_ROOT__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getPpm()
  {
    return ppm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPpm(int newPpm)
  {
    int oldPpm = ppm;
    ppm = newPpm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_ROOT__PPM, oldPpm, ppm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<GameScene> getScenes()
  {
    if (scenes == null)
    {
      scenes = new EObjectContainmentEList<GameScene>(GameScene.class, this, GameDSLPackage.GAME_ROOT__SCENES);
    }
    return scenes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<GameScreen> getScreens()
  {
    if (screens == null)
    {
      screens = new EObjectContainmentEList<GameScreen>(GameScreen.class, this, GameDSLPackage.GAME_ROOT__SCREENS);
    }
    return screens;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_ROOT__SCENES:
        return ((InternalEList<?>)getScenes()).basicRemove(otherEnd, msgs);
      case GameDSLPackage.GAME_ROOT__SCREENS:
        return ((InternalEList<?>)getScreens()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_ROOT__NAME:
        return getName();
      case GameDSLPackage.GAME_ROOT__WIDTH:
        return getWidth();
      case GameDSLPackage.GAME_ROOT__HEIGHT:
        return getHeight();
      case GameDSLPackage.GAME_ROOT__TITLE:
        return getTitle();
      case GameDSLPackage.GAME_ROOT__PPM:
        return getPpm();
      case GameDSLPackage.GAME_ROOT__SCENES:
        return getScenes();
      case GameDSLPackage.GAME_ROOT__SCREENS:
        return getScreens();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_ROOT__NAME:
        setName((String)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__WIDTH:
        setWidth((Integer)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__HEIGHT:
        setHeight((Integer)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__TITLE:
        setTitle((String)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__PPM:
        setPpm((Integer)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__SCENES:
        getScenes().clear();
        getScenes().addAll((Collection<? extends GameScene>)newValue);
        return;
      case GameDSLPackage.GAME_ROOT__SCREENS:
        getScreens().clear();
        getScreens().addAll((Collection<? extends GameScreen>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_ROOT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GameDSLPackage.GAME_ROOT__WIDTH:
        setWidth(WIDTH_EDEFAULT);
        return;
      case GameDSLPackage.GAME_ROOT__HEIGHT:
        setHeight(HEIGHT_EDEFAULT);
        return;
      case GameDSLPackage.GAME_ROOT__TITLE:
        setTitle(TITLE_EDEFAULT);
        return;
      case GameDSLPackage.GAME_ROOT__PPM:
        setPpm(PPM_EDEFAULT);
        return;
      case GameDSLPackage.GAME_ROOT__SCENES:
        getScenes().clear();
        return;
      case GameDSLPackage.GAME_ROOT__SCREENS:
        getScreens().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_ROOT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GameDSLPackage.GAME_ROOT__WIDTH:
        return width != WIDTH_EDEFAULT;
      case GameDSLPackage.GAME_ROOT__HEIGHT:
        return height != HEIGHT_EDEFAULT;
      case GameDSLPackage.GAME_ROOT__TITLE:
        return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
      case GameDSLPackage.GAME_ROOT__PPM:
        return ppm != PPM_EDEFAULT;
      case GameDSLPackage.GAME_ROOT__SCENES:
        return scenes != null && !scenes.isEmpty();
      case GameDSLPackage.GAME_ROOT__SCREENS:
        return screens != null && !screens.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", width: ");
    result.append(width);
    result.append(", height: ");
    result.append(height);
    result.append(", title: ");
    result.append(title);
    result.append(", ppm: ");
    result.append(ppm);
    result.append(')');
    return result.toString();
  }

} //GameRootImpl
