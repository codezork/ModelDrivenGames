/**
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GameTextureRegion;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Texture Region</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getRegion <em>Region</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getWidth <em>Width</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getHeight <em>Height</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getOffsetX <em>Offset X</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#getOffsetY <em>Offset Y</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#isFlipX <em>Flip X</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTextureRegionImpl#isFlipY <em>Flip Y</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameTextureRegionImpl extends MinimalEObjectImpl.Container implements GameTextureRegion
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getRegion() <em>Region</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegion()
   * @generated
   * @ordered
   */
  protected static final String REGION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRegion() <em>Region</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegion()
   * @generated
   * @ordered
   */
  protected String region = REGION_EDEFAULT;

  /**
   * The default value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected static final int WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected int width = WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected static final int HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHeight() <em>Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeight()
   * @generated
   * @ordered
   */
  protected int height = HEIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getOffsetX() <em>Offset X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffsetX()
   * @generated
   * @ordered
   */
  protected static final float OFFSET_X_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getOffsetX() <em>Offset X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffsetX()
   * @generated
   * @ordered
   */
  protected float offsetX = OFFSET_X_EDEFAULT;

  /**
   * The default value of the '{@link #getOffsetY() <em>Offset Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffsetY()
   * @generated
   * @ordered
   */
  protected static final float OFFSET_Y_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getOffsetY() <em>Offset Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffsetY()
   * @generated
   * @ordered
   */
  protected float offsetY = OFFSET_Y_EDEFAULT;

  /**
   * The default value of the '{@link #isFlipX() <em>Flip X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlipX()
   * @generated
   * @ordered
   */
  protected static final boolean FLIP_X_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFlipX() <em>Flip X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlipX()
   * @generated
   * @ordered
   */
  protected boolean flipX = FLIP_X_EDEFAULT;

  /**
   * The default value of the '{@link #isFlipY() <em>Flip Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlipY()
   * @generated
   * @ordered
   */
  protected static final boolean FLIP_Y_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFlipY() <em>Flip Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFlipY()
   * @generated
   * @ordered
   */
  protected boolean flipY = FLIP_Y_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameTextureRegionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_TEXTURE_REGION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRegion()
  {
    return region;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRegion(String newRegion)
  {
    String oldRegion = region;
    region = newRegion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__REGION, oldRegion, region));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getWidth()
  {
    return width;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWidth(int newWidth)
  {
    int oldWidth = width;
    width = newWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__WIDTH, oldWidth, width));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getHeight()
  {
    return height;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHeight(int newHeight)
  {
    int oldHeight = height;
    height = newHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__HEIGHT, oldHeight, height));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public float getOffsetX()
  {
    return offsetX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOffsetX(float newOffsetX)
  {
    float oldOffsetX = offsetX;
    offsetX = newOffsetX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_X, oldOffsetX, offsetX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public float getOffsetY()
  {
    return offsetY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOffsetY(float newOffsetY)
  {
    float oldOffsetY = offsetY;
    offsetY = newOffsetY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_Y, oldOffsetY, offsetY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFlipX()
  {
    return flipX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFlipX(boolean newFlipX)
  {
    boolean oldFlipX = flipX;
    flipX = newFlipX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__FLIP_X, oldFlipX, flipX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFlipY()
  {
    return flipY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFlipY(boolean newFlipY)
  {
    boolean oldFlipY = flipY;
    flipY = newFlipY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TEXTURE_REGION__FLIP_Y, oldFlipY, flipY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TEXTURE_REGION__NAME:
        return getName();
      case GameDSLPackage.GAME_TEXTURE_REGION__REGION:
        return getRegion();
      case GameDSLPackage.GAME_TEXTURE_REGION__WIDTH:
        return getWidth();
      case GameDSLPackage.GAME_TEXTURE_REGION__HEIGHT:
        return getHeight();
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_X:
        return getOffsetX();
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_Y:
        return getOffsetY();
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_X:
        return isFlipX();
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_Y:
        return isFlipY();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TEXTURE_REGION__NAME:
        setName((String)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__REGION:
        setRegion((String)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__WIDTH:
        setWidth((Integer)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__HEIGHT:
        setHeight((Integer)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_X:
        setOffsetX((Float)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_Y:
        setOffsetY((Float)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_X:
        setFlipX((Boolean)newValue);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_Y:
        setFlipY((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TEXTURE_REGION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__REGION:
        setRegion(REGION_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__WIDTH:
        setWidth(WIDTH_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__HEIGHT:
        setHeight(HEIGHT_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_X:
        setOffsetX(OFFSET_X_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_Y:
        setOffsetY(OFFSET_Y_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_X:
        setFlipX(FLIP_X_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_Y:
        setFlipY(FLIP_Y_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TEXTURE_REGION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GameDSLPackage.GAME_TEXTURE_REGION__REGION:
        return REGION_EDEFAULT == null ? region != null : !REGION_EDEFAULT.equals(region);
      case GameDSLPackage.GAME_TEXTURE_REGION__WIDTH:
        return width != WIDTH_EDEFAULT;
      case GameDSLPackage.GAME_TEXTURE_REGION__HEIGHT:
        return height != HEIGHT_EDEFAULT;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_X:
        return offsetX != OFFSET_X_EDEFAULT;
      case GameDSLPackage.GAME_TEXTURE_REGION__OFFSET_Y:
        return offsetY != OFFSET_Y_EDEFAULT;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_X:
        return flipX != FLIP_X_EDEFAULT;
      case GameDSLPackage.GAME_TEXTURE_REGION__FLIP_Y:
        return flipY != FLIP_Y_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", region: ");
    result.append(region);
    result.append(", width: ");
    result.append(width);
    result.append(", height: ");
    result.append(height);
    result.append(", offsetX: ");
    result.append(offsetX);
    result.append(", offsetY: ");
    result.append(offsetY);
    result.append(", flipX: ");
    result.append(flipX);
    result.append(", flipY: ");
    result.append(flipY);
    result.append(')');
    return result.toString();
  }

} //GameTextureRegionImpl
