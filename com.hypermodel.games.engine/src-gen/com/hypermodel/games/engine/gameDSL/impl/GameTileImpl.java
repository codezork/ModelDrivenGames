/**
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.gameDSL.impl;

import com.hypermodel.games.engine.gameDSL.GameDSLPackage;
import com.hypermodel.games.engine.gameDSL.GameLayer;
import com.hypermodel.games.engine.gameDSL.GameTile;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Game Tile</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#getId <em>Id</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#isHasObjectLayer <em>Has Object Layer</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#getObjectLayer <em>Object Layer</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#isHasTileLayer <em>Has Tile Layer</em>}</li>
 *   <li>{@link com.hypermodel.games.engine.gameDSL.impl.GameTileImpl#getTileLayer <em>Tile Layer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GameTileImpl extends MinimalEObjectImpl.Container implements GameTile
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected int id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #isHasObjectLayer() <em>Has Object Layer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasObjectLayer()
   * @generated
   * @ordered
   */
  protected static final boolean HAS_OBJECT_LAYER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHasObjectLayer() <em>Has Object Layer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasObjectLayer()
   * @generated
   * @ordered
   */
  protected boolean hasObjectLayer = HAS_OBJECT_LAYER_EDEFAULT;

  /**
   * The cached value of the '{@link #getObjectLayer() <em>Object Layer</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectLayer()
   * @generated
   * @ordered
   */
  protected GameLayer objectLayer;

  /**
   * The default value of the '{@link #isHasTileLayer() <em>Has Tile Layer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasTileLayer()
   * @generated
   * @ordered
   */
  protected static final boolean HAS_TILE_LAYER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHasTileLayer() <em>Has Tile Layer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasTileLayer()
   * @generated
   * @ordered
   */
  protected boolean hasTileLayer = HAS_TILE_LAYER_EDEFAULT;

  /**
   * The cached value of the '{@link #getTileLayer() <em>Tile Layer</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTileLayer()
   * @generated
   * @ordered
   */
  protected GameLayer tileLayer;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GameTileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GameDSLPackage.Literals.GAME_TILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(int newId)
  {
    int oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isHasObjectLayer()
  {
    return hasObjectLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHasObjectLayer(boolean newHasObjectLayer)
  {
    boolean oldHasObjectLayer = hasObjectLayer;
    hasObjectLayer = newHasObjectLayer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__HAS_OBJECT_LAYER, oldHasObjectLayer, hasObjectLayer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameLayer getObjectLayer()
  {
    if (objectLayer != null && objectLayer.eIsProxy())
    {
      InternalEObject oldObjectLayer = (InternalEObject)objectLayer;
      objectLayer = (GameLayer)eResolveProxy(oldObjectLayer);
      if (objectLayer != oldObjectLayer)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GameDSLPackage.GAME_TILE__OBJECT_LAYER, oldObjectLayer, objectLayer));
      }
    }
    return objectLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameLayer basicGetObjectLayer()
  {
    return objectLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObjectLayer(GameLayer newObjectLayer)
  {
    GameLayer oldObjectLayer = objectLayer;
    objectLayer = newObjectLayer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__OBJECT_LAYER, oldObjectLayer, objectLayer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isHasTileLayer()
  {
    return hasTileLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHasTileLayer(boolean newHasTileLayer)
  {
    boolean oldHasTileLayer = hasTileLayer;
    hasTileLayer = newHasTileLayer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__HAS_TILE_LAYER, oldHasTileLayer, hasTileLayer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameLayer getTileLayer()
  {
    if (tileLayer != null && tileLayer.eIsProxy())
    {
      InternalEObject oldTileLayer = (InternalEObject)tileLayer;
      tileLayer = (GameLayer)eResolveProxy(oldTileLayer);
      if (tileLayer != oldTileLayer)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GameDSLPackage.GAME_TILE__TILE_LAYER, oldTileLayer, tileLayer));
      }
    }
    return tileLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameLayer basicGetTileLayer()
  {
    return tileLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTileLayer(GameLayer newTileLayer)
  {
    GameLayer oldTileLayer = tileLayer;
    tileLayer = newTileLayer;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GameDSLPackage.GAME_TILE__TILE_LAYER, oldTileLayer, tileLayer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TILE__NAME:
        return getName();
      case GameDSLPackage.GAME_TILE__ID:
        return getId();
      case GameDSLPackage.GAME_TILE__HAS_OBJECT_LAYER:
        return isHasObjectLayer();
      case GameDSLPackage.GAME_TILE__OBJECT_LAYER:
        if (resolve) return getObjectLayer();
        return basicGetObjectLayer();
      case GameDSLPackage.GAME_TILE__HAS_TILE_LAYER:
        return isHasTileLayer();
      case GameDSLPackage.GAME_TILE__TILE_LAYER:
        if (resolve) return getTileLayer();
        return basicGetTileLayer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TILE__NAME:
        setName((String)newValue);
        return;
      case GameDSLPackage.GAME_TILE__ID:
        setId((Integer)newValue);
        return;
      case GameDSLPackage.GAME_TILE__HAS_OBJECT_LAYER:
        setHasObjectLayer((Boolean)newValue);
        return;
      case GameDSLPackage.GAME_TILE__OBJECT_LAYER:
        setObjectLayer((GameLayer)newValue);
        return;
      case GameDSLPackage.GAME_TILE__HAS_TILE_LAYER:
        setHasTileLayer((Boolean)newValue);
        return;
      case GameDSLPackage.GAME_TILE__TILE_LAYER:
        setTileLayer((GameLayer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TILE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TILE__ID:
        setId(ID_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TILE__HAS_OBJECT_LAYER:
        setHasObjectLayer(HAS_OBJECT_LAYER_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TILE__OBJECT_LAYER:
        setObjectLayer((GameLayer)null);
        return;
      case GameDSLPackage.GAME_TILE__HAS_TILE_LAYER:
        setHasTileLayer(HAS_TILE_LAYER_EDEFAULT);
        return;
      case GameDSLPackage.GAME_TILE__TILE_LAYER:
        setTileLayer((GameLayer)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GameDSLPackage.GAME_TILE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GameDSLPackage.GAME_TILE__ID:
        return id != ID_EDEFAULT;
      case GameDSLPackage.GAME_TILE__HAS_OBJECT_LAYER:
        return hasObjectLayer != HAS_OBJECT_LAYER_EDEFAULT;
      case GameDSLPackage.GAME_TILE__OBJECT_LAYER:
        return objectLayer != null;
      case GameDSLPackage.GAME_TILE__HAS_TILE_LAYER:
        return hasTileLayer != HAS_TILE_LAYER_EDEFAULT;
      case GameDSLPackage.GAME_TILE__TILE_LAYER:
        return tileLayer != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", id: ");
    result.append(id);
    result.append(", hasObjectLayer: ");
    result.append(hasObjectLayer);
    result.append(", hasTileLayer: ");
    result.append(hasTileLayer);
    result.append(')');
    return result.toString();
  }

} //GameTileImpl
