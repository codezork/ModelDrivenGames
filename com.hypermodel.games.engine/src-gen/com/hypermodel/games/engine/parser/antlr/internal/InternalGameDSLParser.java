package com.hypermodel.games.engine.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.hypermodel.games.engine.services.GameDSLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGameDSLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_ID", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "'{'", "'}'", "'configuration'", "'android'", "'minAndroidVersion'", "'targetAndroidVersion'", "'SDKApiLevel'", "'orientation'", "'icon'", "'name'", "'label'", "'useAccelerometer'", "'ios'", "'iosmoe'", "'game'", "'screenWidth'", "'screenHeight'", "'title'", "'pixelPerMeter'", "'timeStep'", "'velocityIterations'", "'positionIterations'", "'worldWidth'", "'worldHeight'", "'tileWidth'", "'tileHeight'", "'debug'", "'layers'", "'scenes'", "'screens'", "'regions'", "'layer'", "'index'", "'type'", "'screen'", "'atlas'", "'map'", "'scene'", "'tiles'", "'sprites'", "'isScore'", "'topPadding'", "'display'", "'valueType'", "'format'", "'initialValue'", "'deltaValue'", "'eachTimePeriod'", "'addValue'", "'setValue'", "'tile'", "'collisionId'", "'objectLayer'", "'tileLayer'", "'sprite'", "'radius'", "'velocity'", "'startPosition'", "'sensor'", "'sensorID'", "'activate'", "'if'", "'actors'", "'properties'", "'states'", "'initialState'", "'gameOverState'", "'events'", "'inputs'", "'input'", "'when'", "'collidesWith'", "'of'", "'do'", "'atBeginOfContact'", "'atEndOfContact'", "'vector('", "','", "')'", "'state'", "'ifFinished'", "'setFalse'", "'property'", "'onUpdateIfTrue'", "'onUpdateIfFalse'", "'isTrue'", "'('", "'animation'", "'duration'", "'frames'", "'startFrame'", "'from'", "'stands'", "'stand'", "'whichFrame'", "'region'", "'width'", "'height'", "'positionOffsetX'", "'positionOffsetY'", "'flipX'", "'flipY'", "'event'", "'-'", "'.'", "'@'", "'='", "'#'", "'['", "']'", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'+'", "'*'", "'**'", "'/'", "'%'", "'!'", "'as'", "'++'", "'--'", "'::'", "'?.'", "'|'", "';'", "'else'", "'switch'", "':'", "'default'", "'case'", "'for'", "'while'", "'var'", "'val'", "'extends'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'&'", "'object'", "'image'", "'group'", "'number'", "'decimal'", "'text'", "'landscape'", "'portrait'", "'fixture'", "'justPressed'", "'pressed'", "'left'", "'right'", "'up'", "'space'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=6;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int RULE_DECIMAL=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int T__108=108;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__103=103;
    public static final int T__106=106;
    public static final int T__105=105;
    public static final int RULE_HEX=7;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=11;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGameDSLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGameDSLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGameDSLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGameDSL.g"; }



     	private GameDSLGrammarAccess grammarAccess;

        public InternalGameDSLParser(TokenStream input, GameDSLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "GameModel";
       	}

       	@Override
       	protected GameDSLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleGameModel"
    // InternalGameDSL.g:65:1: entryRuleGameModel returns [EObject current=null] : iv_ruleGameModel= ruleGameModel EOF ;
    public final EObject entryRuleGameModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameModel = null;


        try {
            // InternalGameDSL.g:65:50: (iv_ruleGameModel= ruleGameModel EOF )
            // InternalGameDSL.g:66:2: iv_ruleGameModel= ruleGameModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameModel=ruleGameModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameModel"


    // $ANTLR start "ruleGameModel"
    // InternalGameDSL.g:72:1: ruleGameModel returns [EObject current=null] : ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_packages_1_0= ruleGamePackage ) )* ) ;
    public final EObject ruleGameModel() throws RecognitionException {
        EObject current = null;

        EObject lv_importSection_0_0 = null;

        EObject lv_packages_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:78:2: ( ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_packages_1_0= ruleGamePackage ) )* ) )
            // InternalGameDSL.g:79:2: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_packages_1_0= ruleGamePackage ) )* )
            {
            // InternalGameDSL.g:79:2: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_packages_1_0= ruleGamePackage ) )* )
            // InternalGameDSL.g:80:3: ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_packages_1_0= ruleGamePackage ) )*
            {
            // InternalGameDSL.g:80:3: ( (lv_importSection_0_0= ruleXImportSection ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==169) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalGameDSL.g:81:4: (lv_importSection_0_0= ruleXImportSection )
                    {
                    // InternalGameDSL.g:81:4: (lv_importSection_0_0= ruleXImportSection )
                    // InternalGameDSL.g:82:5: lv_importSection_0_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGameModelAccess().getImportSectionXImportSectionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_importSection_0_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGameModelRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:99:3: ( (lv_packages_1_0= ruleGamePackage ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==13) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalGameDSL.g:100:4: (lv_packages_1_0= ruleGamePackage )
            	    {
            	    // InternalGameDSL.g:100:4: (lv_packages_1_0= ruleGamePackage )
            	    // InternalGameDSL.g:101:5: lv_packages_1_0= ruleGamePackage
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGameModelAccess().getPackagesGamePackageParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_packages_1_0=ruleGamePackage();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGameModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"packages",
            	      						lv_packages_1_0,
            	      						"com.hypermodel.games.engine.GameDSL.GamePackage");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameModel"


    // $ANTLR start "entryRuleGamePackage"
    // InternalGameDSL.g:122:1: entryRuleGamePackage returns [EObject current=null] : iv_ruleGamePackage= ruleGamePackage EOF ;
    public final EObject entryRuleGamePackage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGamePackage = null;


        try {
            // InternalGameDSL.g:122:52: (iv_ruleGamePackage= ruleGamePackage EOF )
            // InternalGameDSL.g:123:2: iv_ruleGamePackage= ruleGamePackage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGamePackageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGamePackage=ruleGamePackage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGamePackage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGamePackage"


    // $ANTLR start "ruleGamePackage"
    // InternalGameDSL.g:129:1: ruleGamePackage returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_config_3_0= ruleGamePlatformConfig ) ) ( (lv_games_4_0= ruleGameRoot ) )* otherlv_5= '}' ) ;
    public final EObject ruleGamePackage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_config_3_0 = null;

        EObject lv_games_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:135:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_config_3_0= ruleGamePlatformConfig ) ) ( (lv_games_4_0= ruleGameRoot ) )* otherlv_5= '}' ) )
            // InternalGameDSL.g:136:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_config_3_0= ruleGamePlatformConfig ) ) ( (lv_games_4_0= ruleGameRoot ) )* otherlv_5= '}' )
            {
            // InternalGameDSL.g:136:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_config_3_0= ruleGamePlatformConfig ) ) ( (lv_games_4_0= ruleGameRoot ) )* otherlv_5= '}' )
            // InternalGameDSL.g:137:3: otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_config_3_0= ruleGamePlatformConfig ) ) ( (lv_games_4_0= ruleGameRoot ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGamePackageAccess().getPackageKeyword_0());
              		
            }
            // InternalGameDSL.g:141:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalGameDSL.g:142:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalGameDSL.g:142:4: (lv_name_1_0= ruleQualifiedName )
            // InternalGameDSL.g:143:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePackageAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePackageRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGamePackageAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:164:3: ( (lv_config_3_0= ruleGamePlatformConfig ) )
            // InternalGameDSL.g:165:4: (lv_config_3_0= ruleGamePlatformConfig )
            {
            // InternalGameDSL.g:165:4: (lv_config_3_0= ruleGamePlatformConfig )
            // InternalGameDSL.g:166:5: lv_config_3_0= ruleGamePlatformConfig
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePackageAccess().getConfigGamePlatformConfigParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_config_3_0=ruleGamePlatformConfig();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePackageRule());
              					}
              					set(
              						current,
              						"config",
              						lv_config_3_0,
              						"com.hypermodel.games.engine.GameDSL.GamePlatformConfig");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:183:3: ( (lv_games_4_0= ruleGameRoot ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==28) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalGameDSL.g:184:4: (lv_games_4_0= ruleGameRoot )
            	    {
            	    // InternalGameDSL.g:184:4: (lv_games_4_0= ruleGameRoot )
            	    // InternalGameDSL.g:185:5: lv_games_4_0= ruleGameRoot
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGamePackageAccess().getGamesGameRootParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_games_4_0=ruleGameRoot();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGamePackageRule());
            	      					}
            	      					add(
            	      						current,
            	      						"games",
            	      						lv_games_4_0,
            	      						"com.hypermodel.games.engine.GameDSL.GameRoot");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_5=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGamePackageAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGamePackage"


    // $ANTLR start "entryRuleGamePlatformConfig"
    // InternalGameDSL.g:210:1: entryRuleGamePlatformConfig returns [EObject current=null] : iv_ruleGamePlatformConfig= ruleGamePlatformConfig EOF ;
    public final EObject entryRuleGamePlatformConfig() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGamePlatformConfig = null;


        try {
            // InternalGameDSL.g:210:59: (iv_ruleGamePlatformConfig= ruleGamePlatformConfig EOF )
            // InternalGameDSL.g:211:2: iv_ruleGamePlatformConfig= ruleGamePlatformConfig EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGamePlatformConfigRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGamePlatformConfig=ruleGamePlatformConfig();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGamePlatformConfig; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGamePlatformConfig"


    // $ANTLR start "ruleGamePlatformConfig"
    // InternalGameDSL.g:217:1: ruleGamePlatformConfig returns [EObject current=null] : ( () otherlv_1= 'configuration' otherlv_2= '{' ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) ) ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) ) ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) ) otherlv_6= '}' ) ;
    public final EObject ruleGamePlatformConfig() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_android_3_0 = null;

        EObject lv_ios_4_0 = null;

        EObject lv_iosmoe_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:223:2: ( ( () otherlv_1= 'configuration' otherlv_2= '{' ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) ) ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) ) ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) ) otherlv_6= '}' ) )
            // InternalGameDSL.g:224:2: ( () otherlv_1= 'configuration' otherlv_2= '{' ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) ) ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) ) ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) ) otherlv_6= '}' )
            {
            // InternalGameDSL.g:224:2: ( () otherlv_1= 'configuration' otherlv_2= '{' ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) ) ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) ) ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) ) otherlv_6= '}' )
            // InternalGameDSL.g:225:3: () otherlv_1= 'configuration' otherlv_2= '{' ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) ) ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) ) ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) ) otherlv_6= '}'
            {
            // InternalGameDSL.g:225:3: ()
            // InternalGameDSL.g:226:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGamePlatformConfigAccess().getGamePlatformConfigAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGamePlatformConfigAccess().getConfigurationKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGamePlatformConfigAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:240:3: ( (lv_android_3_0= ruleGamePlatformConfigAndroid ) )
            // InternalGameDSL.g:241:4: (lv_android_3_0= ruleGamePlatformConfigAndroid )
            {
            // InternalGameDSL.g:241:4: (lv_android_3_0= ruleGamePlatformConfigAndroid )
            // InternalGameDSL.g:242:5: lv_android_3_0= ruleGamePlatformConfigAndroid
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePlatformConfigAccess().getAndroidGamePlatformConfigAndroidParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_android_3_0=ruleGamePlatformConfigAndroid();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePlatformConfigRule());
              					}
              					set(
              						current,
              						"android",
              						lv_android_3_0,
              						"com.hypermodel.games.engine.GameDSL.GamePlatformConfigAndroid");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:259:3: ( (lv_ios_4_0= ruleGamePlatformConfigIOS ) )
            // InternalGameDSL.g:260:4: (lv_ios_4_0= ruleGamePlatformConfigIOS )
            {
            // InternalGameDSL.g:260:4: (lv_ios_4_0= ruleGamePlatformConfigIOS )
            // InternalGameDSL.g:261:5: lv_ios_4_0= ruleGamePlatformConfigIOS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePlatformConfigAccess().getIosGamePlatformConfigIOSParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_ios_4_0=ruleGamePlatformConfigIOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePlatformConfigRule());
              					}
              					set(
              						current,
              						"ios",
              						lv_ios_4_0,
              						"com.hypermodel.games.engine.GameDSL.GamePlatformConfigIOS");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:278:3: ( (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE ) )
            // InternalGameDSL.g:279:4: (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE )
            {
            // InternalGameDSL.g:279:4: (lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE )
            // InternalGameDSL.g:280:5: lv_iosmoe_5_0= ruleGamePlatformConfigIOSMOE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePlatformConfigAccess().getIosmoeGamePlatformConfigIOSMOEParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_iosmoe_5_0=ruleGamePlatformConfigIOSMOE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePlatformConfigRule());
              					}
              					set(
              						current,
              						"iosmoe",
              						lv_iosmoe_5_0,
              						"com.hypermodel.games.engine.GameDSL.GamePlatformConfigIOSMOE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getGamePlatformConfigAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGamePlatformConfig"


    // $ANTLR start "entryRuleGamePlatformConfigAndroid"
    // InternalGameDSL.g:305:1: entryRuleGamePlatformConfigAndroid returns [EObject current=null] : iv_ruleGamePlatformConfigAndroid= ruleGamePlatformConfigAndroid EOF ;
    public final EObject entryRuleGamePlatformConfigAndroid() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGamePlatformConfigAndroid = null;


        try {
            // InternalGameDSL.g:305:66: (iv_ruleGamePlatformConfigAndroid= ruleGamePlatformConfigAndroid EOF )
            // InternalGameDSL.g:306:2: iv_ruleGamePlatformConfigAndroid= ruleGamePlatformConfigAndroid EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGamePlatformConfigAndroidRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGamePlatformConfigAndroid=ruleGamePlatformConfigAndroid();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGamePlatformConfigAndroid; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGamePlatformConfigAndroid"


    // $ANTLR start "ruleGamePlatformConfigAndroid"
    // InternalGameDSL.g:312:1: ruleGamePlatformConfigAndroid returns [EObject current=null] : ( () otherlv_1= 'android' otherlv_2= '{' otherlv_3= 'minAndroidVersion' ( (lv_minAndroidVersion_4_0= RULE_INT ) ) otherlv_5= 'targetAndroidVersion' ( (lv_targetAndroidVersion_6_0= RULE_INT ) ) otherlv_7= 'SDKApiLevel' ( (lv_apiLevel_8_0= RULE_INT ) ) otherlv_9= 'orientation' ( (lv_orientation_10_0= ruleGameScreenOrientation ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )? otherlv_19= '}' ) ;
    public final EObject ruleGamePlatformConfigAndroid() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_minAndroidVersion_4_0=null;
        Token otherlv_5=null;
        Token lv_targetAndroidVersion_6_0=null;
        Token otherlv_7=null;
        Token lv_apiLevel_8_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_appIcon_13_0=null;
        Token otherlv_14=null;
        Token lv_appName_15_0=null;
        Token otherlv_16=null;
        Token lv_appLabel_17_0=null;
        Token lv_useAccelerometer_18_0=null;
        Token otherlv_19=null;
        Enumerator lv_orientation_10_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:318:2: ( ( () otherlv_1= 'android' otherlv_2= '{' otherlv_3= 'minAndroidVersion' ( (lv_minAndroidVersion_4_0= RULE_INT ) ) otherlv_5= 'targetAndroidVersion' ( (lv_targetAndroidVersion_6_0= RULE_INT ) ) otherlv_7= 'SDKApiLevel' ( (lv_apiLevel_8_0= RULE_INT ) ) otherlv_9= 'orientation' ( (lv_orientation_10_0= ruleGameScreenOrientation ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )? otherlv_19= '}' ) )
            // InternalGameDSL.g:319:2: ( () otherlv_1= 'android' otherlv_2= '{' otherlv_3= 'minAndroidVersion' ( (lv_minAndroidVersion_4_0= RULE_INT ) ) otherlv_5= 'targetAndroidVersion' ( (lv_targetAndroidVersion_6_0= RULE_INT ) ) otherlv_7= 'SDKApiLevel' ( (lv_apiLevel_8_0= RULE_INT ) ) otherlv_9= 'orientation' ( (lv_orientation_10_0= ruleGameScreenOrientation ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )? otherlv_19= '}' )
            {
            // InternalGameDSL.g:319:2: ( () otherlv_1= 'android' otherlv_2= '{' otherlv_3= 'minAndroidVersion' ( (lv_minAndroidVersion_4_0= RULE_INT ) ) otherlv_5= 'targetAndroidVersion' ( (lv_targetAndroidVersion_6_0= RULE_INT ) ) otherlv_7= 'SDKApiLevel' ( (lv_apiLevel_8_0= RULE_INT ) ) otherlv_9= 'orientation' ( (lv_orientation_10_0= ruleGameScreenOrientation ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )? otherlv_19= '}' )
            // InternalGameDSL.g:320:3: () otherlv_1= 'android' otherlv_2= '{' otherlv_3= 'minAndroidVersion' ( (lv_minAndroidVersion_4_0= RULE_INT ) ) otherlv_5= 'targetAndroidVersion' ( (lv_targetAndroidVersion_6_0= RULE_INT ) ) otherlv_7= 'SDKApiLevel' ( (lv_apiLevel_8_0= RULE_INT ) ) otherlv_9= 'orientation' ( (lv_orientation_10_0= ruleGameScreenOrientation ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) ) ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )? otherlv_19= '}'
            {
            // InternalGameDSL.g:320:3: ()
            // InternalGameDSL.g:321:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGamePlatformConfigAndroidAccess().getGamePlatformConfigAndroidAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,17,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGamePlatformConfigAndroidAccess().getAndroidKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGamePlatformConfigAndroidAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGamePlatformConfigAndroidAccess().getMinAndroidVersionKeyword_3());
              		
            }
            // InternalGameDSL.g:339:3: ( (lv_minAndroidVersion_4_0= RULE_INT ) )
            // InternalGameDSL.g:340:4: (lv_minAndroidVersion_4_0= RULE_INT )
            {
            // InternalGameDSL.g:340:4: (lv_minAndroidVersion_4_0= RULE_INT )
            // InternalGameDSL.g:341:5: lv_minAndroidVersion_4_0= RULE_INT
            {
            lv_minAndroidVersion_4_0=(Token)match(input,RULE_INT,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_minAndroidVersion_4_0, grammarAccess.getGamePlatformConfigAndroidAccess().getMinAndroidVersionINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
              					}
              					setWithLastConsumed(
              						current,
              						"minAndroidVersion",
              						lv_minAndroidVersion_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,19,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGamePlatformConfigAndroidAccess().getTargetAndroidVersionKeyword_5());
              		
            }
            // InternalGameDSL.g:361:3: ( (lv_targetAndroidVersion_6_0= RULE_INT ) )
            // InternalGameDSL.g:362:4: (lv_targetAndroidVersion_6_0= RULE_INT )
            {
            // InternalGameDSL.g:362:4: (lv_targetAndroidVersion_6_0= RULE_INT )
            // InternalGameDSL.g:363:5: lv_targetAndroidVersion_6_0= RULE_INT
            {
            lv_targetAndroidVersion_6_0=(Token)match(input,RULE_INT,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_targetAndroidVersion_6_0, grammarAccess.getGamePlatformConfigAndroidAccess().getTargetAndroidVersionINTTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
              					}
              					setWithLastConsumed(
              						current,
              						"targetAndroidVersion",
              						lv_targetAndroidVersion_6_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_7=(Token)match(input,20,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGamePlatformConfigAndroidAccess().getSDKApiLevelKeyword_7());
              		
            }
            // InternalGameDSL.g:383:3: ( (lv_apiLevel_8_0= RULE_INT ) )
            // InternalGameDSL.g:384:4: (lv_apiLevel_8_0= RULE_INT )
            {
            // InternalGameDSL.g:384:4: (lv_apiLevel_8_0= RULE_INT )
            // InternalGameDSL.g:385:5: lv_apiLevel_8_0= RULE_INT
            {
            lv_apiLevel_8_0=(Token)match(input,RULE_INT,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_apiLevel_8_0, grammarAccess.getGamePlatformConfigAndroidAccess().getApiLevelINTTerminalRuleCall_8_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
              					}
              					setWithLastConsumed(
              						current,
              						"apiLevel",
              						lv_apiLevel_8_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_9=(Token)match(input,21,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getGamePlatformConfigAndroidAccess().getOrientationKeyword_9());
              		
            }
            // InternalGameDSL.g:405:3: ( (lv_orientation_10_0= ruleGameScreenOrientation ) )
            // InternalGameDSL.g:406:4: (lv_orientation_10_0= ruleGameScreenOrientation )
            {
            // InternalGameDSL.g:406:4: (lv_orientation_10_0= ruleGameScreenOrientation )
            // InternalGameDSL.g:407:5: lv_orientation_10_0= ruleGameScreenOrientation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGamePlatformConfigAndroidAccess().getOrientationGameScreenOrientationEnumRuleCall_10_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_orientation_10_0=ruleGameScreenOrientation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGamePlatformConfigAndroidRule());
              					}
              					set(
              						current,
              						"orientation",
              						lv_orientation_10_0,
              						"com.hypermodel.games.engine.GameDSL.GameScreenOrientation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:424:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) ) )
            // InternalGameDSL.g:425:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) )
            {
            // InternalGameDSL.g:425:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* ) )
            // InternalGameDSL.g:426:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11());
            // InternalGameDSL.g:429:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )* )
            // InternalGameDSL.g:430:6: ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )*
            {
            // InternalGameDSL.g:430:6: ( ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) ) )*
            loop4:
            do {
                int alt4=4;
                int LA4_0 = input.LA(1);

                if ( LA4_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 0) ) {
                    alt4=1;
                }
                else if ( LA4_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 1) ) {
                    alt4=2;
                }
                else if ( LA4_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 2) ) {
                    alt4=3;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalGameDSL.g:431:4: ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:431:4: ({...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) ) )
            	    // InternalGameDSL.g:432:5: {...}? => ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 0)");
            	    }
            	    // InternalGameDSL.g:432:123: ( ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) ) )
            	    // InternalGameDSL.g:433:6: ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 0);
            	    // InternalGameDSL.g:436:9: ({...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) ) )
            	    // InternalGameDSL.g:436:10: {...}? => (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "true");
            	    }
            	    // InternalGameDSL.g:436:19: (otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) ) )
            	    // InternalGameDSL.g:436:20: otherlv_12= 'icon' ( (lv_appIcon_13_0= RULE_STRING ) )
            	    {
            	    otherlv_12=(Token)match(input,22,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getGamePlatformConfigAndroidAccess().getIconKeyword_11_0_0());
            	      								
            	    }
            	    // InternalGameDSL.g:440:9: ( (lv_appIcon_13_0= RULE_STRING ) )
            	    // InternalGameDSL.g:441:10: (lv_appIcon_13_0= RULE_STRING )
            	    {
            	    // InternalGameDSL.g:441:10: (lv_appIcon_13_0= RULE_STRING )
            	    // InternalGameDSL.g:442:11: lv_appIcon_13_0= RULE_STRING
            	    {
            	    lv_appIcon_13_0=(Token)match(input,RULE_STRING,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_appIcon_13_0, grammarAccess.getGamePlatformConfigAndroidAccess().getAppIconSTRINGTerminalRuleCall_11_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"appIcon",
            	      												lv_appIcon_13_0,
            	      												"org.eclipse.xtext.xbase.Xtype.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGameDSL.g:464:4: ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:464:4: ({...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) ) )
            	    // InternalGameDSL.g:465:5: {...}? => ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 1)");
            	    }
            	    // InternalGameDSL.g:465:123: ( ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) ) )
            	    // InternalGameDSL.g:466:6: ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 1);
            	    // InternalGameDSL.g:469:9: ({...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) ) )
            	    // InternalGameDSL.g:469:10: {...}? => (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "true");
            	    }
            	    // InternalGameDSL.g:469:19: (otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) ) )
            	    // InternalGameDSL.g:469:20: otherlv_14= 'name' ( (lv_appName_15_0= RULE_STRING ) )
            	    {
            	    otherlv_14=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getGamePlatformConfigAndroidAccess().getNameKeyword_11_1_0());
            	      								
            	    }
            	    // InternalGameDSL.g:473:9: ( (lv_appName_15_0= RULE_STRING ) )
            	    // InternalGameDSL.g:474:10: (lv_appName_15_0= RULE_STRING )
            	    {
            	    // InternalGameDSL.g:474:10: (lv_appName_15_0= RULE_STRING )
            	    // InternalGameDSL.g:475:11: lv_appName_15_0= RULE_STRING
            	    {
            	    lv_appName_15_0=(Token)match(input,RULE_STRING,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_appName_15_0, grammarAccess.getGamePlatformConfigAndroidAccess().getAppNameSTRINGTerminalRuleCall_11_1_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"appName",
            	      												lv_appName_15_0,
            	      												"org.eclipse.xtext.xbase.Xtype.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalGameDSL.g:497:4: ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:497:4: ({...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) ) )
            	    // InternalGameDSL.g:498:5: {...}? => ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "getUnorderedGroupHelper().canSelect(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 2)");
            	    }
            	    // InternalGameDSL.g:498:123: ( ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) ) )
            	    // InternalGameDSL.g:499:6: ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11(), 2);
            	    // InternalGameDSL.g:502:9: ({...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) ) )
            	    // InternalGameDSL.g:502:10: {...}? => (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGamePlatformConfigAndroid", "true");
            	    }
            	    // InternalGameDSL.g:502:19: (otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) ) )
            	    // InternalGameDSL.g:502:20: otherlv_16= 'label' ( (lv_appLabel_17_0= RULE_STRING ) )
            	    {
            	    otherlv_16=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getGamePlatformConfigAndroidAccess().getLabelKeyword_11_2_0());
            	      								
            	    }
            	    // InternalGameDSL.g:506:9: ( (lv_appLabel_17_0= RULE_STRING ) )
            	    // InternalGameDSL.g:507:10: (lv_appLabel_17_0= RULE_STRING )
            	    {
            	    // InternalGameDSL.g:507:10: (lv_appLabel_17_0= RULE_STRING )
            	    // InternalGameDSL.g:508:11: lv_appLabel_17_0= RULE_STRING
            	    {
            	    lv_appLabel_17_0=(Token)match(input,RULE_STRING,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_appLabel_17_0, grammarAccess.getGamePlatformConfigAndroidAccess().getAppLabelSTRINGTerminalRuleCall_11_2_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"appLabel",
            	      												lv_appLabel_17_0,
            	      												"org.eclipse.xtext.xbase.Xtype.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getGamePlatformConfigAndroidAccess().getUnorderedGroup_11());

            }

            // InternalGameDSL.g:537:3: ( (lv_useAccelerometer_18_0= 'useAccelerometer' ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==25) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalGameDSL.g:538:4: (lv_useAccelerometer_18_0= 'useAccelerometer' )
                    {
                    // InternalGameDSL.g:538:4: (lv_useAccelerometer_18_0= 'useAccelerometer' )
                    // InternalGameDSL.g:539:5: lv_useAccelerometer_18_0= 'useAccelerometer'
                    {
                    lv_useAccelerometer_18_0=(Token)match(input,25,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_useAccelerometer_18_0, grammarAccess.getGamePlatformConfigAndroidAccess().getUseAccelerometerUseAccelerometerKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGamePlatformConfigAndroidRule());
                      					}
                      					setWithLastConsumed(current, "useAccelerometer", true, "useAccelerometer");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_19=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getGamePlatformConfigAndroidAccess().getRightCurlyBracketKeyword_13());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGamePlatformConfigAndroid"


    // $ANTLR start "entryRuleGamePlatformConfigIOS"
    // InternalGameDSL.g:559:1: entryRuleGamePlatformConfigIOS returns [EObject current=null] : iv_ruleGamePlatformConfigIOS= ruleGamePlatformConfigIOS EOF ;
    public final EObject entryRuleGamePlatformConfigIOS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGamePlatformConfigIOS = null;


        try {
            // InternalGameDSL.g:559:62: (iv_ruleGamePlatformConfigIOS= ruleGamePlatformConfigIOS EOF )
            // InternalGameDSL.g:560:2: iv_ruleGamePlatformConfigIOS= ruleGamePlatformConfigIOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGamePlatformConfigIOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGamePlatformConfigIOS=ruleGamePlatformConfigIOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGamePlatformConfigIOS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGamePlatformConfigIOS"


    // $ANTLR start "ruleGamePlatformConfigIOS"
    // InternalGameDSL.g:566:1: ruleGamePlatformConfigIOS returns [EObject current=null] : ( () otherlv_1= 'ios' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' ) ;
    public final EObject ruleGamePlatformConfigIOS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_useAccelerometer_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalGameDSL.g:572:2: ( ( () otherlv_1= 'ios' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' ) )
            // InternalGameDSL.g:573:2: ( () otherlv_1= 'ios' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' )
            {
            // InternalGameDSL.g:573:2: ( () otherlv_1= 'ios' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' )
            // InternalGameDSL.g:574:3: () otherlv_1= 'ios' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}'
            {
            // InternalGameDSL.g:574:3: ()
            // InternalGameDSL.g:575:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGamePlatformConfigIOSAccess().getGamePlatformConfigIOSAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,26,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGamePlatformConfigIOSAccess().getIosKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGamePlatformConfigIOSAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:589:3: ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==25) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalGameDSL.g:590:4: (lv_useAccelerometer_3_0= 'useAccelerometer' )
                    {
                    // InternalGameDSL.g:590:4: (lv_useAccelerometer_3_0= 'useAccelerometer' )
                    // InternalGameDSL.g:591:5: lv_useAccelerometer_3_0= 'useAccelerometer'
                    {
                    lv_useAccelerometer_3_0=(Token)match(input,25,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_useAccelerometer_3_0, grammarAccess.getGamePlatformConfigIOSAccess().getUseAccelerometerUseAccelerometerKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGamePlatformConfigIOSRule());
                      					}
                      					setWithLastConsumed(current, "useAccelerometer", true, "useAccelerometer");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGamePlatformConfigIOSAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGamePlatformConfigIOS"


    // $ANTLR start "entryRuleGamePlatformConfigIOSMOE"
    // InternalGameDSL.g:611:1: entryRuleGamePlatformConfigIOSMOE returns [EObject current=null] : iv_ruleGamePlatformConfigIOSMOE= ruleGamePlatformConfigIOSMOE EOF ;
    public final EObject entryRuleGamePlatformConfigIOSMOE() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGamePlatformConfigIOSMOE = null;


        try {
            // InternalGameDSL.g:611:65: (iv_ruleGamePlatformConfigIOSMOE= ruleGamePlatformConfigIOSMOE EOF )
            // InternalGameDSL.g:612:2: iv_ruleGamePlatformConfigIOSMOE= ruleGamePlatformConfigIOSMOE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGamePlatformConfigIOSMOERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGamePlatformConfigIOSMOE=ruleGamePlatformConfigIOSMOE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGamePlatformConfigIOSMOE; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGamePlatformConfigIOSMOE"


    // $ANTLR start "ruleGamePlatformConfigIOSMOE"
    // InternalGameDSL.g:618:1: ruleGamePlatformConfigIOSMOE returns [EObject current=null] : ( () otherlv_1= 'iosmoe' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' ) ;
    public final EObject ruleGamePlatformConfigIOSMOE() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_useAccelerometer_3_0=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalGameDSL.g:624:2: ( ( () otherlv_1= 'iosmoe' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' ) )
            // InternalGameDSL.g:625:2: ( () otherlv_1= 'iosmoe' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' )
            {
            // InternalGameDSL.g:625:2: ( () otherlv_1= 'iosmoe' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}' )
            // InternalGameDSL.g:626:3: () otherlv_1= 'iosmoe' otherlv_2= '{' ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )? otherlv_4= '}'
            {
            // InternalGameDSL.g:626:3: ()
            // InternalGameDSL.g:627:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGamePlatformConfigIOSMOEAccess().getGamePlatformConfigIOSMOEAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,27,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGamePlatformConfigIOSMOEAccess().getIosmoeKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGamePlatformConfigIOSMOEAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:641:3: ( (lv_useAccelerometer_3_0= 'useAccelerometer' ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==25) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalGameDSL.g:642:4: (lv_useAccelerometer_3_0= 'useAccelerometer' )
                    {
                    // InternalGameDSL.g:642:4: (lv_useAccelerometer_3_0= 'useAccelerometer' )
                    // InternalGameDSL.g:643:5: lv_useAccelerometer_3_0= 'useAccelerometer'
                    {
                    lv_useAccelerometer_3_0=(Token)match(input,25,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_useAccelerometer_3_0, grammarAccess.getGamePlatformConfigIOSMOEAccess().getUseAccelerometerUseAccelerometerKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGamePlatformConfigIOSMOERule());
                      					}
                      					setWithLastConsumed(current, "useAccelerometer", true, "useAccelerometer");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGamePlatformConfigIOSMOEAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGamePlatformConfigIOSMOE"


    // $ANTLR start "entryRuleGameRoot"
    // InternalGameDSL.g:663:1: entryRuleGameRoot returns [EObject current=null] : iv_ruleGameRoot= ruleGameRoot EOF ;
    public final EObject entryRuleGameRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameRoot = null;


        try {
            // InternalGameDSL.g:663:49: (iv_ruleGameRoot= ruleGameRoot EOF )
            // InternalGameDSL.g:664:2: iv_ruleGameRoot= ruleGameRoot EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameRootRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameRoot=ruleGameRoot();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameRoot; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameRoot"


    // $ANTLR start "ruleGameRoot"
    // InternalGameDSL.g:670:1: ruleGameRoot returns [EObject current=null] : ( () otherlv_1= 'game' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'screenWidth' ( (lv_width_4_0= RULE_INT ) ) otherlv_5= 'screenHeight' ( (lv_height_6_0= RULE_INT ) ) otherlv_7= 'title' ( (lv_title_8_0= RULE_STRING ) ) otherlv_9= 'pixelPerMeter' ( (lv_ppm_10_0= RULE_INT ) ) otherlv_11= 'timeStep' ( (lv_timeStep_12_0= ruleUnsignedNumber ) ) otherlv_13= 'velocityIterations' ( (lv_velocityIterations_14_0= RULE_INT ) ) otherlv_15= 'positionIterations' ( (lv_positionIterations_16_0= RULE_INT ) ) otherlv_17= 'worldWidth' ( (lv_worldWidth_18_0= RULE_INT ) ) otherlv_19= 'worldHeight' ( (lv_worldHeight_20_0= RULE_INT ) ) otherlv_21= 'tileWidth' ( (lv_tileWidth_22_0= RULE_INT ) ) otherlv_23= 'tileHeight' ( (lv_tileHeight_24_0= RULE_INT ) ) ( (lv_debug_25_0= 'debug' ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleGameRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_width_4_0=null;
        Token otherlv_5=null;
        Token lv_height_6_0=null;
        Token otherlv_7=null;
        Token lv_title_8_0=null;
        Token otherlv_9=null;
        Token lv_ppm_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_velocityIterations_14_0=null;
        Token otherlv_15=null;
        Token lv_positionIterations_16_0=null;
        Token otherlv_17=null;
        Token lv_worldWidth_18_0=null;
        Token otherlv_19=null;
        Token lv_worldHeight_20_0=null;
        Token otherlv_21=null;
        Token lv_tileWidth_22_0=null;
        Token otherlv_23=null;
        Token lv_tileHeight_24_0=null;
        Token lv_debug_25_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_timeStep_12_0 = null;

        EObject lv_layers_29_0 = null;

        EObject lv_scenes_33_0 = null;

        EObject lv_screens_37_0 = null;

        EObject lv_regions_41_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:676:2: ( ( () otherlv_1= 'game' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'screenWidth' ( (lv_width_4_0= RULE_INT ) ) otherlv_5= 'screenHeight' ( (lv_height_6_0= RULE_INT ) ) otherlv_7= 'title' ( (lv_title_8_0= RULE_STRING ) ) otherlv_9= 'pixelPerMeter' ( (lv_ppm_10_0= RULE_INT ) ) otherlv_11= 'timeStep' ( (lv_timeStep_12_0= ruleUnsignedNumber ) ) otherlv_13= 'velocityIterations' ( (lv_velocityIterations_14_0= RULE_INT ) ) otherlv_15= 'positionIterations' ( (lv_positionIterations_16_0= RULE_INT ) ) otherlv_17= 'worldWidth' ( (lv_worldWidth_18_0= RULE_INT ) ) otherlv_19= 'worldHeight' ( (lv_worldHeight_20_0= RULE_INT ) ) otherlv_21= 'tileWidth' ( (lv_tileWidth_22_0= RULE_INT ) ) otherlv_23= 'tileHeight' ( (lv_tileHeight_24_0= RULE_INT ) ) ( (lv_debug_25_0= 'debug' ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) ) ) )
            // InternalGameDSL.g:677:2: ( () otherlv_1= 'game' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'screenWidth' ( (lv_width_4_0= RULE_INT ) ) otherlv_5= 'screenHeight' ( (lv_height_6_0= RULE_INT ) ) otherlv_7= 'title' ( (lv_title_8_0= RULE_STRING ) ) otherlv_9= 'pixelPerMeter' ( (lv_ppm_10_0= RULE_INT ) ) otherlv_11= 'timeStep' ( (lv_timeStep_12_0= ruleUnsignedNumber ) ) otherlv_13= 'velocityIterations' ( (lv_velocityIterations_14_0= RULE_INT ) ) otherlv_15= 'positionIterations' ( (lv_positionIterations_16_0= RULE_INT ) ) otherlv_17= 'worldWidth' ( (lv_worldWidth_18_0= RULE_INT ) ) otherlv_19= 'worldHeight' ( (lv_worldHeight_20_0= RULE_INT ) ) otherlv_21= 'tileWidth' ( (lv_tileWidth_22_0= RULE_INT ) ) otherlv_23= 'tileHeight' ( (lv_tileHeight_24_0= RULE_INT ) ) ( (lv_debug_25_0= 'debug' ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalGameDSL.g:677:2: ( () otherlv_1= 'game' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'screenWidth' ( (lv_width_4_0= RULE_INT ) ) otherlv_5= 'screenHeight' ( (lv_height_6_0= RULE_INT ) ) otherlv_7= 'title' ( (lv_title_8_0= RULE_STRING ) ) otherlv_9= 'pixelPerMeter' ( (lv_ppm_10_0= RULE_INT ) ) otherlv_11= 'timeStep' ( (lv_timeStep_12_0= ruleUnsignedNumber ) ) otherlv_13= 'velocityIterations' ( (lv_velocityIterations_14_0= RULE_INT ) ) otherlv_15= 'positionIterations' ( (lv_positionIterations_16_0= RULE_INT ) ) otherlv_17= 'worldWidth' ( (lv_worldWidth_18_0= RULE_INT ) ) otherlv_19= 'worldHeight' ( (lv_worldHeight_20_0= RULE_INT ) ) otherlv_21= 'tileWidth' ( (lv_tileWidth_22_0= RULE_INT ) ) otherlv_23= 'tileHeight' ( (lv_tileHeight_24_0= RULE_INT ) ) ( (lv_debug_25_0= 'debug' ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) ) )
            // InternalGameDSL.g:678:3: () otherlv_1= 'game' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'screenWidth' ( (lv_width_4_0= RULE_INT ) ) otherlv_5= 'screenHeight' ( (lv_height_6_0= RULE_INT ) ) otherlv_7= 'title' ( (lv_title_8_0= RULE_STRING ) ) otherlv_9= 'pixelPerMeter' ( (lv_ppm_10_0= RULE_INT ) ) otherlv_11= 'timeStep' ( (lv_timeStep_12_0= ruleUnsignedNumber ) ) otherlv_13= 'velocityIterations' ( (lv_velocityIterations_14_0= RULE_INT ) ) otherlv_15= 'positionIterations' ( (lv_positionIterations_16_0= RULE_INT ) ) otherlv_17= 'worldWidth' ( (lv_worldWidth_18_0= RULE_INT ) ) otherlv_19= 'worldHeight' ( (lv_worldHeight_20_0= RULE_INT ) ) otherlv_21= 'tileWidth' ( (lv_tileWidth_22_0= RULE_INT ) ) otherlv_23= 'tileHeight' ( (lv_tileHeight_24_0= RULE_INT ) ) ( (lv_debug_25_0= 'debug' ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) )
            {
            // InternalGameDSL.g:678:3: ()
            // InternalGameDSL.g:679:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameRootAccess().getGameRootAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,28,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameRootAccess().getGameKeyword_1());
              		
            }
            // InternalGameDSL.g:689:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:690:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:690:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:691:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameRootAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameRootRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,29,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameRootAccess().getScreenWidthKeyword_3());
              		
            }
            // InternalGameDSL.g:712:3: ( (lv_width_4_0= RULE_INT ) )
            // InternalGameDSL.g:713:4: (lv_width_4_0= RULE_INT )
            {
            // InternalGameDSL.g:713:4: (lv_width_4_0= RULE_INT )
            // InternalGameDSL.g:714:5: lv_width_4_0= RULE_INT
            {
            lv_width_4_0=(Token)match(input,RULE_INT,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_width_4_0, grammarAccess.getGameRootAccess().getWidthINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"width",
              						lv_width_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,30,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameRootAccess().getScreenHeightKeyword_5());
              		
            }
            // InternalGameDSL.g:734:3: ( (lv_height_6_0= RULE_INT ) )
            // InternalGameDSL.g:735:4: (lv_height_6_0= RULE_INT )
            {
            // InternalGameDSL.g:735:4: (lv_height_6_0= RULE_INT )
            // InternalGameDSL.g:736:5: lv_height_6_0= RULE_INT
            {
            lv_height_6_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_height_6_0, grammarAccess.getGameRootAccess().getHeightINTTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"height",
              						lv_height_6_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_7=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGameRootAccess().getTitleKeyword_7());
              		
            }
            // InternalGameDSL.g:756:3: ( (lv_title_8_0= RULE_STRING ) )
            // InternalGameDSL.g:757:4: (lv_title_8_0= RULE_STRING )
            {
            // InternalGameDSL.g:757:4: (lv_title_8_0= RULE_STRING )
            // InternalGameDSL.g:758:5: lv_title_8_0= RULE_STRING
            {
            lv_title_8_0=(Token)match(input,RULE_STRING,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_title_8_0, grammarAccess.getGameRootAccess().getTitleSTRINGTerminalRuleCall_8_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"title",
              						lv_title_8_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_9=(Token)match(input,32,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getGameRootAccess().getPixelPerMeterKeyword_9());
              		
            }
            // InternalGameDSL.g:778:3: ( (lv_ppm_10_0= RULE_INT ) )
            // InternalGameDSL.g:779:4: (lv_ppm_10_0= RULE_INT )
            {
            // InternalGameDSL.g:779:4: (lv_ppm_10_0= RULE_INT )
            // InternalGameDSL.g:780:5: lv_ppm_10_0= RULE_INT
            {
            lv_ppm_10_0=(Token)match(input,RULE_INT,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_ppm_10_0, grammarAccess.getGameRootAccess().getPpmINTTerminalRuleCall_10_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"ppm",
              						lv_ppm_10_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_11=(Token)match(input,33,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getGameRootAccess().getTimeStepKeyword_11());
              		
            }
            // InternalGameDSL.g:800:3: ( (lv_timeStep_12_0= ruleUnsignedNumber ) )
            // InternalGameDSL.g:801:4: (lv_timeStep_12_0= ruleUnsignedNumber )
            {
            // InternalGameDSL.g:801:4: (lv_timeStep_12_0= ruleUnsignedNumber )
            // InternalGameDSL.g:802:5: lv_timeStep_12_0= ruleUnsignedNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameRootAccess().getTimeStepUnsignedNumberParserRuleCall_12_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_timeStep_12_0=ruleUnsignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameRootRule());
              					}
              					set(
              						current,
              						"timeStep",
              						lv_timeStep_12_0,
              						"com.hypermodel.games.engine.GameDSL.UnsignedNumber");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_13=(Token)match(input,34,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getGameRootAccess().getVelocityIterationsKeyword_13());
              		
            }
            // InternalGameDSL.g:823:3: ( (lv_velocityIterations_14_0= RULE_INT ) )
            // InternalGameDSL.g:824:4: (lv_velocityIterations_14_0= RULE_INT )
            {
            // InternalGameDSL.g:824:4: (lv_velocityIterations_14_0= RULE_INT )
            // InternalGameDSL.g:825:5: lv_velocityIterations_14_0= RULE_INT
            {
            lv_velocityIterations_14_0=(Token)match(input,RULE_INT,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_velocityIterations_14_0, grammarAccess.getGameRootAccess().getVelocityIterationsINTTerminalRuleCall_14_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"velocityIterations",
              						lv_velocityIterations_14_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_15=(Token)match(input,35,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getGameRootAccess().getPositionIterationsKeyword_15());
              		
            }
            // InternalGameDSL.g:845:3: ( (lv_positionIterations_16_0= RULE_INT ) )
            // InternalGameDSL.g:846:4: (lv_positionIterations_16_0= RULE_INT )
            {
            // InternalGameDSL.g:846:4: (lv_positionIterations_16_0= RULE_INT )
            // InternalGameDSL.g:847:5: lv_positionIterations_16_0= RULE_INT
            {
            lv_positionIterations_16_0=(Token)match(input,RULE_INT,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_positionIterations_16_0, grammarAccess.getGameRootAccess().getPositionIterationsINTTerminalRuleCall_16_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"positionIterations",
              						lv_positionIterations_16_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_17=(Token)match(input,36,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getGameRootAccess().getWorldWidthKeyword_17());
              		
            }
            // InternalGameDSL.g:867:3: ( (lv_worldWidth_18_0= RULE_INT ) )
            // InternalGameDSL.g:868:4: (lv_worldWidth_18_0= RULE_INT )
            {
            // InternalGameDSL.g:868:4: (lv_worldWidth_18_0= RULE_INT )
            // InternalGameDSL.g:869:5: lv_worldWidth_18_0= RULE_INT
            {
            lv_worldWidth_18_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_worldWidth_18_0, grammarAccess.getGameRootAccess().getWorldWidthINTTerminalRuleCall_18_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"worldWidth",
              						lv_worldWidth_18_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_19=(Token)match(input,37,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getGameRootAccess().getWorldHeightKeyword_19());
              		
            }
            // InternalGameDSL.g:889:3: ( (lv_worldHeight_20_0= RULE_INT ) )
            // InternalGameDSL.g:890:4: (lv_worldHeight_20_0= RULE_INT )
            {
            // InternalGameDSL.g:890:4: (lv_worldHeight_20_0= RULE_INT )
            // InternalGameDSL.g:891:5: lv_worldHeight_20_0= RULE_INT
            {
            lv_worldHeight_20_0=(Token)match(input,RULE_INT,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_worldHeight_20_0, grammarAccess.getGameRootAccess().getWorldHeightINTTerminalRuleCall_20_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"worldHeight",
              						lv_worldHeight_20_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_21=(Token)match(input,38,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getGameRootAccess().getTileWidthKeyword_21());
              		
            }
            // InternalGameDSL.g:911:3: ( (lv_tileWidth_22_0= RULE_INT ) )
            // InternalGameDSL.g:912:4: (lv_tileWidth_22_0= RULE_INT )
            {
            // InternalGameDSL.g:912:4: (lv_tileWidth_22_0= RULE_INT )
            // InternalGameDSL.g:913:5: lv_tileWidth_22_0= RULE_INT
            {
            lv_tileWidth_22_0=(Token)match(input,RULE_INT,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_tileWidth_22_0, grammarAccess.getGameRootAccess().getTileWidthINTTerminalRuleCall_22_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"tileWidth",
              						lv_tileWidth_22_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_23=(Token)match(input,39,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_23, grammarAccess.getGameRootAccess().getTileHeightKeyword_23());
              		
            }
            // InternalGameDSL.g:933:3: ( (lv_tileHeight_24_0= RULE_INT ) )
            // InternalGameDSL.g:934:4: (lv_tileHeight_24_0= RULE_INT )
            {
            // InternalGameDSL.g:934:4: (lv_tileHeight_24_0= RULE_INT )
            // InternalGameDSL.g:935:5: lv_tileHeight_24_0= RULE_INT
            {
            lv_tileHeight_24_0=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_tileHeight_24_0, grammarAccess.getGameRootAccess().getTileHeightINTTerminalRuleCall_24_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameRootRule());
              					}
              					setWithLastConsumed(
              						current,
              						"tileHeight",
              						lv_tileHeight_24_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            // InternalGameDSL.g:951:3: ( (lv_debug_25_0= 'debug' ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==40) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalGameDSL.g:952:4: (lv_debug_25_0= 'debug' )
                    {
                    // InternalGameDSL.g:952:4: (lv_debug_25_0= 'debug' )
                    // InternalGameDSL.g:953:5: lv_debug_25_0= 'debug'
                    {
                    lv_debug_25_0=(Token)match(input,40,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_debug_25_0, grammarAccess.getGameRootAccess().getDebugDebugKeyword_25_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGameRootRule());
                      					}
                      					setWithLastConsumed(current, "debug", true, "debug");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:965:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) ) )
            // InternalGameDSL.g:966:4: ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) )
            {
            // InternalGameDSL.g:966:4: ( ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?) )
            // InternalGameDSL.g:967:5: ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getGameRootAccess().getUnorderedGroup_26());
            // InternalGameDSL.g:970:5: ( ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?)
            // InternalGameDSL.g:971:6: ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+ {...}?
            {
            // InternalGameDSL.g:971:6: ( ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=5;
                int LA13_0 = input.LA(1);

                if ( LA13_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 2) ) {
                    alt13=3;
                }
                else if ( LA13_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 3) ) {
                    alt13=4;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalGameDSL.g:972:4: ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:972:4: ({...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) ) )
            	    // InternalGameDSL.g:973:5: {...}? => ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 0)");
            	    }
            	    // InternalGameDSL.g:973:106: ( ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) ) )
            	    // InternalGameDSL.g:974:6: ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 0);
            	    // InternalGameDSL.g:977:9: ({...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' ) )
            	    // InternalGameDSL.g:977:10: {...}? => (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "true");
            	    }
            	    // InternalGameDSL.g:977:19: (otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}' )
            	    // InternalGameDSL.g:977:20: otherlv_27= 'layers' otherlv_28= '{' ( (lv_layers_29_0= ruleGameLayer ) )* otherlv_30= '}'
            	    {
            	    otherlv_27=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getGameRootAccess().getLayersKeyword_26_0_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,14,FOLLOW_34); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getGameRootAccess().getLeftCurlyBracketKeyword_26_0_1());
            	      								
            	    }
            	    // InternalGameDSL.g:985:9: ( (lv_layers_29_0= ruleGameLayer ) )*
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==45) ) {
            	            alt9=1;
            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:986:10: (lv_layers_29_0= ruleGameLayer )
            	    	    {
            	    	    // InternalGameDSL.g:986:10: (lv_layers_29_0= ruleGameLayer )
            	    	    // InternalGameDSL.g:987:11: lv_layers_29_0= ruleGameLayer
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameRootAccess().getLayersGameLayerParserRuleCall_26_0_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_34);
            	    	    lv_layers_29_0=ruleGameLayer();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameRootRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"layers",
            	    	      												lv_layers_29_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameLayer");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop9;
            	        }
            	    } while (true);

            	    otherlv_30=(Token)match(input,15,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getGameRootAccess().getRightCurlyBracketKeyword_26_0_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameRootAccess().getUnorderedGroup_26());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGameDSL.g:1014:4: ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:1014:4: ({...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) ) )
            	    // InternalGameDSL.g:1015:5: {...}? => ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 1)");
            	    }
            	    // InternalGameDSL.g:1015:106: ( ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) ) )
            	    // InternalGameDSL.g:1016:6: ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 1);
            	    // InternalGameDSL.g:1019:9: ({...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' ) )
            	    // InternalGameDSL.g:1019:10: {...}? => (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "true");
            	    }
            	    // InternalGameDSL.g:1019:19: (otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}' )
            	    // InternalGameDSL.g:1019:20: otherlv_31= 'scenes' otherlv_32= '{' ( (lv_scenes_33_0= ruleGameScene ) )* otherlv_34= '}'
            	    {
            	    otherlv_31=(Token)match(input,42,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getGameRootAccess().getScenesKeyword_26_1_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,14,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getGameRootAccess().getLeftCurlyBracketKeyword_26_1_1());
            	      								
            	    }
            	    // InternalGameDSL.g:1027:9: ( (lv_scenes_33_0= ruleGameScene ) )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==51) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:1028:10: (lv_scenes_33_0= ruleGameScene )
            	    	    {
            	    	    // InternalGameDSL.g:1028:10: (lv_scenes_33_0= ruleGameScene )
            	    	    // InternalGameDSL.g:1029:11: lv_scenes_33_0= ruleGameScene
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameRootAccess().getScenesGameSceneParserRuleCall_26_1_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_36);
            	    	    lv_scenes_33_0=ruleGameScene();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameRootRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"scenes",
            	    	      												lv_scenes_33_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameScene");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);

            	    otherlv_34=(Token)match(input,15,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_34, grammarAccess.getGameRootAccess().getRightCurlyBracketKeyword_26_1_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameRootAccess().getUnorderedGroup_26());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalGameDSL.g:1056:4: ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:1056:4: ({...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) ) )
            	    // InternalGameDSL.g:1057:5: {...}? => ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 2)");
            	    }
            	    // InternalGameDSL.g:1057:106: ( ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) ) )
            	    // InternalGameDSL.g:1058:6: ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 2);
            	    // InternalGameDSL.g:1061:9: ({...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' ) )
            	    // InternalGameDSL.g:1061:10: {...}? => (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "true");
            	    }
            	    // InternalGameDSL.g:1061:19: (otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}' )
            	    // InternalGameDSL.g:1061:20: otherlv_35= 'screens' otherlv_36= '{' ( (lv_screens_37_0= ruleGameScreen ) )* otherlv_38= '}'
            	    {
            	    otherlv_35=(Token)match(input,43,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getGameRootAccess().getScreensKeyword_26_2_0());
            	      								
            	    }
            	    otherlv_36=(Token)match(input,14,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getGameRootAccess().getLeftCurlyBracketKeyword_26_2_1());
            	      								
            	    }
            	    // InternalGameDSL.g:1069:9: ( (lv_screens_37_0= ruleGameScreen ) )*
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==48) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:1070:10: (lv_screens_37_0= ruleGameScreen )
            	    	    {
            	    	    // InternalGameDSL.g:1070:10: (lv_screens_37_0= ruleGameScreen )
            	    	    // InternalGameDSL.g:1071:11: lv_screens_37_0= ruleGameScreen
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameRootAccess().getScreensGameScreenParserRuleCall_26_2_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_37);
            	    	    lv_screens_37_0=ruleGameScreen();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameRootRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"screens",
            	    	      												lv_screens_37_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameScreen");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop11;
            	        }
            	    } while (true);

            	    otherlv_38=(Token)match(input,15,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getGameRootAccess().getRightCurlyBracketKeyword_26_2_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameRootAccess().getUnorderedGroup_26());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalGameDSL.g:1098:4: ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:1098:4: ({...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) ) )
            	    // InternalGameDSL.g:1099:5: {...}? => ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 3)");
            	    }
            	    // InternalGameDSL.g:1099:106: ( ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) ) )
            	    // InternalGameDSL.g:1100:6: ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameRootAccess().getUnorderedGroup_26(), 3);
            	    // InternalGameDSL.g:1103:9: ({...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' ) )
            	    // InternalGameDSL.g:1103:10: {...}? => (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameRoot", "true");
            	    }
            	    // InternalGameDSL.g:1103:19: (otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}' )
            	    // InternalGameDSL.g:1103:20: otherlv_39= 'regions' otherlv_40= '{' ( (lv_regions_41_0= ruleGameTextureRegion ) )* otherlv_42= '}'
            	    {
            	    otherlv_39=(Token)match(input,44,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_39, grammarAccess.getGameRootAccess().getRegionsKeyword_26_3_0());
            	      								
            	    }
            	    otherlv_40=(Token)match(input,14,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getGameRootAccess().getLeftCurlyBracketKeyword_26_3_1());
            	      								
            	    }
            	    // InternalGameDSL.g:1111:9: ( (lv_regions_41_0= ruleGameTextureRegion ) )*
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==109) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:1112:10: (lv_regions_41_0= ruleGameTextureRegion )
            	    	    {
            	    	    // InternalGameDSL.g:1112:10: (lv_regions_41_0= ruleGameTextureRegion )
            	    	    // InternalGameDSL.g:1113:11: lv_regions_41_0= ruleGameTextureRegion
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameRootAccess().getRegionsGameTextureRegionParserRuleCall_26_3_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_38);
            	    	    lv_regions_41_0=ruleGameTextureRegion();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameRootRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"regions",
            	    	      												lv_regions_41_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameTextureRegion");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop12;
            	        }
            	    } while (true);

            	    otherlv_42=(Token)match(input,15,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_42, grammarAccess.getGameRootAccess().getRightCurlyBracketKeyword_26_3_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameRootAccess().getUnorderedGroup_26());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getGameRootAccess().getUnorderedGroup_26()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleGameRoot", "getUnorderedGroupHelper().canLeave(grammarAccess.getGameRootAccess().getUnorderedGroup_26())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getGameRootAccess().getUnorderedGroup_26());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameRoot"


    // $ANTLR start "entryRuleGameLayer"
    // InternalGameDSL.g:1152:1: entryRuleGameLayer returns [EObject current=null] : iv_ruleGameLayer= ruleGameLayer EOF ;
    public final EObject entryRuleGameLayer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameLayer = null;


        try {
            // InternalGameDSL.g:1152:50: (iv_ruleGameLayer= ruleGameLayer EOF )
            // InternalGameDSL.g:1153:2: iv_ruleGameLayer= ruleGameLayer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameLayerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameLayer=ruleGameLayer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameLayer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameLayer"


    // $ANTLR start "ruleGameLayer"
    // InternalGameDSL.g:1159:1: ruleGameLayer returns [EObject current=null] : ( () otherlv_1= 'layer' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'index' ( (lv_index_4_0= RULE_INT ) ) otherlv_5= 'type' ( (lv_type_6_0= ruleGameLayerType ) ) ) ;
    public final EObject ruleGameLayer() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_index_4_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_type_6_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1165:2: ( ( () otherlv_1= 'layer' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'index' ( (lv_index_4_0= RULE_INT ) ) otherlv_5= 'type' ( (lv_type_6_0= ruleGameLayerType ) ) ) )
            // InternalGameDSL.g:1166:2: ( () otherlv_1= 'layer' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'index' ( (lv_index_4_0= RULE_INT ) ) otherlv_5= 'type' ( (lv_type_6_0= ruleGameLayerType ) ) )
            {
            // InternalGameDSL.g:1166:2: ( () otherlv_1= 'layer' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'index' ( (lv_index_4_0= RULE_INT ) ) otherlv_5= 'type' ( (lv_type_6_0= ruleGameLayerType ) ) )
            // InternalGameDSL.g:1167:3: () otherlv_1= 'layer' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'index' ( (lv_index_4_0= RULE_INT ) ) otherlv_5= 'type' ( (lv_type_6_0= ruleGameLayerType ) )
            {
            // InternalGameDSL.g:1167:3: ()
            // InternalGameDSL.g:1168:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameLayerAccess().getGameLayerAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameLayerAccess().getLayerKeyword_1());
              		
            }
            // InternalGameDSL.g:1178:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1179:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1179:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1180:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameLayerAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameLayerRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,46,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameLayerAccess().getIndexKeyword_3());
              		
            }
            // InternalGameDSL.g:1201:3: ( (lv_index_4_0= RULE_INT ) )
            // InternalGameDSL.g:1202:4: (lv_index_4_0= RULE_INT )
            {
            // InternalGameDSL.g:1202:4: (lv_index_4_0= RULE_INT )
            // InternalGameDSL.g:1203:5: lv_index_4_0= RULE_INT
            {
            lv_index_4_0=(Token)match(input,RULE_INT,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_index_4_0, grammarAccess.getGameLayerAccess().getIndexINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameLayerRule());
              					}
              					setWithLastConsumed(
              						current,
              						"index",
              						lv_index_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,47,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameLayerAccess().getTypeKeyword_5());
              		
            }
            // InternalGameDSL.g:1223:3: ( (lv_type_6_0= ruleGameLayerType ) )
            // InternalGameDSL.g:1224:4: (lv_type_6_0= ruleGameLayerType )
            {
            // InternalGameDSL.g:1224:4: (lv_type_6_0= ruleGameLayerType )
            // InternalGameDSL.g:1225:5: lv_type_6_0= ruleGameLayerType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameLayerAccess().getTypeGameLayerTypeEnumRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_6_0=ruleGameLayerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameLayerRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_6_0,
              						"com.hypermodel.games.engine.GameDSL.GameLayerType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameLayer"


    // $ANTLR start "entryRuleGameScreen"
    // InternalGameDSL.g:1246:1: entryRuleGameScreen returns [EObject current=null] : iv_ruleGameScreen= ruleGameScreen EOF ;
    public final EObject entryRuleGameScreen() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameScreen = null;


        try {
            // InternalGameDSL.g:1246:51: (iv_ruleGameScreen= ruleGameScreen EOF )
            // InternalGameDSL.g:1247:2: iv_ruleGameScreen= ruleGameScreen EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameScreenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameScreen=ruleGameScreen();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameScreen; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameScreen"


    // $ANTLR start "ruleGameScreen"
    // InternalGameDSL.g:1253:1: ruleGameScreen returns [EObject current=null] : ( () otherlv_1= 'screen' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'atlas' ( (lv_atlasName_4_0= RULE_STRING ) ) otherlv_5= 'map' ( (lv_map_6_0= RULE_STRING ) ) otherlv_7= 'scene' ( (otherlv_8= RULE_ID ) ) otherlv_9= 'tiles' otherlv_10= '{' ( (lv_tiles_11_0= ruleGameTile ) )* otherlv_12= '}' otherlv_13= 'sprites' otherlv_14= '{' ( (lv_sprites_15_0= ruleGameSprite ) )* otherlv_16= '}' ) ;
    public final EObject ruleGameScreen() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_atlasName_4_0=null;
        Token otherlv_5=null;
        Token lv_map_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_tiles_11_0 = null;

        EObject lv_sprites_15_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1259:2: ( ( () otherlv_1= 'screen' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'atlas' ( (lv_atlasName_4_0= RULE_STRING ) ) otherlv_5= 'map' ( (lv_map_6_0= RULE_STRING ) ) otherlv_7= 'scene' ( (otherlv_8= RULE_ID ) ) otherlv_9= 'tiles' otherlv_10= '{' ( (lv_tiles_11_0= ruleGameTile ) )* otherlv_12= '}' otherlv_13= 'sprites' otherlv_14= '{' ( (lv_sprites_15_0= ruleGameSprite ) )* otherlv_16= '}' ) )
            // InternalGameDSL.g:1260:2: ( () otherlv_1= 'screen' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'atlas' ( (lv_atlasName_4_0= RULE_STRING ) ) otherlv_5= 'map' ( (lv_map_6_0= RULE_STRING ) ) otherlv_7= 'scene' ( (otherlv_8= RULE_ID ) ) otherlv_9= 'tiles' otherlv_10= '{' ( (lv_tiles_11_0= ruleGameTile ) )* otherlv_12= '}' otherlv_13= 'sprites' otherlv_14= '{' ( (lv_sprites_15_0= ruleGameSprite ) )* otherlv_16= '}' )
            {
            // InternalGameDSL.g:1260:2: ( () otherlv_1= 'screen' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'atlas' ( (lv_atlasName_4_0= RULE_STRING ) ) otherlv_5= 'map' ( (lv_map_6_0= RULE_STRING ) ) otherlv_7= 'scene' ( (otherlv_8= RULE_ID ) ) otherlv_9= 'tiles' otherlv_10= '{' ( (lv_tiles_11_0= ruleGameTile ) )* otherlv_12= '}' otherlv_13= 'sprites' otherlv_14= '{' ( (lv_sprites_15_0= ruleGameSprite ) )* otherlv_16= '}' )
            // InternalGameDSL.g:1261:3: () otherlv_1= 'screen' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'atlas' ( (lv_atlasName_4_0= RULE_STRING ) ) otherlv_5= 'map' ( (lv_map_6_0= RULE_STRING ) ) otherlv_7= 'scene' ( (otherlv_8= RULE_ID ) ) otherlv_9= 'tiles' otherlv_10= '{' ( (lv_tiles_11_0= ruleGameTile ) )* otherlv_12= '}' otherlv_13= 'sprites' otherlv_14= '{' ( (lv_sprites_15_0= ruleGameSprite ) )* otherlv_16= '}'
            {
            // InternalGameDSL.g:1261:3: ()
            // InternalGameDSL.g:1262:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameScreenAccess().getGameScreenAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,48,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameScreenAccess().getScreenKeyword_1());
              		
            }
            // InternalGameDSL.g:1272:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1273:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1273:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1274:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameScreenAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameScreenRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,49,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameScreenAccess().getAtlasKeyword_3());
              		
            }
            // InternalGameDSL.g:1295:3: ( (lv_atlasName_4_0= RULE_STRING ) )
            // InternalGameDSL.g:1296:4: (lv_atlasName_4_0= RULE_STRING )
            {
            // InternalGameDSL.g:1296:4: (lv_atlasName_4_0= RULE_STRING )
            // InternalGameDSL.g:1297:5: lv_atlasName_4_0= RULE_STRING
            {
            lv_atlasName_4_0=(Token)match(input,RULE_STRING,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_atlasName_4_0, grammarAccess.getGameScreenAccess().getAtlasNameSTRINGTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameScreenRule());
              					}
              					setWithLastConsumed(
              						current,
              						"atlasName",
              						lv_atlasName_4_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,50,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameScreenAccess().getMapKeyword_5());
              		
            }
            // InternalGameDSL.g:1317:3: ( (lv_map_6_0= RULE_STRING ) )
            // InternalGameDSL.g:1318:4: (lv_map_6_0= RULE_STRING )
            {
            // InternalGameDSL.g:1318:4: (lv_map_6_0= RULE_STRING )
            // InternalGameDSL.g:1319:5: lv_map_6_0= RULE_STRING
            {
            lv_map_6_0=(Token)match(input,RULE_STRING,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_map_6_0, grammarAccess.getGameScreenAccess().getMapSTRINGTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameScreenRule());
              					}
              					setWithLastConsumed(
              						current,
              						"map",
              						lv_map_6_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_7=(Token)match(input,51,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGameScreenAccess().getSceneKeyword_7());
              		
            }
            // InternalGameDSL.g:1339:3: ( (otherlv_8= RULE_ID ) )
            // InternalGameDSL.g:1340:4: (otherlv_8= RULE_ID )
            {
            // InternalGameDSL.g:1340:4: (otherlv_8= RULE_ID )
            // InternalGameDSL.g:1341:5: otherlv_8= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameScreenRule());
              					}
              				
            }
            otherlv_8=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_8, grammarAccess.getGameScreenAccess().getSceneGameSceneCrossReference_8_0());
              				
            }

            }


            }

            otherlv_9=(Token)match(input,52,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getGameScreenAccess().getTilesKeyword_9());
              		
            }
            otherlv_10=(Token)match(input,14,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getGameScreenAccess().getLeftCurlyBracketKeyword_10());
              		
            }
            // InternalGameDSL.g:1360:3: ( (lv_tiles_11_0= ruleGameTile ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==64) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalGameDSL.g:1361:4: (lv_tiles_11_0= ruleGameTile )
            	    {
            	    // InternalGameDSL.g:1361:4: (lv_tiles_11_0= ruleGameTile )
            	    // InternalGameDSL.g:1362:5: lv_tiles_11_0= ruleGameTile
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGameScreenAccess().getTilesGameTileParserRuleCall_11_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_46);
            	    lv_tiles_11_0=ruleGameTile();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGameScreenRule());
            	      					}
            	      					add(
            	      						current,
            	      						"tiles",
            	      						lv_tiles_11_0,
            	      						"com.hypermodel.games.engine.GameDSL.GameTile");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_12=(Token)match(input,15,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getGameScreenAccess().getRightCurlyBracketKeyword_12());
              		
            }
            otherlv_13=(Token)match(input,53,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getGameScreenAccess().getSpritesKeyword_13());
              		
            }
            otherlv_14=(Token)match(input,14,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getGameScreenAccess().getLeftCurlyBracketKeyword_14());
              		
            }
            // InternalGameDSL.g:1391:3: ( (lv_sprites_15_0= ruleGameSprite ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==68) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalGameDSL.g:1392:4: (lv_sprites_15_0= ruleGameSprite )
            	    {
            	    // InternalGameDSL.g:1392:4: (lv_sprites_15_0= ruleGameSprite )
            	    // InternalGameDSL.g:1393:5: lv_sprites_15_0= ruleGameSprite
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGameScreenAccess().getSpritesGameSpriteParserRuleCall_15_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_sprites_15_0=ruleGameSprite();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGameScreenRule());
            	      					}
            	      					add(
            	      						current,
            	      						"sprites",
            	      						lv_sprites_15_0,
            	      						"com.hypermodel.games.engine.GameDSL.GameSprite");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            otherlv_16=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getGameScreenAccess().getRightCurlyBracketKeyword_16());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameScreen"


    // $ANTLR start "entryRuleGameScene"
    // InternalGameDSL.g:1418:1: entryRuleGameScene returns [EObject current=null] : iv_ruleGameScene= ruleGameScene EOF ;
    public final EObject entryRuleGameScene() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameScene = null;


        try {
            // InternalGameDSL.g:1418:50: (iv_ruleGameScene= ruleGameScene EOF )
            // InternalGameDSL.g:1419:2: iv_ruleGameScene= ruleGameScene EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameSceneRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameScene=ruleGameScene();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameScene; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameScene"


    // $ANTLR start "ruleGameScene"
    // InternalGameDSL.g:1425:1: ruleGameScene returns [EObject current=null] : ( () otherlv_1= 'scene' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )? ) ;
    public final EObject ruleGameScene() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_hasScore_3_0=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_score_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1431:2: ( ( () otherlv_1= 'scene' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )? ) )
            // InternalGameDSL.g:1432:2: ( () otherlv_1= 'scene' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )? )
            {
            // InternalGameDSL.g:1432:2: ( () otherlv_1= 'scene' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )? )
            // InternalGameDSL.g:1433:3: () otherlv_1= 'scene' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )?
            {
            // InternalGameDSL.g:1433:3: ()
            // InternalGameDSL.g:1434:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameSceneAccess().getGameSceneAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,51,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameSceneAccess().getSceneKeyword_1());
              		
            }
            // InternalGameDSL.g:1444:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1445:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1445:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1446:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSceneAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSceneRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:1463:3: ( ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==54) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalGameDSL.g:1464:4: ( (lv_hasScore_3_0= 'isScore' ) ) ( (lv_score_4_0= ruleGameScore ) )
                    {
                    // InternalGameDSL.g:1464:4: ( (lv_hasScore_3_0= 'isScore' ) )
                    // InternalGameDSL.g:1465:5: (lv_hasScore_3_0= 'isScore' )
                    {
                    // InternalGameDSL.g:1465:5: (lv_hasScore_3_0= 'isScore' )
                    // InternalGameDSL.g:1466:6: lv_hasScore_3_0= 'isScore'
                    {
                    lv_hasScore_3_0=(Token)match(input,54,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasScore_3_0, grammarAccess.getGameSceneAccess().getHasScoreIsScoreKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSceneRule());
                      						}
                      						setWithLastConsumed(current, "hasScore", true, "isScore");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:1478:4: ( (lv_score_4_0= ruleGameScore ) )
                    // InternalGameDSL.g:1479:5: (lv_score_4_0= ruleGameScore )
                    {
                    // InternalGameDSL.g:1479:5: (lv_score_4_0= ruleGameScore )
                    // InternalGameDSL.g:1480:6: lv_score_4_0= ruleGameScore
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameSceneAccess().getScoreGameScoreParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_score_4_0=ruleGameScore();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameSceneRule());
                      						}
                      						set(
                      							current,
                      							"score",
                      							lv_score_4_0,
                      							"com.hypermodel.games.engine.GameDSL.GameScore");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameScene"


    // $ANTLR start "entryRuleGameScore"
    // InternalGameDSL.g:1502:1: entryRuleGameScore returns [EObject current=null] : iv_ruleGameScore= ruleGameScore EOF ;
    public final EObject entryRuleGameScore() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameScore = null;


        try {
            // InternalGameDSL.g:1502:50: (iv_ruleGameScore= ruleGameScore EOF )
            // InternalGameDSL.g:1503:2: iv_ruleGameScore= ruleGameScore EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameScoreRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameScore=ruleGameScore();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameScore; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameScore"


    // $ANTLR start "ruleGameScore"
    // InternalGameDSL.g:1509:1: ruleGameScore returns [EObject current=null] : ( () otherlv_1= 'topPadding' ( (lv_topPadding_2_0= RULE_INT ) ) otherlv_3= '{' ( (lv_displays_4_0= ruleGameDisplay ) )* otherlv_5= '}' ) ;
    public final EObject ruleGameScore() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_topPadding_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_displays_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1515:2: ( ( () otherlv_1= 'topPadding' ( (lv_topPadding_2_0= RULE_INT ) ) otherlv_3= '{' ( (lv_displays_4_0= ruleGameDisplay ) )* otherlv_5= '}' ) )
            // InternalGameDSL.g:1516:2: ( () otherlv_1= 'topPadding' ( (lv_topPadding_2_0= RULE_INT ) ) otherlv_3= '{' ( (lv_displays_4_0= ruleGameDisplay ) )* otherlv_5= '}' )
            {
            // InternalGameDSL.g:1516:2: ( () otherlv_1= 'topPadding' ( (lv_topPadding_2_0= RULE_INT ) ) otherlv_3= '{' ( (lv_displays_4_0= ruleGameDisplay ) )* otherlv_5= '}' )
            // InternalGameDSL.g:1517:3: () otherlv_1= 'topPadding' ( (lv_topPadding_2_0= RULE_INT ) ) otherlv_3= '{' ( (lv_displays_4_0= ruleGameDisplay ) )* otherlv_5= '}'
            {
            // InternalGameDSL.g:1517:3: ()
            // InternalGameDSL.g:1518:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameScoreAccess().getGameScoreAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,55,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameScoreAccess().getTopPaddingKeyword_1());
              		
            }
            // InternalGameDSL.g:1528:3: ( (lv_topPadding_2_0= RULE_INT ) )
            // InternalGameDSL.g:1529:4: (lv_topPadding_2_0= RULE_INT )
            {
            // InternalGameDSL.g:1529:4: (lv_topPadding_2_0= RULE_INT )
            // InternalGameDSL.g:1530:5: lv_topPadding_2_0= RULE_INT
            {
            lv_topPadding_2_0=(Token)match(input,RULE_INT,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_topPadding_2_0, grammarAccess.getGameScoreAccess().getTopPaddingINTTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameScoreRule());
              					}
              					setWithLastConsumed(
              						current,
              						"topPadding",
              						lv_topPadding_2_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,14,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameScoreAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGameDSL.g:1550:3: ( (lv_displays_4_0= ruleGameDisplay ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==56) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalGameDSL.g:1551:4: (lv_displays_4_0= ruleGameDisplay )
            	    {
            	    // InternalGameDSL.g:1551:4: (lv_displays_4_0= ruleGameDisplay )
            	    // InternalGameDSL.g:1552:5: lv_displays_4_0= ruleGameDisplay
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGameScoreAccess().getDisplaysGameDisplayParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_displays_4_0=ruleGameDisplay();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGameScoreRule());
            	      					}
            	      					add(
            	      						current,
            	      						"displays",
            	      						lv_displays_4_0,
            	      						"com.hypermodel.games.engine.GameDSL.GameDisplay");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            otherlv_5=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameScoreAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameScore"


    // $ANTLR start "entryRuleGameDisplay"
    // InternalGameDSL.g:1577:1: entryRuleGameDisplay returns [EObject current=null] : iv_ruleGameDisplay= ruleGameDisplay EOF ;
    public final EObject entryRuleGameDisplay() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameDisplay = null;


        try {
            // InternalGameDSL.g:1577:52: (iv_ruleGameDisplay= ruleGameDisplay EOF )
            // InternalGameDSL.g:1578:2: iv_ruleGameDisplay= ruleGameDisplay EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameDisplayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameDisplay=ruleGameDisplay();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameDisplay; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameDisplay"


    // $ANTLR start "ruleGameDisplay"
    // InternalGameDSL.g:1584:1: ruleGameDisplay returns [EObject current=null] : ( () otherlv_1= 'display' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'valueType' ( (lv_type_4_0= ruleGameDisplayValueType ) ) otherlv_5= 'format' ( (lv_format_6_0= RULE_STRING ) ) ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )? ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )? ( (lv_hasAdder_15_0= 'addValue' ) )? ( (lv_hasSetter_16_0= 'setValue' ) )? ) ;
    public final EObject ruleGameDisplay() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_format_6_0=null;
        Token lv_hasInitial_7_0=null;
        Token lv_initialIntValue_9_0=null;
        Token lv_initialStringValue_10_0=null;
        Token lv_hasDelta_11_0=null;
        Token otherlv_13=null;
        Token lv_hasAdder_15_0=null;
        Token lv_hasSetter_16_0=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        Enumerator lv_type_4_0 = null;

        AntlrDatatypeRuleToken lv_initialNumberValue_8_0 = null;

        AntlrDatatypeRuleToken lv_deltaValue_12_0 = null;

        AntlrDatatypeRuleToken lv_timePeriod_14_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1590:2: ( ( () otherlv_1= 'display' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'valueType' ( (lv_type_4_0= ruleGameDisplayValueType ) ) otherlv_5= 'format' ( (lv_format_6_0= RULE_STRING ) ) ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )? ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )? ( (lv_hasAdder_15_0= 'addValue' ) )? ( (lv_hasSetter_16_0= 'setValue' ) )? ) )
            // InternalGameDSL.g:1591:2: ( () otherlv_1= 'display' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'valueType' ( (lv_type_4_0= ruleGameDisplayValueType ) ) otherlv_5= 'format' ( (lv_format_6_0= RULE_STRING ) ) ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )? ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )? ( (lv_hasAdder_15_0= 'addValue' ) )? ( (lv_hasSetter_16_0= 'setValue' ) )? )
            {
            // InternalGameDSL.g:1591:2: ( () otherlv_1= 'display' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'valueType' ( (lv_type_4_0= ruleGameDisplayValueType ) ) otherlv_5= 'format' ( (lv_format_6_0= RULE_STRING ) ) ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )? ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )? ( (lv_hasAdder_15_0= 'addValue' ) )? ( (lv_hasSetter_16_0= 'setValue' ) )? )
            // InternalGameDSL.g:1592:3: () otherlv_1= 'display' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'valueType' ( (lv_type_4_0= ruleGameDisplayValueType ) ) otherlv_5= 'format' ( (lv_format_6_0= RULE_STRING ) ) ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )? ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )? ( (lv_hasAdder_15_0= 'addValue' ) )? ( (lv_hasSetter_16_0= 'setValue' ) )?
            {
            // InternalGameDSL.g:1592:3: ()
            // InternalGameDSL.g:1593:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameDisplayAccess().getGameDisplayAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,56,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameDisplayAccess().getDisplayKeyword_1());
              		
            }
            // InternalGameDSL.g:1603:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1604:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1604:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1605:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameDisplayAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameDisplayRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,57,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameDisplayAccess().getValueTypeKeyword_3());
              		
            }
            // InternalGameDSL.g:1626:3: ( (lv_type_4_0= ruleGameDisplayValueType ) )
            // InternalGameDSL.g:1627:4: (lv_type_4_0= ruleGameDisplayValueType )
            {
            // InternalGameDSL.g:1627:4: (lv_type_4_0= ruleGameDisplayValueType )
            // InternalGameDSL.g:1628:5: lv_type_4_0= ruleGameDisplayValueType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameDisplayAccess().getTypeGameDisplayValueTypeEnumRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_54);
            lv_type_4_0=ruleGameDisplayValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameDisplayRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"com.hypermodel.games.engine.GameDSL.GameDisplayValueType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,58,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameDisplayAccess().getFormatKeyword_5());
              		
            }
            // InternalGameDSL.g:1649:3: ( (lv_format_6_0= RULE_STRING ) )
            // InternalGameDSL.g:1650:4: (lv_format_6_0= RULE_STRING )
            {
            // InternalGameDSL.g:1650:4: (lv_format_6_0= RULE_STRING )
            // InternalGameDSL.g:1651:5: lv_format_6_0= RULE_STRING
            {
            lv_format_6_0=(Token)match(input,RULE_STRING,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_format_6_0, grammarAccess.getGameDisplayAccess().getFormatSTRINGTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameDisplayRule());
              					}
              					setWithLastConsumed(
              						current,
              						"format",
              						lv_format_6_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            // InternalGameDSL.g:1667:3: ( ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==59) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalGameDSL.g:1668:4: ( (lv_hasInitial_7_0= 'initialValue' ) ) ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) )
                    {
                    // InternalGameDSL.g:1668:4: ( (lv_hasInitial_7_0= 'initialValue' ) )
                    // InternalGameDSL.g:1669:5: (lv_hasInitial_7_0= 'initialValue' )
                    {
                    // InternalGameDSL.g:1669:5: (lv_hasInitial_7_0= 'initialValue' )
                    // InternalGameDSL.g:1670:6: lv_hasInitial_7_0= 'initialValue'
                    {
                    lv_hasInitial_7_0=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasInitial_7_0, grammarAccess.getGameDisplayAccess().getHasInitialInitialValueKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameDisplayRule());
                      						}
                      						setWithLastConsumed(current, "hasInitial", true, "initialValue");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:1682:4: ( ( (lv_initialNumberValue_8_0= ruleSignedNumber ) ) | ( (lv_initialIntValue_9_0= RULE_INT ) ) | ( (lv_initialStringValue_10_0= RULE_STRING ) ) )
                    int alt18=3;
                    switch ( input.LA(1) ) {
                    case 117:
                        {
                        alt18=1;
                        }
                        break;
                    case RULE_INT:
                        {
                        int LA18_2 = input.LA(2);

                        if ( (LA18_2==EOF||LA18_2==15||LA18_2==56||LA18_2==60||(LA18_2>=62 && LA18_2<=63)) ) {
                            alt18=2;
                        }
                        else if ( (LA18_2==118) ) {
                            alt18=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 18, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_STRING:
                        {
                        alt18=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }

                    switch (alt18) {
                        case 1 :
                            // InternalGameDSL.g:1683:5: ( (lv_initialNumberValue_8_0= ruleSignedNumber ) )
                            {
                            // InternalGameDSL.g:1683:5: ( (lv_initialNumberValue_8_0= ruleSignedNumber ) )
                            // InternalGameDSL.g:1684:6: (lv_initialNumberValue_8_0= ruleSignedNumber )
                            {
                            // InternalGameDSL.g:1684:6: (lv_initialNumberValue_8_0= ruleSignedNumber )
                            // InternalGameDSL.g:1685:7: lv_initialNumberValue_8_0= ruleSignedNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getGameDisplayAccess().getInitialNumberValueSignedNumberParserRuleCall_7_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_57);
                            lv_initialNumberValue_8_0=ruleSignedNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getGameDisplayRule());
                              							}
                              							set(
                              								current,
                              								"initialNumberValue",
                              								lv_initialNumberValue_8_0,
                              								"com.hypermodel.games.engine.GameDSL.SignedNumber");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:1703:5: ( (lv_initialIntValue_9_0= RULE_INT ) )
                            {
                            // InternalGameDSL.g:1703:5: ( (lv_initialIntValue_9_0= RULE_INT ) )
                            // InternalGameDSL.g:1704:6: (lv_initialIntValue_9_0= RULE_INT )
                            {
                            // InternalGameDSL.g:1704:6: (lv_initialIntValue_9_0= RULE_INT )
                            // InternalGameDSL.g:1705:7: lv_initialIntValue_9_0= RULE_INT
                            {
                            lv_initialIntValue_9_0=(Token)match(input,RULE_INT,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialIntValue_9_0, grammarAccess.getGameDisplayAccess().getInitialIntValueINTTerminalRuleCall_7_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getGameDisplayRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"initialIntValue",
                              								lv_initialIntValue_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalGameDSL.g:1722:5: ( (lv_initialStringValue_10_0= RULE_STRING ) )
                            {
                            // InternalGameDSL.g:1722:5: ( (lv_initialStringValue_10_0= RULE_STRING ) )
                            // InternalGameDSL.g:1723:6: (lv_initialStringValue_10_0= RULE_STRING )
                            {
                            // InternalGameDSL.g:1723:6: (lv_initialStringValue_10_0= RULE_STRING )
                            // InternalGameDSL.g:1724:7: lv_initialStringValue_10_0= RULE_STRING
                            {
                            lv_initialStringValue_10_0=(Token)match(input,RULE_STRING,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialStringValue_10_0, grammarAccess.getGameDisplayAccess().getInitialStringValueSTRINGTerminalRuleCall_7_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getGameDisplayRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"initialStringValue",
                              								lv_initialStringValue_10_0,
                              								"org.eclipse.xtext.xbase.Xtype.STRING");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:1742:3: ( ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==60) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalGameDSL.g:1743:4: ( (lv_hasDelta_11_0= 'deltaValue' ) ) ( (lv_deltaValue_12_0= ruleSignedNumber ) ) otherlv_13= 'eachTimePeriod' ( (lv_timePeriod_14_0= ruleUnsignedNumber ) )
                    {
                    // InternalGameDSL.g:1743:4: ( (lv_hasDelta_11_0= 'deltaValue' ) )
                    // InternalGameDSL.g:1744:5: (lv_hasDelta_11_0= 'deltaValue' )
                    {
                    // InternalGameDSL.g:1744:5: (lv_hasDelta_11_0= 'deltaValue' )
                    // InternalGameDSL.g:1745:6: lv_hasDelta_11_0= 'deltaValue'
                    {
                    lv_hasDelta_11_0=(Token)match(input,60,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasDelta_11_0, grammarAccess.getGameDisplayAccess().getHasDeltaDeltaValueKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameDisplayRule());
                      						}
                      						setWithLastConsumed(current, "hasDelta", true, "deltaValue");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:1757:4: ( (lv_deltaValue_12_0= ruleSignedNumber ) )
                    // InternalGameDSL.g:1758:5: (lv_deltaValue_12_0= ruleSignedNumber )
                    {
                    // InternalGameDSL.g:1758:5: (lv_deltaValue_12_0= ruleSignedNumber )
                    // InternalGameDSL.g:1759:6: lv_deltaValue_12_0= ruleSignedNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameDisplayAccess().getDeltaValueSignedNumberParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_deltaValue_12_0=ruleSignedNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameDisplayRule());
                      						}
                      						set(
                      							current,
                      							"deltaValue",
                      							lv_deltaValue_12_0,
                      							"com.hypermodel.games.engine.GameDSL.SignedNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,61,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getGameDisplayAccess().getEachTimePeriodKeyword_8_2());
                      			
                    }
                    // InternalGameDSL.g:1780:4: ( (lv_timePeriod_14_0= ruleUnsignedNumber ) )
                    // InternalGameDSL.g:1781:5: (lv_timePeriod_14_0= ruleUnsignedNumber )
                    {
                    // InternalGameDSL.g:1781:5: (lv_timePeriod_14_0= ruleUnsignedNumber )
                    // InternalGameDSL.g:1782:6: lv_timePeriod_14_0= ruleUnsignedNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameDisplayAccess().getTimePeriodUnsignedNumberParserRuleCall_8_3_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_timePeriod_14_0=ruleUnsignedNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameDisplayRule());
                      						}
                      						set(
                      							current,
                      							"timePeriod",
                      							lv_timePeriod_14_0,
                      							"com.hypermodel.games.engine.GameDSL.UnsignedNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:1800:3: ( (lv_hasAdder_15_0= 'addValue' ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==62) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalGameDSL.g:1801:4: (lv_hasAdder_15_0= 'addValue' )
                    {
                    // InternalGameDSL.g:1801:4: (lv_hasAdder_15_0= 'addValue' )
                    // InternalGameDSL.g:1802:5: lv_hasAdder_15_0= 'addValue'
                    {
                    lv_hasAdder_15_0=(Token)match(input,62,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hasAdder_15_0, grammarAccess.getGameDisplayAccess().getHasAdderAddValueKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGameDisplayRule());
                      					}
                      					setWithLastConsumed(current, "hasAdder", true, "addValue");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:1814:3: ( (lv_hasSetter_16_0= 'setValue' ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==63) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalGameDSL.g:1815:4: (lv_hasSetter_16_0= 'setValue' )
                    {
                    // InternalGameDSL.g:1815:4: (lv_hasSetter_16_0= 'setValue' )
                    // InternalGameDSL.g:1816:5: lv_hasSetter_16_0= 'setValue'
                    {
                    lv_hasSetter_16_0=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hasSetter_16_0, grammarAccess.getGameDisplayAccess().getHasSetterSetValueKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGameDisplayRule());
                      					}
                      					setWithLastConsumed(current, "hasSetter", true, "setValue");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameDisplay"


    // $ANTLR start "entryRuleGameTile"
    // InternalGameDSL.g:1832:1: entryRuleGameTile returns [EObject current=null] : iv_ruleGameTile= ruleGameTile EOF ;
    public final EObject entryRuleGameTile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameTile = null;


        try {
            // InternalGameDSL.g:1832:49: (iv_ruleGameTile= ruleGameTile EOF )
            // InternalGameDSL.g:1833:2: iv_ruleGameTile= ruleGameTile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameTileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameTile=ruleGameTile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameTile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameTile"


    // $ANTLR start "ruleGameTile"
    // InternalGameDSL.g:1839:1: ruleGameTile returns [EObject current=null] : ( () otherlv_1= 'tile' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )? ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )? ) ;
    public final EObject ruleGameTile() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_id_4_0=null;
        Token lv_hasObjectLayer_5_0=null;
        Token otherlv_6=null;
        Token lv_hasTileLayer_7_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1845:2: ( ( () otherlv_1= 'tile' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )? ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )? ) )
            // InternalGameDSL.g:1846:2: ( () otherlv_1= 'tile' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )? ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )? )
            {
            // InternalGameDSL.g:1846:2: ( () otherlv_1= 'tile' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )? ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )? )
            // InternalGameDSL.g:1847:3: () otherlv_1= 'tile' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )? ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )?
            {
            // InternalGameDSL.g:1847:3: ()
            // InternalGameDSL.g:1848:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameTileAccess().getGameTileAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameTileAccess().getTileKeyword_1());
              		
            }
            // InternalGameDSL.g:1858:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1859:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1859:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1860:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameTileAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_62);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameTileRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,65,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameTileAccess().getCollisionIdKeyword_3());
              		
            }
            // InternalGameDSL.g:1881:3: ( (lv_id_4_0= RULE_INT ) )
            // InternalGameDSL.g:1882:4: (lv_id_4_0= RULE_INT )
            {
            // InternalGameDSL.g:1882:4: (lv_id_4_0= RULE_INT )
            // InternalGameDSL.g:1883:5: lv_id_4_0= RULE_INT
            {
            lv_id_4_0=(Token)match(input,RULE_INT,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_4_0, grammarAccess.getGameTileAccess().getIdINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameTileRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            // InternalGameDSL.g:1899:3: ( ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==66) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalGameDSL.g:1900:4: ( (lv_hasObjectLayer_5_0= 'objectLayer' ) ) ( (otherlv_6= RULE_ID ) )
                    {
                    // InternalGameDSL.g:1900:4: ( (lv_hasObjectLayer_5_0= 'objectLayer' ) )
                    // InternalGameDSL.g:1901:5: (lv_hasObjectLayer_5_0= 'objectLayer' )
                    {
                    // InternalGameDSL.g:1901:5: (lv_hasObjectLayer_5_0= 'objectLayer' )
                    // InternalGameDSL.g:1902:6: lv_hasObjectLayer_5_0= 'objectLayer'
                    {
                    lv_hasObjectLayer_5_0=(Token)match(input,66,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasObjectLayer_5_0, grammarAccess.getGameTileAccess().getHasObjectLayerObjectLayerKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameTileRule());
                      						}
                      						setWithLastConsumed(current, "hasObjectLayer", true, "objectLayer");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:1914:4: ( (otherlv_6= RULE_ID ) )
                    // InternalGameDSL.g:1915:5: (otherlv_6= RULE_ID )
                    {
                    // InternalGameDSL.g:1915:5: (otherlv_6= RULE_ID )
                    // InternalGameDSL.g:1916:6: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameTileRule());
                      						}
                      					
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_6, grammarAccess.getGameTileAccess().getObjectLayerGameLayerCrossReference_5_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:1928:3: ( ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==67) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalGameDSL.g:1929:4: ( (lv_hasTileLayer_7_0= 'tileLayer' ) ) ( (otherlv_8= RULE_ID ) )
                    {
                    // InternalGameDSL.g:1929:4: ( (lv_hasTileLayer_7_0= 'tileLayer' ) )
                    // InternalGameDSL.g:1930:5: (lv_hasTileLayer_7_0= 'tileLayer' )
                    {
                    // InternalGameDSL.g:1930:5: (lv_hasTileLayer_7_0= 'tileLayer' )
                    // InternalGameDSL.g:1931:6: lv_hasTileLayer_7_0= 'tileLayer'
                    {
                    lv_hasTileLayer_7_0=(Token)match(input,67,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasTileLayer_7_0, grammarAccess.getGameTileAccess().getHasTileLayerTileLayerKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameTileRule());
                      						}
                      						setWithLastConsumed(current, "hasTileLayer", true, "tileLayer");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:1943:4: ( (otherlv_8= RULE_ID ) )
                    // InternalGameDSL.g:1944:5: (otherlv_8= RULE_ID )
                    {
                    // InternalGameDSL.g:1944:5: (otherlv_8= RULE_ID )
                    // InternalGameDSL.g:1945:6: otherlv_8= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameTileRule());
                      						}
                      					
                    }
                    otherlv_8=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_8, grammarAccess.getGameTileAccess().getTileLayerGameLayerCrossReference_6_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameTile"


    // $ANTLR start "entryRuleGameSprite"
    // InternalGameDSL.g:1961:1: entryRuleGameSprite returns [EObject current=null] : iv_ruleGameSprite= ruleGameSprite EOF ;
    public final EObject entryRuleGameSprite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameSprite = null;


        try {
            // InternalGameDSL.g:1961:51: (iv_ruleGameSprite= ruleGameSprite EOF )
            // InternalGameDSL.g:1962:2: iv_ruleGameSprite= ruleGameSprite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameSpriteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameSprite=ruleGameSprite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameSprite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameSprite"


    // $ANTLR start "ruleGameSprite"
    // InternalGameDSL.g:1968:1: ruleGameSprite returns [EObject current=null] : ( () otherlv_1= 'sprite' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) otherlv_5= 'radius' ( (lv_radius_6_0= RULE_INT ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleGameSprite() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_id_4_0=null;
        Token otherlv_5=null;
        Token lv_radius_6_0=null;
        Token lv_hasVelocity_8_0=null;
        Token lv_hasLayer_10_0=null;
        Token otherlv_11=null;
        Token lv_hasStartPosition_12_0=null;
        Token lv_hasSensor_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_sensorID_19_0=null;
        Token lv_hasActivationRule_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_velocity_9_0 = null;

        EObject lv_startPosition_13_0 = null;

        EObject lv_vectors2d_16_0 = null;

        EObject lv_rule_22_0 = null;

        EObject lv_actors_25_0 = null;

        EObject lv_properties_29_0 = null;

        EObject lv_states_33_0 = null;

        EObject lv_events_41_0 = null;

        EObject lv_inputs_45_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:1974:2: ( ( () otherlv_1= 'sprite' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) otherlv_5= 'radius' ( (lv_radius_6_0= RULE_INT ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) ) ) )
            // InternalGameDSL.g:1975:2: ( () otherlv_1= 'sprite' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) otherlv_5= 'radius' ( (lv_radius_6_0= RULE_INT ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) ) )
            {
            // InternalGameDSL.g:1975:2: ( () otherlv_1= 'sprite' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) otherlv_5= 'radius' ( (lv_radius_6_0= RULE_INT ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) ) )
            // InternalGameDSL.g:1976:3: () otherlv_1= 'sprite' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'collisionId' ( (lv_id_4_0= RULE_INT ) ) otherlv_5= 'radius' ( (lv_radius_6_0= RULE_INT ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) )
            {
            // InternalGameDSL.g:1976:3: ()
            // InternalGameDSL.g:1977:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameSpriteAccess().getGameSpriteAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameSpriteAccess().getSpriteKeyword_1());
              		
            }
            // InternalGameDSL.g:1987:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:1988:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:1988:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:1989:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_62);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,65,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameSpriteAccess().getCollisionIdKeyword_3());
              		
            }
            // InternalGameDSL.g:2010:3: ( (lv_id_4_0= RULE_INT ) )
            // InternalGameDSL.g:2011:4: (lv_id_4_0= RULE_INT )
            {
            // InternalGameDSL.g:2011:4: (lv_id_4_0= RULE_INT )
            // InternalGameDSL.g:2012:5: lv_id_4_0= RULE_INT
            {
            lv_id_4_0=(Token)match(input,RULE_INT,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_4_0, grammarAccess.getGameSpriteAccess().getIdINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameSpriteRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,69,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameSpriteAccess().getRadiusKeyword_5());
              		
            }
            // InternalGameDSL.g:2032:3: ( (lv_radius_6_0= RULE_INT ) )
            // InternalGameDSL.g:2033:4: (lv_radius_6_0= RULE_INT )
            {
            // InternalGameDSL.g:2033:4: (lv_radius_6_0= RULE_INT )
            // InternalGameDSL.g:2034:5: lv_radius_6_0= RULE_INT
            {
            lv_radius_6_0=(Token)match(input,RULE_INT,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_radius_6_0, grammarAccess.getGameSpriteAccess().getRadiusINTTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameSpriteRule());
              					}
              					setWithLastConsumed(
              						current,
              						"radius",
              						lv_radius_6_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            // InternalGameDSL.g:2050:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) ) )
            // InternalGameDSL.g:2051:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) )
            {
            // InternalGameDSL.g:2051:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* ) )
            // InternalGameDSL.g:2052:5: ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());
            // InternalGameDSL.g:2055:5: ( ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )* )
            // InternalGameDSL.g:2056:6: ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )*
            {
            // InternalGameDSL.g:2056:6: ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )*
            loop33:
            do {
                int alt33=10;
                alt33 = dfa33.predict(input);
                switch (alt33) {
            	case 1 :
            	    // InternalGameDSL.g:2057:4: ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:2057:4: ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) )
            	    // InternalGameDSL.g:2058:5: {...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 0)");
            	    }
            	    // InternalGameDSL.g:2058:107: ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) )
            	    // InternalGameDSL.g:2059:6: ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 0);
            	    // InternalGameDSL.g:2062:9: ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) )
            	    // InternalGameDSL.g:2062:10: {...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2062:19: ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) )
            	    // InternalGameDSL.g:2062:20: ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) )
            	    {
            	    // InternalGameDSL.g:2062:20: ( (lv_hasVelocity_8_0= 'velocity' ) )
            	    // InternalGameDSL.g:2063:10: (lv_hasVelocity_8_0= 'velocity' )
            	    {
            	    // InternalGameDSL.g:2063:10: (lv_hasVelocity_8_0= 'velocity' )
            	    // InternalGameDSL.g:2064:11: lv_hasVelocity_8_0= 'velocity'
            	    {
            	    lv_hasVelocity_8_0=(Token)match(input,70,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_hasVelocity_8_0, grammarAccess.getGameSpriteAccess().getHasVelocityVelocityKeyword_7_0_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGameSpriteRule());
            	      											}
            	      											setWithLastConsumed(current, "hasVelocity", true, "velocity");
            	      										
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:2076:9: ( (lv_velocity_9_0= ruleGameVector2d ) )
            	    // InternalGameDSL.g:2077:10: (lv_velocity_9_0= ruleGameVector2d )
            	    {
            	    // InternalGameDSL.g:2077:10: (lv_velocity_9_0= ruleGameVector2d )
            	    // InternalGameDSL.g:2078:11: lv_velocity_9_0= ruleGameVector2d
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getVelocityGameVector2dParserRuleCall_7_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_velocity_9_0=ruleGameVector2d();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	      											}
            	      											set(
            	      												current,
            	      												"velocity",
            	      												lv_velocity_9_0,
            	      												"com.hypermodel.games.engine.GameDSL.GameVector2d");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGameDSL.g:2101:4: ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:2101:4: ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) )
            	    // InternalGameDSL.g:2102:5: {...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 1)");
            	    }
            	    // InternalGameDSL.g:2102:107: ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) )
            	    // InternalGameDSL.g:2103:6: ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 1);
            	    // InternalGameDSL.g:2106:9: ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) )
            	    // InternalGameDSL.g:2106:10: {...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2106:19: ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) )
            	    int alt25=2;
            	    int LA25_0 = input.LA(1);

            	    if ( (LA25_0==45) ) {
            	        alt25=1;
            	    }
            	    else if ( (LA25_0==71) ) {
            	        alt25=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 25, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt25) {
            	        case 1 :
            	            // InternalGameDSL.g:2106:20: ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) )
            	            {
            	            // InternalGameDSL.g:2106:20: ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) )
            	            // InternalGameDSL.g:2107:10: ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) )
            	            {
            	            // InternalGameDSL.g:2107:10: ( (lv_hasLayer_10_0= 'layer' ) )
            	            // InternalGameDSL.g:2108:11: (lv_hasLayer_10_0= 'layer' )
            	            {
            	            // InternalGameDSL.g:2108:11: (lv_hasLayer_10_0= 'layer' )
            	            // InternalGameDSL.g:2109:12: lv_hasLayer_10_0= 'layer'
            	            {
            	            lv_hasLayer_10_0=(Token)match(input,45,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_hasLayer_10_0, grammarAccess.getGameSpriteAccess().getHasLayerLayerKeyword_7_1_0_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getGameSpriteRule());
            	              												}
            	              												setWithLastConsumed(current, "hasLayer", true, "layer");
            	              											
            	            }

            	            }


            	            }

            	            // InternalGameDSL.g:2121:10: ( (otherlv_11= RULE_ID ) )
            	            // InternalGameDSL.g:2122:11: (otherlv_11= RULE_ID )
            	            {
            	            // InternalGameDSL.g:2122:11: (otherlv_11= RULE_ID )
            	            // InternalGameDSL.g:2123:12: otherlv_11= RULE_ID
            	            {
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getGameSpriteRule());
            	              												}
            	              											
            	            }
            	            otherlv_11=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(otherlv_11, grammarAccess.getGameSpriteAccess().getLayerGameLayerCrossReference_7_1_0_1_0());
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalGameDSL.g:2136:9: ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) )
            	            {
            	            // InternalGameDSL.g:2136:9: ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) )
            	            // InternalGameDSL.g:2137:10: ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) )
            	            {
            	            // InternalGameDSL.g:2137:10: ( (lv_hasStartPosition_12_0= 'startPosition' ) )
            	            // InternalGameDSL.g:2138:11: (lv_hasStartPosition_12_0= 'startPosition' )
            	            {
            	            // InternalGameDSL.g:2138:11: (lv_hasStartPosition_12_0= 'startPosition' )
            	            // InternalGameDSL.g:2139:12: lv_hasStartPosition_12_0= 'startPosition'
            	            {
            	            lv_hasStartPosition_12_0=(Token)match(input,71,FOLLOW_67); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_hasStartPosition_12_0, grammarAccess.getGameSpriteAccess().getHasStartPositionStartPositionKeyword_7_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getGameSpriteRule());
            	              												}
            	              												setWithLastConsumed(current, "hasStartPosition", true, "startPosition");
            	              											
            	            }

            	            }


            	            }

            	            // InternalGameDSL.g:2151:10: ( (lv_startPosition_13_0= ruleGameVector2d ) )
            	            // InternalGameDSL.g:2152:11: (lv_startPosition_13_0= ruleGameVector2d )
            	            {
            	            // InternalGameDSL.g:2152:11: (lv_startPosition_13_0= ruleGameVector2d )
            	            // InternalGameDSL.g:2153:12: lv_startPosition_13_0= ruleGameVector2d
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getGameSpriteAccess().getStartPositionGameVector2dParserRuleCall_7_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_66);
            	            lv_startPosition_13_0=ruleGameVector2d();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	              												}
            	              												set(
            	              													current,
            	              													"startPosition",
            	              													lv_startPosition_13_0,
            	              													"com.hypermodel.games.engine.GameDSL.GameVector2d");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalGameDSL.g:2177:4: ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:2177:4: ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) )
            	    // InternalGameDSL.g:2178:5: {...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 2)");
            	    }
            	    // InternalGameDSL.g:2178:107: ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) )
            	    // InternalGameDSL.g:2179:6: ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 2);
            	    // InternalGameDSL.g:2182:9: ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) )
            	    // InternalGameDSL.g:2182:10: {...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2182:19: ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) )
            	    // InternalGameDSL.g:2182:20: ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) )
            	    {
            	    // InternalGameDSL.g:2182:20: ( (lv_hasSensor_14_0= 'sensor' ) )
            	    // InternalGameDSL.g:2183:10: (lv_hasSensor_14_0= 'sensor' )
            	    {
            	    // InternalGameDSL.g:2183:10: (lv_hasSensor_14_0= 'sensor' )
            	    // InternalGameDSL.g:2184:11: lv_hasSensor_14_0= 'sensor'
            	    {
            	    lv_hasSensor_14_0=(Token)match(input,72,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_hasSensor_14_0, grammarAccess.getGameSpriteAccess().getHasSensorSensorKeyword_7_2_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGameSpriteRule());
            	      											}
            	      											setWithLastConsumed(current, "hasSensor", true, "sensor");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_15=(Token)match(input,14,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_2_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2200:9: ( (lv_vectors2d_16_0= ruleGameVector2d ) )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==90) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2201:10: (lv_vectors2d_16_0= ruleGameVector2d )
            	    	    {
            	    	    // InternalGameDSL.g:2201:10: (lv_vectors2d_16_0= ruleGameVector2d )
            	    	    // InternalGameDSL.g:2202:11: lv_vectors2d_16_0= ruleGameVector2d
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getVectors2dGameVector2dParserRuleCall_7_2_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_68);
            	    	    lv_vectors2d_16_0=ruleGameVector2d();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"vectors2d",
            	    	      												lv_vectors2d_16_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameVector2d");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,15,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_2_3());
            	      								
            	    }
            	    otherlv_18=(Token)match(input,73,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getGameSpriteAccess().getSensorIDKeyword_7_2_4());
            	      								
            	    }
            	    // InternalGameDSL.g:2227:9: ( (lv_sensorID_19_0= RULE_INT ) )
            	    // InternalGameDSL.g:2228:10: (lv_sensorID_19_0= RULE_INT )
            	    {
            	    // InternalGameDSL.g:2228:10: (lv_sensorID_19_0= RULE_INT )
            	    // InternalGameDSL.g:2229:11: lv_sensorID_19_0= RULE_INT
            	    {
            	    lv_sensorID_19_0=(Token)match(input,RULE_INT,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_sensorID_19_0, grammarAccess.getGameSpriteAccess().getSensorIDINTTerminalRuleCall_7_2_5_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGameSpriteRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"sensorID",
            	      												lv_sensorID_19_0,
            	      												"org.eclipse.xtext.xbase.Xbase.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalGameDSL.g:2251:4: ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) )
            	    {
            	    // InternalGameDSL.g:2251:4: ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) )
            	    // InternalGameDSL.g:2252:5: {...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 3)");
            	    }
            	    // InternalGameDSL.g:2252:107: ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) )
            	    // InternalGameDSL.g:2253:6: ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 3);
            	    // InternalGameDSL.g:2256:9: ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) )
            	    // InternalGameDSL.g:2256:10: {...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2256:19: ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) )
            	    // InternalGameDSL.g:2256:20: ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) )
            	    {
            	    // InternalGameDSL.g:2256:20: ( (lv_hasActivationRule_20_0= 'activate' ) )
            	    // InternalGameDSL.g:2257:10: (lv_hasActivationRule_20_0= 'activate' )
            	    {
            	    // InternalGameDSL.g:2257:10: (lv_hasActivationRule_20_0= 'activate' )
            	    // InternalGameDSL.g:2258:11: lv_hasActivationRule_20_0= 'activate'
            	    {
            	    lv_hasActivationRule_20_0=(Token)match(input,74,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_hasActivationRule_20_0, grammarAccess.getGameSpriteAccess().getHasActivationRuleActivateKeyword_7_3_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGameSpriteRule());
            	      											}
            	      											setWithLastConsumed(current, "hasActivationRule", true, "activate");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_21=(Token)match(input,75,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getGameSpriteAccess().getIfKeyword_7_3_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2274:9: ( (lv_rule_22_0= ruleGameRule ) )
            	    // InternalGameDSL.g:2275:10: (lv_rule_22_0= ruleGameRule )
            	    {
            	    // InternalGameDSL.g:2275:10: (lv_rule_22_0= ruleGameRule )
            	    // InternalGameDSL.g:2276:11: lv_rule_22_0= ruleGameRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getRuleGameRuleParserRuleCall_7_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_rule_22_0=ruleGameRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	      											}
            	      											set(
            	      												current,
            	      												"rule",
            	      												lv_rule_22_0,
            	      												"com.hypermodel.games.engine.GameDSL.GameRule");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalGameDSL.g:2299:4: ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:2299:4: ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) )
            	    // InternalGameDSL.g:2300:5: {...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 4)");
            	    }
            	    // InternalGameDSL.g:2300:107: ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) )
            	    // InternalGameDSL.g:2301:6: ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 4);
            	    // InternalGameDSL.g:2304:9: ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) )
            	    // InternalGameDSL.g:2304:10: {...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2304:19: (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' )
            	    // InternalGameDSL.g:2304:20: otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}'
            	    {
            	    otherlv_23=(Token)match(input,76,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getGameSpriteAccess().getActorsKeyword_7_4_0());
            	      								
            	    }
            	    otherlv_24=(Token)match(input,14,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_24, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_4_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2312:9: ( (lv_actors_25_0= ruleGameActor ) )*
            	    loop27:
            	    do {
            	        int alt27=2;
            	        int LA27_0 = input.LA(1);

            	        if ( (LA27_0==64||LA27_0==68||LA27_0==84) ) {
            	            alt27=1;
            	        }


            	        switch (alt27) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2313:10: (lv_actors_25_0= ruleGameActor )
            	    	    {
            	    	    // InternalGameDSL.g:2313:10: (lv_actors_25_0= ruleGameActor )
            	    	    // InternalGameDSL.g:2314:11: lv_actors_25_0= ruleGameActor
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getActorsGameActorParserRuleCall_7_4_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_72);
            	    	    lv_actors_25_0=ruleGameActor();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"actors",
            	    	      												lv_actors_25_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameActor");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop27;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,15,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_4_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalGameDSL.g:2341:4: ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:2341:4: ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) )
            	    // InternalGameDSL.g:2342:5: {...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 5)");
            	    }
            	    // InternalGameDSL.g:2342:107: ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) )
            	    // InternalGameDSL.g:2343:6: ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 5);
            	    // InternalGameDSL.g:2346:9: ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) )
            	    // InternalGameDSL.g:2346:10: {...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2346:19: (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' )
            	    // InternalGameDSL.g:2346:20: otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}'
            	    {
            	    otherlv_27=(Token)match(input,77,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getGameSpriteAccess().getPropertiesKeyword_7_5_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,14,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_5_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2354:9: ( (lv_properties_29_0= ruleGameBodyProperty ) )*
            	    loop28:
            	    do {
            	        int alt28=2;
            	        int LA28_0 = input.LA(1);

            	        if ( (LA28_0==96) ) {
            	            alt28=1;
            	        }


            	        switch (alt28) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2355:10: (lv_properties_29_0= ruleGameBodyProperty )
            	    	    {
            	    	    // InternalGameDSL.g:2355:10: (lv_properties_29_0= ruleGameBodyProperty )
            	    	    // InternalGameDSL.g:2356:11: lv_properties_29_0= ruleGameBodyProperty
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getPropertiesGameBodyPropertyParserRuleCall_7_5_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_73);
            	    	    lv_properties_29_0=ruleGameBodyProperty();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"properties",
            	    	      												lv_properties_29_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameBodyProperty");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop28;
            	        }
            	    } while (true);

            	    otherlv_30=(Token)match(input,15,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_5_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalGameDSL.g:2383:4: ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) )
            	    {
            	    // InternalGameDSL.g:2383:4: ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) )
            	    // InternalGameDSL.g:2384:5: {...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 6)");
            	    }
            	    // InternalGameDSL.g:2384:107: ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) )
            	    // InternalGameDSL.g:2385:6: ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 6);
            	    // InternalGameDSL.g:2388:9: ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) )
            	    // InternalGameDSL.g:2388:10: {...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2388:19: (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? )
            	    // InternalGameDSL.g:2388:20: otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )?
            	    {
            	    otherlv_31=(Token)match(input,78,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getGameSpriteAccess().getStatesKeyword_7_6_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,14,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_6_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2396:9: ( (lv_states_33_0= ruleGameSpriteState ) )*
            	    loop29:
            	    do {
            	        int alt29=2;
            	        int LA29_0 = input.LA(1);

            	        if ( (LA29_0==93) ) {
            	            alt29=1;
            	        }


            	        switch (alt29) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2397:10: (lv_states_33_0= ruleGameSpriteState )
            	    	    {
            	    	    // InternalGameDSL.g:2397:10: (lv_states_33_0= ruleGameSpriteState )
            	    	    // InternalGameDSL.g:2398:11: lv_states_33_0= ruleGameSpriteState
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getStatesGameSpriteStateParserRuleCall_7_6_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_74);
            	    	    lv_states_33_0=ruleGameSpriteState();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"states",
            	    	      												lv_states_33_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameSpriteState");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop29;
            	        }
            	    } while (true);

            	    otherlv_34=(Token)match(input,15,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_34, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_6_3());
            	      								
            	    }
            	    otherlv_35=(Token)match(input,79,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getGameSpriteAccess().getInitialStateKeyword_7_6_4());
            	      								
            	    }
            	    // InternalGameDSL.g:2423:9: ( (otherlv_36= RULE_ID ) )
            	    // InternalGameDSL.g:2424:10: (otherlv_36= RULE_ID )
            	    {
            	    // InternalGameDSL.g:2424:10: (otherlv_36= RULE_ID )
            	    // InternalGameDSL.g:2425:11: otherlv_36= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getGameSpriteRule());
            	      											}
            	      										
            	    }
            	    otherlv_36=(Token)match(input,RULE_ID,FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(otherlv_36, grammarAccess.getGameSpriteAccess().getInitialStateGameSpriteStateCrossReference_7_6_5_0());
            	      										
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:2436:9: (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )?
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==80) ) {
            	        alt30=1;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // InternalGameDSL.g:2437:10: otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) )
            	            {
            	            otherlv_37=(Token)match(input,80,FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_37, grammarAccess.getGameSpriteAccess().getGameOverStateKeyword_7_6_6_0());
            	              									
            	            }
            	            // InternalGameDSL.g:2441:10: ( (otherlv_38= RULE_ID ) )
            	            // InternalGameDSL.g:2442:11: (otherlv_38= RULE_ID )
            	            {
            	            // InternalGameDSL.g:2442:11: (otherlv_38= RULE_ID )
            	            // InternalGameDSL.g:2443:12: otherlv_38= RULE_ID
            	            {
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getGameSpriteRule());
            	              												}
            	              											
            	            }
            	            otherlv_38=(Token)match(input,RULE_ID,FOLLOW_66); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(otherlv_38, grammarAccess.getGameSpriteAccess().getGameOverStateGameSpriteStateCrossReference_7_6_6_1_0());
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalGameDSL.g:2461:4: ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:2461:4: ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) )
            	    // InternalGameDSL.g:2462:5: {...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 7)");
            	    }
            	    // InternalGameDSL.g:2462:107: ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) )
            	    // InternalGameDSL.g:2463:6: ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 7);
            	    // InternalGameDSL.g:2466:9: ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) )
            	    // InternalGameDSL.g:2466:10: {...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2466:19: (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' )
            	    // InternalGameDSL.g:2466:20: otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}'
            	    {
            	    otherlv_39=(Token)match(input,81,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_39, grammarAccess.getGameSpriteAccess().getEventsKeyword_7_7_0());
            	      								
            	    }
            	    otherlv_40=(Token)match(input,14,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_7_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2474:9: ( (lv_events_41_0= ruleGameEvent ) )*
            	    loop31:
            	    do {
            	        int alt31=2;
            	        int LA31_0 = input.LA(1);

            	        if ( (LA31_0==116) ) {
            	            alt31=1;
            	        }


            	        switch (alt31) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2475:10: (lv_events_41_0= ruleGameEvent )
            	    	    {
            	    	    // InternalGameDSL.g:2475:10: (lv_events_41_0= ruleGameEvent )
            	    	    // InternalGameDSL.g:2476:11: lv_events_41_0= ruleGameEvent
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getEventsGameEventParserRuleCall_7_7_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_events_41_0=ruleGameEvent();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"events",
            	    	      												lv_events_41_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameEvent");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop31;
            	        }
            	    } while (true);

            	    otherlv_42=(Token)match(input,15,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_42, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_7_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalGameDSL.g:2503:4: ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) )
            	    {
            	    // InternalGameDSL.g:2503:4: ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) )
            	    // InternalGameDSL.g:2504:5: {...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 8)");
            	    }
            	    // InternalGameDSL.g:2504:107: ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) )
            	    // InternalGameDSL.g:2505:6: ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 8);
            	    // InternalGameDSL.g:2508:9: ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) )
            	    // InternalGameDSL.g:2508:10: {...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGameSprite", "true");
            	    }
            	    // InternalGameDSL.g:2508:19: (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' )
            	    // InternalGameDSL.g:2508:20: otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}'
            	    {
            	    otherlv_43=(Token)match(input,82,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getGameSpriteAccess().getInputsKeyword_7_8_0());
            	      								
            	    }
            	    otherlv_44=(Token)match(input,14,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_44, grammarAccess.getGameSpriteAccess().getLeftCurlyBracketKeyword_7_8_1());
            	      								
            	    }
            	    // InternalGameDSL.g:2516:9: ( (lv_inputs_45_0= ruleGameInput ) )*
            	    loop32:
            	    do {
            	        int alt32=2;
            	        int LA32_0 = input.LA(1);

            	        if ( (LA32_0==83) ) {
            	            alt32=1;
            	        }


            	        switch (alt32) {
            	    	case 1 :
            	    	    // InternalGameDSL.g:2517:10: (lv_inputs_45_0= ruleGameInput )
            	    	    {
            	    	    // InternalGameDSL.g:2517:10: (lv_inputs_45_0= ruleGameInput )
            	    	    // InternalGameDSL.g:2518:11: lv_inputs_45_0= ruleGameInput
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getGameSpriteAccess().getInputsGameInputParserRuleCall_7_8_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_78);
            	    	    lv_inputs_45_0=ruleGameInput();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getGameSpriteRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"inputs",
            	    	      												lv_inputs_45_0,
            	    	      												"com.hypermodel.games.engine.GameDSL.GameInput");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop32;
            	        }
            	    } while (true);

            	    otherlv_46=(Token)match(input,15,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_46, grammarAccess.getGameSpriteAccess().getRightCurlyBracketKeyword_7_8_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameSprite"


    // $ANTLR start "entryRuleGameInput"
    // InternalGameDSL.g:2556:1: entryRuleGameInput returns [EObject current=null] : iv_ruleGameInput= ruleGameInput EOF ;
    public final EObject entryRuleGameInput() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameInput = null;


        try {
            // InternalGameDSL.g:2556:50: (iv_ruleGameInput= ruleGameInput EOF )
            // InternalGameDSL.g:2557:2: iv_ruleGameInput= ruleGameInput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameInputRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameInput=ruleGameInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameInput; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameInput"


    // $ANTLR start "ruleGameInput"
    // InternalGameDSL.g:2563:1: ruleGameInput returns [EObject current=null] : ( () otherlv_1= 'input' ( (lv_keyType_2_0= ruleGameKeyInputType ) ) ( (lv_key_3_0= ruleGameKeyInputKey ) ) ( (otherlv_4= RULE_ID ) ) ) ;
    public final EObject ruleGameInput() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Enumerator lv_keyType_2_0 = null;

        Enumerator lv_key_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:2569:2: ( ( () otherlv_1= 'input' ( (lv_keyType_2_0= ruleGameKeyInputType ) ) ( (lv_key_3_0= ruleGameKeyInputKey ) ) ( (otherlv_4= RULE_ID ) ) ) )
            // InternalGameDSL.g:2570:2: ( () otherlv_1= 'input' ( (lv_keyType_2_0= ruleGameKeyInputType ) ) ( (lv_key_3_0= ruleGameKeyInputKey ) ) ( (otherlv_4= RULE_ID ) ) )
            {
            // InternalGameDSL.g:2570:2: ( () otherlv_1= 'input' ( (lv_keyType_2_0= ruleGameKeyInputType ) ) ( (lv_key_3_0= ruleGameKeyInputKey ) ) ( (otherlv_4= RULE_ID ) ) )
            // InternalGameDSL.g:2571:3: () otherlv_1= 'input' ( (lv_keyType_2_0= ruleGameKeyInputType ) ) ( (lv_key_3_0= ruleGameKeyInputKey ) ) ( (otherlv_4= RULE_ID ) )
            {
            // InternalGameDSL.g:2571:3: ()
            // InternalGameDSL.g:2572:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameInputAccess().getGameInputAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameInputAccess().getInputKeyword_1());
              		
            }
            // InternalGameDSL.g:2582:3: ( (lv_keyType_2_0= ruleGameKeyInputType ) )
            // InternalGameDSL.g:2583:4: (lv_keyType_2_0= ruleGameKeyInputType )
            {
            // InternalGameDSL.g:2583:4: (lv_keyType_2_0= ruleGameKeyInputType )
            // InternalGameDSL.g:2584:5: lv_keyType_2_0= ruleGameKeyInputType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameInputAccess().getKeyTypeGameKeyInputTypeEnumRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_keyType_2_0=ruleGameKeyInputType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameInputRule());
              					}
              					set(
              						current,
              						"keyType",
              						lv_keyType_2_0,
              						"com.hypermodel.games.engine.GameDSL.GameKeyInputType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:2601:3: ( (lv_key_3_0= ruleGameKeyInputKey ) )
            // InternalGameDSL.g:2602:4: (lv_key_3_0= ruleGameKeyInputKey )
            {
            // InternalGameDSL.g:2602:4: (lv_key_3_0= ruleGameKeyInputKey )
            // InternalGameDSL.g:2603:5: lv_key_3_0= ruleGameKeyInputKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameInputAccess().getKeyGameKeyInputKeyEnumRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_key_3_0=ruleGameKeyInputKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameInputRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_3_0,
              						"com.hypermodel.games.engine.GameDSL.GameKeyInputKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:2620:3: ( (otherlv_4= RULE_ID ) )
            // InternalGameDSL.g:2621:4: (otherlv_4= RULE_ID )
            {
            // InternalGameDSL.g:2621:4: (otherlv_4= RULE_ID )
            // InternalGameDSL.g:2622:5: otherlv_4= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameInputRule());
              					}
              				
            }
            otherlv_4=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getGameInputAccess().getTriggerGameEventCrossReference_4_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameInput"


    // $ANTLR start "entryRuleGameActor"
    // InternalGameDSL.g:2637:1: entryRuleGameActor returns [EObject current=null] : iv_ruleGameActor= ruleGameActor EOF ;
    public final EObject entryRuleGameActor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameActor = null;


        try {
            // InternalGameDSL.g:2637:50: (iv_ruleGameActor= ruleGameActor EOF )
            // InternalGameDSL.g:2638:2: iv_ruleGameActor= ruleGameActor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameActorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameActor=ruleGameActor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameActor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameActor"


    // $ANTLR start "ruleGameActor"
    // InternalGameDSL.g:2644:1: ruleGameActor returns [EObject current=null] : ( () ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )? ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) ) ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )? ) ;
    public final EObject ruleGameActor() throws RecognitionException {
        EObject current = null;

        Token lv_hasCollisionCondition_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_hasCollisionConsequence_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Enumerator lv_typeA_2_0 = null;

        Enumerator lv_typeB_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:2650:2: ( ( () ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )? ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) ) ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )? ) )
            // InternalGameDSL.g:2651:2: ( () ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )? ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) ) ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )? )
            {
            // InternalGameDSL.g:2651:2: ( () ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )? ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) ) ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )? )
            // InternalGameDSL.g:2652:3: () ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )? ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) ) ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )?
            {
            // InternalGameDSL.g:2652:3: ()
            // InternalGameDSL.g:2653:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameActorAccess().getGameActorAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:2659:3: ( ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==84) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalGameDSL.g:2660:4: ( (lv_hasCollisionCondition_1_0= 'when' ) ) ( (lv_typeA_2_0= ruleGameContactType ) ) otherlv_3= 'collidesWith' ( (lv_typeB_4_0= ruleGameContactType ) ) otherlv_5= 'of'
                    {
                    // InternalGameDSL.g:2660:4: ( (lv_hasCollisionCondition_1_0= 'when' ) )
                    // InternalGameDSL.g:2661:5: (lv_hasCollisionCondition_1_0= 'when' )
                    {
                    // InternalGameDSL.g:2661:5: (lv_hasCollisionCondition_1_0= 'when' )
                    // InternalGameDSL.g:2662:6: lv_hasCollisionCondition_1_0= 'when'
                    {
                    lv_hasCollisionCondition_1_0=(Token)match(input,84,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasCollisionCondition_1_0, grammarAccess.getGameActorAccess().getHasCollisionConditionWhenKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameActorRule());
                      						}
                      						setWithLastConsumed(current, "hasCollisionCondition", true, "when");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:2674:4: ( (lv_typeA_2_0= ruleGameContactType ) )
                    // InternalGameDSL.g:2675:5: (lv_typeA_2_0= ruleGameContactType )
                    {
                    // InternalGameDSL.g:2675:5: (lv_typeA_2_0= ruleGameContactType )
                    // InternalGameDSL.g:2676:6: lv_typeA_2_0= ruleGameContactType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameActorAccess().getTypeAGameContactTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_82);
                    lv_typeA_2_0=ruleGameContactType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameActorRule());
                      						}
                      						set(
                      							current,
                      							"typeA",
                      							lv_typeA_2_0,
                      							"com.hypermodel.games.engine.GameDSL.GameContactType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,85,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getGameActorAccess().getCollidesWithKeyword_1_2());
                      			
                    }
                    // InternalGameDSL.g:2697:4: ( (lv_typeB_4_0= ruleGameContactType ) )
                    // InternalGameDSL.g:2698:5: (lv_typeB_4_0= ruleGameContactType )
                    {
                    // InternalGameDSL.g:2698:5: (lv_typeB_4_0= ruleGameContactType )
                    // InternalGameDSL.g:2699:6: lv_typeB_4_0= ruleGameContactType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameActorAccess().getTypeBGameContactTypeEnumRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_typeB_4_0=ruleGameContactType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameActorRule());
                      						}
                      						set(
                      							current,
                      							"typeB",
                      							lv_typeB_4_0,
                      							"com.hypermodel.games.engine.GameDSL.GameContactType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,86,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getGameActorAccess().getOfKeyword_1_4());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:2721:3: ( (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) ) | (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==68) ) {
                alt35=1;
            }
            else if ( (LA35_0==64) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalGameDSL.g:2722:4: (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) )
                    {
                    // InternalGameDSL.g:2722:4: (otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) ) )
                    // InternalGameDSL.g:2723:5: otherlv_6= 'sprite' ( (otherlv_7= RULE_ID ) )
                    {
                    otherlv_6=(Token)match(input,68,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getGameActorAccess().getSpriteKeyword_2_0_0());
                      				
                    }
                    // InternalGameDSL.g:2727:5: ( (otherlv_7= RULE_ID ) )
                    // InternalGameDSL.g:2728:6: (otherlv_7= RULE_ID )
                    {
                    // InternalGameDSL.g:2728:6: (otherlv_7= RULE_ID )
                    // InternalGameDSL.g:2729:7: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getGameActorRule());
                      							}
                      						
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_7, grammarAccess.getGameActorAccess().getSpriteGameSpriteCrossReference_2_0_1_0());
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:2742:4: (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) )
                    {
                    // InternalGameDSL.g:2742:4: (otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) ) )
                    // InternalGameDSL.g:2743:5: otherlv_8= 'tile' ( (otherlv_9= RULE_ID ) )
                    {
                    otherlv_8=(Token)match(input,64,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getGameActorAccess().getTileKeyword_2_1_0());
                      				
                    }
                    // InternalGameDSL.g:2747:5: ( (otherlv_9= RULE_ID ) )
                    // InternalGameDSL.g:2748:6: (otherlv_9= RULE_ID )
                    {
                    // InternalGameDSL.g:2748:6: (otherlv_9= RULE_ID )
                    // InternalGameDSL.g:2749:7: otherlv_9= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getGameActorRule());
                      							}
                      						
                    }
                    otherlv_9=(Token)match(input,RULE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_9, grammarAccess.getGameActorAccess().getTileGameTileCrossReference_2_1_1_0());
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:2762:3: ( ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==87) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalGameDSL.g:2763:4: ( (lv_hasCollisionConsequence_10_0= 'do' ) ) ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) )
                    {
                    // InternalGameDSL.g:2763:4: ( (lv_hasCollisionConsequence_10_0= 'do' ) )
                    // InternalGameDSL.g:2764:5: (lv_hasCollisionConsequence_10_0= 'do' )
                    {
                    // InternalGameDSL.g:2764:5: (lv_hasCollisionConsequence_10_0= 'do' )
                    // InternalGameDSL.g:2765:6: lv_hasCollisionConsequence_10_0= 'do'
                    {
                    lv_hasCollisionConsequence_10_0=(Token)match(input,87,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasCollisionConsequence_10_0, grammarAccess.getGameActorAccess().getHasCollisionConsequenceDoKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameActorRule());
                      						}
                      						setWithLastConsumed(current, "hasCollisionConsequence", true, "do");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:2777:4: ( (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) ) | (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) ) )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==88) ) {
                        alt36=1;
                    }
                    else if ( (LA36_0==89) ) {
                        alt36=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalGameDSL.g:2778:5: (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) )
                            {
                            // InternalGameDSL.g:2778:5: (otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) ) )
                            // InternalGameDSL.g:2779:6: otherlv_11= 'atBeginOfContact' ( (otherlv_12= RULE_ID ) )
                            {
                            otherlv_11=(Token)match(input,88,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getGameActorAccess().getAtBeginOfContactKeyword_3_1_0_0());
                              					
                            }
                            // InternalGameDSL.g:2783:6: ( (otherlv_12= RULE_ID ) )
                            // InternalGameDSL.g:2784:7: (otherlv_12= RULE_ID )
                            {
                            // InternalGameDSL.g:2784:7: (otherlv_12= RULE_ID )
                            // InternalGameDSL.g:2785:8: otherlv_12= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getGameActorRule());
                              								}
                              							
                            }
                            otherlv_12=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_12, grammarAccess.getGameActorAccess().getBeginContactGameEventCrossReference_3_1_0_1_0());
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:2798:5: (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) )
                            {
                            // InternalGameDSL.g:2798:5: (otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) ) )
                            // InternalGameDSL.g:2799:6: otherlv_13= 'atEndOfContact' ( (otherlv_14= RULE_ID ) )
                            {
                            otherlv_13=(Token)match(input,89,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getGameActorAccess().getAtEndOfContactKeyword_3_1_1_0());
                              					
                            }
                            // InternalGameDSL.g:2803:6: ( (otherlv_14= RULE_ID ) )
                            // InternalGameDSL.g:2804:7: (otherlv_14= RULE_ID )
                            {
                            // InternalGameDSL.g:2804:7: (otherlv_14= RULE_ID )
                            // InternalGameDSL.g:2805:8: otherlv_14= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getGameActorRule());
                              								}
                              							
                            }
                            otherlv_14=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_14, grammarAccess.getGameActorAccess().getEndContactGameEventCrossReference_3_1_1_1_0());
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameActor"


    // $ANTLR start "entryRuleGameVector2d"
    // InternalGameDSL.g:2823:1: entryRuleGameVector2d returns [EObject current=null] : iv_ruleGameVector2d= ruleGameVector2d EOF ;
    public final EObject entryRuleGameVector2d() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameVector2d = null;


        try {
            // InternalGameDSL.g:2823:53: (iv_ruleGameVector2d= ruleGameVector2d EOF )
            // InternalGameDSL.g:2824:2: iv_ruleGameVector2d= ruleGameVector2d EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameVector2dRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameVector2d=ruleGameVector2d();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameVector2d; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameVector2d"


    // $ANTLR start "ruleGameVector2d"
    // InternalGameDSL.g:2830:1: ruleGameVector2d returns [EObject current=null] : ( () otherlv_1= 'vector(' ( (lv_x_2_0= ruleSignedNumber ) ) otherlv_3= ',' ( (lv_y_4_0= ruleSignedNumber ) ) otherlv_5= ')' ) ;
    public final EObject ruleGameVector2d() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_x_2_0 = null;

        AntlrDatatypeRuleToken lv_y_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:2836:2: ( ( () otherlv_1= 'vector(' ( (lv_x_2_0= ruleSignedNumber ) ) otherlv_3= ',' ( (lv_y_4_0= ruleSignedNumber ) ) otherlv_5= ')' ) )
            // InternalGameDSL.g:2837:2: ( () otherlv_1= 'vector(' ( (lv_x_2_0= ruleSignedNumber ) ) otherlv_3= ',' ( (lv_y_4_0= ruleSignedNumber ) ) otherlv_5= ')' )
            {
            // InternalGameDSL.g:2837:2: ( () otherlv_1= 'vector(' ( (lv_x_2_0= ruleSignedNumber ) ) otherlv_3= ',' ( (lv_y_4_0= ruleSignedNumber ) ) otherlv_5= ')' )
            // InternalGameDSL.g:2838:3: () otherlv_1= 'vector(' ( (lv_x_2_0= ruleSignedNumber ) ) otherlv_3= ',' ( (lv_y_4_0= ruleSignedNumber ) ) otherlv_5= ')'
            {
            // InternalGameDSL.g:2838:3: ()
            // InternalGameDSL.g:2839:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameVector2dAccess().getGameVector2dAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,90,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameVector2dAccess().getVectorKeyword_1());
              		
            }
            // InternalGameDSL.g:2849:3: ( (lv_x_2_0= ruleSignedNumber ) )
            // InternalGameDSL.g:2850:4: (lv_x_2_0= ruleSignedNumber )
            {
            // InternalGameDSL.g:2850:4: (lv_x_2_0= ruleSignedNumber )
            // InternalGameDSL.g:2851:5: lv_x_2_0= ruleSignedNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameVector2dAccess().getXSignedNumberParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_87);
            lv_x_2_0=ruleSignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameVector2dRule());
              					}
              					set(
              						current,
              						"x",
              						lv_x_2_0,
              						"com.hypermodel.games.engine.GameDSL.SignedNumber");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,91,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameVector2dAccess().getCommaKeyword_3());
              		
            }
            // InternalGameDSL.g:2872:3: ( (lv_y_4_0= ruleSignedNumber ) )
            // InternalGameDSL.g:2873:4: (lv_y_4_0= ruleSignedNumber )
            {
            // InternalGameDSL.g:2873:4: (lv_y_4_0= ruleSignedNumber )
            // InternalGameDSL.g:2874:5: lv_y_4_0= ruleSignedNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameVector2dAccess().getYSignedNumberParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_y_4_0=ruleSignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameVector2dRule());
              					}
              					set(
              						current,
              						"y",
              						lv_y_4_0,
              						"com.hypermodel.games.engine.GameDSL.SignedNumber");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameVector2dAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameVector2d"


    // $ANTLR start "entryRuleGameSpriteState"
    // InternalGameDSL.g:2899:1: entryRuleGameSpriteState returns [EObject current=null] : iv_ruleGameSpriteState= ruleGameSpriteState EOF ;
    public final EObject entryRuleGameSpriteState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameSpriteState = null;


        try {
            // InternalGameDSL.g:2899:56: (iv_ruleGameSpriteState= ruleGameSpriteState EOF )
            // InternalGameDSL.g:2900:2: iv_ruleGameSpriteState= ruleGameSpriteState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameSpriteStateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameSpriteState=ruleGameSpriteState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameSpriteState; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameSpriteState"


    // $ANTLR start "ruleGameSpriteState"
    // InternalGameDSL.g:2906:1: ruleGameSpriteState returns [EObject current=null] : ( () otherlv_1= 'state' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'if' ( (lv_rule_4_0= ruleGameRule ) ) ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )? ) ;
    public final EObject ruleGameSpriteState() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_ifFinished_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_rule_4_0 = null;

        EObject lv_animation_5_0 = null;

        EObject lv_stand_9_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:2912:2: ( ( () otherlv_1= 'state' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'if' ( (lv_rule_4_0= ruleGameRule ) ) ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )? ) )
            // InternalGameDSL.g:2913:2: ( () otherlv_1= 'state' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'if' ( (lv_rule_4_0= ruleGameRule ) ) ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )? )
            {
            // InternalGameDSL.g:2913:2: ( () otherlv_1= 'state' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'if' ( (lv_rule_4_0= ruleGameRule ) ) ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )? )
            // InternalGameDSL.g:2914:3: () otherlv_1= 'state' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'if' ( (lv_rule_4_0= ruleGameRule ) ) ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )?
            {
            // InternalGameDSL.g:2914:3: ()
            // InternalGameDSL.g:2915:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameSpriteStateAccess().getGameSpriteStateAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,93,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameSpriteStateAccess().getStateKeyword_1());
              		
            }
            // InternalGameDSL.g:2925:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:2926:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:2926:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:2927:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteStateAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_70);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteStateRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,75,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameSpriteStateAccess().getIfKeyword_3());
              		
            }
            // InternalGameDSL.g:2948:3: ( (lv_rule_4_0= ruleGameRule ) )
            // InternalGameDSL.g:2949:4: (lv_rule_4_0= ruleGameRule )
            {
            // InternalGameDSL.g:2949:4: (lv_rule_4_0= ruleGameRule )
            // InternalGameDSL.g:2950:5: lv_rule_4_0= ruleGameRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteStateAccess().getRuleGameRuleParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_89);
            lv_rule_4_0=ruleGameRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteStateRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_4_0,
              						"com.hypermodel.games.engine.GameDSL.GameRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:2967:3: ( ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? ) | ( (lv_stand_9_0= ruleGameSpriteStand ) ) )?
            int alt39=3;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==101) ) {
                alt39=1;
            }
            else if ( (LA39_0==107) ) {
                alt39=2;
            }
            switch (alt39) {
                case 1 :
                    // InternalGameDSL.g:2968:4: ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? )
                    {
                    // InternalGameDSL.g:2968:4: ( ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )? )
                    // InternalGameDSL.g:2969:5: ( (lv_animation_5_0= ruleGameSpriteAnimation ) ) ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )?
                    {
                    // InternalGameDSL.g:2969:5: ( (lv_animation_5_0= ruleGameSpriteAnimation ) )
                    // InternalGameDSL.g:2970:6: (lv_animation_5_0= ruleGameSpriteAnimation )
                    {
                    // InternalGameDSL.g:2970:6: (lv_animation_5_0= ruleGameSpriteAnimation )
                    // InternalGameDSL.g:2971:7: lv_animation_5_0= ruleGameSpriteAnimation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getGameSpriteStateAccess().getAnimationGameSpriteAnimationParserRuleCall_5_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_90);
                    lv_animation_5_0=ruleGameSpriteAnimation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getGameSpriteStateRule());
                      							}
                      							set(
                      								current,
                      								"animation",
                      								lv_animation_5_0,
                      								"com.hypermodel.games.engine.GameDSL.GameSpriteAnimation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:2988:5: ( ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) ) )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==94) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalGameDSL.g:2989:6: ( (lv_ifFinished_6_0= 'ifFinished' ) ) otherlv_7= 'setFalse' ( (otherlv_8= RULE_ID ) )
                            {
                            // InternalGameDSL.g:2989:6: ( (lv_ifFinished_6_0= 'ifFinished' ) )
                            // InternalGameDSL.g:2990:7: (lv_ifFinished_6_0= 'ifFinished' )
                            {
                            // InternalGameDSL.g:2990:7: (lv_ifFinished_6_0= 'ifFinished' )
                            // InternalGameDSL.g:2991:8: lv_ifFinished_6_0= 'ifFinished'
                            {
                            lv_ifFinished_6_0=(Token)match(input,94,FOLLOW_91); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_ifFinished_6_0, grammarAccess.getGameSpriteStateAccess().getIfFinishedIfFinishedKeyword_5_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getGameSpriteStateRule());
                              								}
                              								setWithLastConsumed(current, "ifFinished", true, "ifFinished");
                              							
                            }

                            }


                            }

                            otherlv_7=(Token)match(input,95,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getGameSpriteStateAccess().getSetFalseKeyword_5_0_1_1());
                              					
                            }
                            // InternalGameDSL.g:3007:6: ( (otherlv_8= RULE_ID ) )
                            // InternalGameDSL.g:3008:7: (otherlv_8= RULE_ID )
                            {
                            // InternalGameDSL.g:3008:7: (otherlv_8= RULE_ID )
                            // InternalGameDSL.g:3009:8: otherlv_8= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getGameSpriteStateRule());
                              								}
                              							
                            }
                            otherlv_8=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_8, grammarAccess.getGameSpriteStateAccess().getSetFalseGameBodyPropertyCrossReference_5_0_1_2_0());
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:3023:4: ( (lv_stand_9_0= ruleGameSpriteStand ) )
                    {
                    // InternalGameDSL.g:3023:4: ( (lv_stand_9_0= ruleGameSpriteStand ) )
                    // InternalGameDSL.g:3024:5: (lv_stand_9_0= ruleGameSpriteStand )
                    {
                    // InternalGameDSL.g:3024:5: (lv_stand_9_0= ruleGameSpriteStand )
                    // InternalGameDSL.g:3025:6: lv_stand_9_0= ruleGameSpriteStand
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameSpriteStateAccess().getStandGameSpriteStandParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stand_9_0=ruleGameSpriteStand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameSpriteStateRule());
                      						}
                      						set(
                      							current,
                      							"stand",
                      							lv_stand_9_0,
                      							"com.hypermodel.games.engine.GameDSL.GameSpriteStand");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameSpriteState"


    // $ANTLR start "entryRuleGameBodyProperty"
    // InternalGameDSL.g:3047:1: entryRuleGameBodyProperty returns [EObject current=null] : iv_ruleGameBodyProperty= ruleGameBodyProperty EOF ;
    public final EObject entryRuleGameBodyProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameBodyProperty = null;


        try {
            // InternalGameDSL.g:3047:57: (iv_ruleGameBodyProperty= ruleGameBodyProperty EOF )
            // InternalGameDSL.g:3048:2: iv_ruleGameBodyProperty= ruleGameBodyProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameBodyPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameBodyProperty=ruleGameBodyProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameBodyProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameBodyProperty"


    // $ANTLR start "ruleGameBodyProperty"
    // InternalGameDSL.g:3054:1: ruleGameBodyProperty returns [EObject current=null] : ( () otherlv_1= 'property' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )? ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )? ) ;
    public final EObject ruleGameBodyProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_onUpdateTrue_3_0=null;
        Token lv_onUpdateFalse_5_0=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_body_4_0 = null;

        EObject lv_body_6_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3060:2: ( ( () otherlv_1= 'property' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )? ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )? ) )
            // InternalGameDSL.g:3061:2: ( () otherlv_1= 'property' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )? ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )? )
            {
            // InternalGameDSL.g:3061:2: ( () otherlv_1= 'property' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )? ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )? )
            // InternalGameDSL.g:3062:3: () otherlv_1= 'property' ( (lv_name_2_0= ruleValidID ) ) ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )? ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )?
            {
            // InternalGameDSL.g:3062:3: ()
            // InternalGameDSL.g:3063:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameBodyPropertyAccess().getGameBodyPropertyAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,96,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameBodyPropertyAccess().getPropertyKeyword_1());
              		
            }
            // InternalGameDSL.g:3073:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3074:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3074:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3075:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameBodyPropertyAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_92);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameBodyPropertyRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:3092:3: ( ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==97) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalGameDSL.g:3093:4: ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) ) ( (lv_body_4_0= ruleXBlockExpression ) )
                    {
                    // InternalGameDSL.g:3093:4: ( (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' ) )
                    // InternalGameDSL.g:3094:5: (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' )
                    {
                    // InternalGameDSL.g:3094:5: (lv_onUpdateTrue_3_0= 'onUpdateIfTrue' )
                    // InternalGameDSL.g:3095:6: lv_onUpdateTrue_3_0= 'onUpdateIfTrue'
                    {
                    lv_onUpdateTrue_3_0=(Token)match(input,97,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_onUpdateTrue_3_0, grammarAccess.getGameBodyPropertyAccess().getOnUpdateTrueOnUpdateIfTrueKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameBodyPropertyRule());
                      						}
                      						setWithLastConsumed(current, "onUpdateTrue", true, "onUpdateIfTrue");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:3107:4: ( (lv_body_4_0= ruleXBlockExpression ) )
                    // InternalGameDSL.g:3108:5: (lv_body_4_0= ruleXBlockExpression )
                    {
                    // InternalGameDSL.g:3108:5: (lv_body_4_0= ruleXBlockExpression )
                    // InternalGameDSL.g:3109:6: lv_body_4_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameBodyPropertyAccess().getBodyXBlockExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_body_4_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameBodyPropertyRule());
                      						}
                      						set(
                      							current,
                      							"body",
                      							lv_body_4_0,
                      							"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:3127:3: ( ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==98) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalGameDSL.g:3128:4: ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) ) ( (lv_body_6_0= ruleXBlockExpression ) )
                    {
                    // InternalGameDSL.g:3128:4: ( (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' ) )
                    // InternalGameDSL.g:3129:5: (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' )
                    {
                    // InternalGameDSL.g:3129:5: (lv_onUpdateFalse_5_0= 'onUpdateIfFalse' )
                    // InternalGameDSL.g:3130:6: lv_onUpdateFalse_5_0= 'onUpdateIfFalse'
                    {
                    lv_onUpdateFalse_5_0=(Token)match(input,98,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_onUpdateFalse_5_0, grammarAccess.getGameBodyPropertyAccess().getOnUpdateFalseOnUpdateIfFalseKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameBodyPropertyRule());
                      						}
                      						setWithLastConsumed(current, "onUpdateFalse", true, "onUpdateIfFalse");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:3142:4: ( (lv_body_6_0= ruleXBlockExpression ) )
                    // InternalGameDSL.g:3143:5: (lv_body_6_0= ruleXBlockExpression )
                    {
                    // InternalGameDSL.g:3143:5: (lv_body_6_0= ruleXBlockExpression )
                    // InternalGameDSL.g:3144:6: lv_body_6_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameBodyPropertyAccess().getBodyXBlockExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_6_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameBodyPropertyRule());
                      						}
                      						set(
                      							current,
                      							"body",
                      							lv_body_6_0,
                      							"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameBodyProperty"


    // $ANTLR start "entryRuleGameRule"
    // InternalGameDSL.g:3166:1: entryRuleGameRule returns [EObject current=null] : iv_ruleGameRule= ruleGameRule EOF ;
    public final EObject entryRuleGameRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameRule = null;


        try {
            // InternalGameDSL.g:3166:49: (iv_ruleGameRule= ruleGameRule EOF )
            // InternalGameDSL.g:3167:2: iv_ruleGameRule= ruleGameRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameRule=ruleGameRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameRule"


    // $ANTLR start "ruleGameRule"
    // InternalGameDSL.g:3173:1: ruleGameRule returns [EObject current=null] : ( () otherlv_1= 'isTrue' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleGameRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_params_4_0 = null;

        EObject lv_params_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3179:2: ( ( () otherlv_1= 'isTrue' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) )
            // InternalGameDSL.g:3180:2: ( () otherlv_1= 'isTrue' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            {
            // InternalGameDSL.g:3180:2: ( () otherlv_1= 'isTrue' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            // InternalGameDSL.g:3181:3: () otherlv_1= 'isTrue' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) )
            {
            // InternalGameDSL.g:3181:3: ()
            // InternalGameDSL.g:3182:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameRuleAccess().getGameRuleAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,99,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameRuleAccess().getIsTrueKeyword_1());
              		
            }
            // InternalGameDSL.g:3192:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3193:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3193:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3194:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameRuleAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameRuleRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,100,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameRuleAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalGameDSL.g:3215:3: ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_ID||LA43_0==100||LA43_0==142) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalGameDSL.g:3216:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )?
                    {
                    // InternalGameDSL.g:3216:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) )
                    // InternalGameDSL.g:3217:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    {
                    // InternalGameDSL.g:3217:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    // InternalGameDSL.g:3218:6: lv_params_4_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameRuleAccess().getParamsFullJvmFormalParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_params_4_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameRuleRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_4_0,
                      							"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:3235:4: (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==91) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalGameDSL.g:3236:5: otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                            {
                            otherlv_5=(Token)match(input,91,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getGameRuleAccess().getCommaKeyword_4_1_0());
                              				
                            }
                            // InternalGameDSL.g:3240:5: ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                            // InternalGameDSL.g:3241:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                            {
                            // InternalGameDSL.g:3241:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                            // InternalGameDSL.g:3242:7: lv_params_6_0= ruleFullJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getGameRuleAccess().getParamsFullJvmFormalParameterParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_params_6_0=ruleFullJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getGameRuleRule());
                              							}
                              							add(
                              								current,
                              								"params",
                              								lv_params_6_0,
                              								"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGameRuleAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalGameDSL.g:3265:3: ( (lv_body_8_0= ruleXBlockExpression ) )
            // InternalGameDSL.g:3266:4: (lv_body_8_0= ruleXBlockExpression )
            {
            // InternalGameDSL.g:3266:4: (lv_body_8_0= ruleXBlockExpression )
            // InternalGameDSL.g:3267:5: lv_body_8_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameRuleAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameRuleRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameRule"


    // $ANTLR start "entryRuleGameSpriteAnimation"
    // InternalGameDSL.g:3288:1: entryRuleGameSpriteAnimation returns [EObject current=null] : iv_ruleGameSpriteAnimation= ruleGameSpriteAnimation EOF ;
    public final EObject entryRuleGameSpriteAnimation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameSpriteAnimation = null;


        try {
            // InternalGameDSL.g:3288:60: (iv_ruleGameSpriteAnimation= ruleGameSpriteAnimation EOF )
            // InternalGameDSL.g:3289:2: iv_ruleGameSpriteAnimation= ruleGameSpriteAnimation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameSpriteAnimationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameSpriteAnimation=ruleGameSpriteAnimation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameSpriteAnimation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameSpriteAnimation"


    // $ANTLR start "ruleGameSpriteAnimation"
    // InternalGameDSL.g:3295:1: ruleGameSpriteAnimation returns [EObject current=null] : ( () otherlv_1= 'animation' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'duration' ( (lv_duration_4_0= ruleUnsignedNumber ) ) ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )? ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )? ) ;
    public final EObject ruleGameSpriteAnimation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_hasFrames_5_0=null;
        Token lv_frames_6_0=null;
        Token otherlv_7=null;
        Token lv_offset_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_hasStands_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_duration_4_0 = null;

        EObject lv_stands_13_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3301:2: ( ( () otherlv_1= 'animation' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'duration' ( (lv_duration_4_0= ruleUnsignedNumber ) ) ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )? ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )? ) )
            // InternalGameDSL.g:3302:2: ( () otherlv_1= 'animation' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'duration' ( (lv_duration_4_0= ruleUnsignedNumber ) ) ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )? ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )? )
            {
            // InternalGameDSL.g:3302:2: ( () otherlv_1= 'animation' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'duration' ( (lv_duration_4_0= ruleUnsignedNumber ) ) ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )? ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )? )
            // InternalGameDSL.g:3303:3: () otherlv_1= 'animation' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'duration' ( (lv_duration_4_0= ruleUnsignedNumber ) ) ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )? ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )?
            {
            // InternalGameDSL.g:3303:3: ()
            // InternalGameDSL.g:3304:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameSpriteAnimationAccess().getGameSpriteAnimationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameSpriteAnimationAccess().getAnimationKeyword_1());
              		
            }
            // InternalGameDSL.g:3314:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3315:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3315:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3316:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteAnimationAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_98);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteAnimationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,102,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameSpriteAnimationAccess().getDurationKeyword_3());
              		
            }
            // InternalGameDSL.g:3337:3: ( (lv_duration_4_0= ruleUnsignedNumber ) )
            // InternalGameDSL.g:3338:4: (lv_duration_4_0= ruleUnsignedNumber )
            {
            // InternalGameDSL.g:3338:4: (lv_duration_4_0= ruleUnsignedNumber )
            // InternalGameDSL.g:3339:5: lv_duration_4_0= ruleUnsignedNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteAnimationAccess().getDurationUnsignedNumberParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_99);
            lv_duration_4_0=ruleUnsignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteAnimationRule());
              					}
              					set(
              						current,
              						"duration",
              						lv_duration_4_0,
              						"com.hypermodel.games.engine.GameDSL.UnsignedNumber");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:3356:3: ( ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==103) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalGameDSL.g:3357:4: ( (lv_hasFrames_5_0= 'frames' ) ) ( (lv_frames_6_0= RULE_INT ) ) otherlv_7= 'startFrame' ( (lv_offset_8_0= RULE_INT ) ) otherlv_9= 'from' ( (otherlv_10= RULE_ID ) )
                    {
                    // InternalGameDSL.g:3357:4: ( (lv_hasFrames_5_0= 'frames' ) )
                    // InternalGameDSL.g:3358:5: (lv_hasFrames_5_0= 'frames' )
                    {
                    // InternalGameDSL.g:3358:5: (lv_hasFrames_5_0= 'frames' )
                    // InternalGameDSL.g:3359:6: lv_hasFrames_5_0= 'frames'
                    {
                    lv_hasFrames_5_0=(Token)match(input,103,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasFrames_5_0, grammarAccess.getGameSpriteAnimationAccess().getHasFramesFramesKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSpriteAnimationRule());
                      						}
                      						setWithLastConsumed(current, "hasFrames", true, "frames");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:3371:4: ( (lv_frames_6_0= RULE_INT ) )
                    // InternalGameDSL.g:3372:5: (lv_frames_6_0= RULE_INT )
                    {
                    // InternalGameDSL.g:3372:5: (lv_frames_6_0= RULE_INT )
                    // InternalGameDSL.g:3373:6: lv_frames_6_0= RULE_INT
                    {
                    lv_frames_6_0=(Token)match(input,RULE_INT,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_frames_6_0, grammarAccess.getGameSpriteAnimationAccess().getFramesINTTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSpriteAnimationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"frames",
                      							lv_frames_6_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,104,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getGameSpriteAnimationAccess().getStartFrameKeyword_5_2());
                      			
                    }
                    // InternalGameDSL.g:3393:4: ( (lv_offset_8_0= RULE_INT ) )
                    // InternalGameDSL.g:3394:5: (lv_offset_8_0= RULE_INT )
                    {
                    // InternalGameDSL.g:3394:5: (lv_offset_8_0= RULE_INT )
                    // InternalGameDSL.g:3395:6: lv_offset_8_0= RULE_INT
                    {
                    lv_offset_8_0=(Token)match(input,RULE_INT,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_offset_8_0, grammarAccess.getGameSpriteAnimationAccess().getOffsetINTTerminalRuleCall_5_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSpriteAnimationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"offset",
                      							lv_offset_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,105,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getGameSpriteAnimationAccess().getFromKeyword_5_4());
                      			
                    }
                    // InternalGameDSL.g:3415:4: ( (otherlv_10= RULE_ID ) )
                    // InternalGameDSL.g:3416:5: (otherlv_10= RULE_ID )
                    {
                    // InternalGameDSL.g:3416:5: (otherlv_10= RULE_ID )
                    // InternalGameDSL.g:3417:6: otherlv_10= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSpriteAnimationRule());
                      						}
                      					
                    }
                    otherlv_10=(Token)match(input,RULE_ID,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_10, grammarAccess.getGameSpriteAnimationAccess().getRegionGameTextureRegionCrossReference_5_5_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:3429:3: ( ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}' )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==106) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalGameDSL.g:3430:4: ( (lv_hasStands_11_0= 'stands' ) ) otherlv_12= '{' ( (lv_stands_13_0= ruleGameSpriteStand ) )* otherlv_14= '}'
                    {
                    // InternalGameDSL.g:3430:4: ( (lv_hasStands_11_0= 'stands' ) )
                    // InternalGameDSL.g:3431:5: (lv_hasStands_11_0= 'stands' )
                    {
                    // InternalGameDSL.g:3431:5: (lv_hasStands_11_0= 'stands' )
                    // InternalGameDSL.g:3432:6: lv_hasStands_11_0= 'stands'
                    {
                    lv_hasStands_11_0=(Token)match(input,106,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasStands_11_0, grammarAccess.getGameSpriteAnimationAccess().getHasStandsStandsKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGameSpriteAnimationRule());
                      						}
                      						setWithLastConsumed(current, "hasStands", true, "stands");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,14,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getGameSpriteAnimationAccess().getLeftCurlyBracketKeyword_6_1());
                      			
                    }
                    // InternalGameDSL.g:3448:4: ( (lv_stands_13_0= ruleGameSpriteStand ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==107) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalGameDSL.g:3449:5: (lv_stands_13_0= ruleGameSpriteStand )
                    	    {
                    	    // InternalGameDSL.g:3449:5: (lv_stands_13_0= ruleGameSpriteStand )
                    	    // InternalGameDSL.g:3450:6: lv_stands_13_0= ruleGameSpriteStand
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getGameSpriteAnimationAccess().getStandsGameSpriteStandParserRuleCall_6_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_103);
                    	    lv_stands_13_0=ruleGameSpriteStand();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getGameSpriteAnimationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"stands",
                    	      							lv_stands_13_0,
                    	      							"com.hypermodel.games.engine.GameDSL.GameSpriteStand");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getGameSpriteAnimationAccess().getRightCurlyBracketKeyword_6_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameSpriteAnimation"


    // $ANTLR start "entryRuleGameSpriteStand"
    // InternalGameDSL.g:3476:1: entryRuleGameSpriteStand returns [EObject current=null] : iv_ruleGameSpriteStand= ruleGameSpriteStand EOF ;
    public final EObject entryRuleGameSpriteStand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameSpriteStand = null;


        try {
            // InternalGameDSL.g:3476:56: (iv_ruleGameSpriteStand= ruleGameSpriteStand EOF )
            // InternalGameDSL.g:3477:2: iv_ruleGameSpriteStand= ruleGameSpriteStand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameSpriteStandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameSpriteStand=ruleGameSpriteStand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameSpriteStand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameSpriteStand"


    // $ANTLR start "ruleGameSpriteStand"
    // InternalGameDSL.g:3483:1: ruleGameSpriteStand returns [EObject current=null] : ( () otherlv_1= 'stand' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'whichFrame' ( (lv_offset_4_0= RULE_INT ) ) otherlv_5= 'from' ( (otherlv_6= RULE_ID ) ) ) ;
    public final EObject ruleGameSpriteStand() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_offset_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3489:2: ( ( () otherlv_1= 'stand' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'whichFrame' ( (lv_offset_4_0= RULE_INT ) ) otherlv_5= 'from' ( (otherlv_6= RULE_ID ) ) ) )
            // InternalGameDSL.g:3490:2: ( () otherlv_1= 'stand' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'whichFrame' ( (lv_offset_4_0= RULE_INT ) ) otherlv_5= 'from' ( (otherlv_6= RULE_ID ) ) )
            {
            // InternalGameDSL.g:3490:2: ( () otherlv_1= 'stand' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'whichFrame' ( (lv_offset_4_0= RULE_INT ) ) otherlv_5= 'from' ( (otherlv_6= RULE_ID ) ) )
            // InternalGameDSL.g:3491:3: () otherlv_1= 'stand' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'whichFrame' ( (lv_offset_4_0= RULE_INT ) ) otherlv_5= 'from' ( (otherlv_6= RULE_ID ) )
            {
            // InternalGameDSL.g:3491:3: ()
            // InternalGameDSL.g:3492:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameSpriteStandAccess().getGameSpriteStandAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,107,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameSpriteStandAccess().getStandKeyword_1());
              		
            }
            // InternalGameDSL.g:3502:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3503:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3503:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3504:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameSpriteStandAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameSpriteStandRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,108,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameSpriteStandAccess().getWhichFrameKeyword_3());
              		
            }
            // InternalGameDSL.g:3525:3: ( (lv_offset_4_0= RULE_INT ) )
            // InternalGameDSL.g:3526:4: (lv_offset_4_0= RULE_INT )
            {
            // InternalGameDSL.g:3526:4: (lv_offset_4_0= RULE_INT )
            // InternalGameDSL.g:3527:5: lv_offset_4_0= RULE_INT
            {
            lv_offset_4_0=(Token)match(input,RULE_INT,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_offset_4_0, grammarAccess.getGameSpriteStandAccess().getOffsetINTTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameSpriteStandRule());
              					}
              					setWithLastConsumed(
              						current,
              						"offset",
              						lv_offset_4_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,105,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameSpriteStandAccess().getFromKeyword_5());
              		
            }
            // InternalGameDSL.g:3547:3: ( (otherlv_6= RULE_ID ) )
            // InternalGameDSL.g:3548:4: (otherlv_6= RULE_ID )
            {
            // InternalGameDSL.g:3548:4: (otherlv_6= RULE_ID )
            // InternalGameDSL.g:3549:5: otherlv_6= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameSpriteStandRule());
              					}
              				
            }
            otherlv_6=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_6, grammarAccess.getGameSpriteStandAccess().getRegionGameTextureRegionCrossReference_6_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameSpriteStand"


    // $ANTLR start "entryRuleGameTextureRegion"
    // InternalGameDSL.g:3564:1: entryRuleGameTextureRegion returns [EObject current=null] : iv_ruleGameTextureRegion= ruleGameTextureRegion EOF ;
    public final EObject entryRuleGameTextureRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameTextureRegion = null;


        try {
            // InternalGameDSL.g:3564:58: (iv_ruleGameTextureRegion= ruleGameTextureRegion EOF )
            // InternalGameDSL.g:3565:2: iv_ruleGameTextureRegion= ruleGameTextureRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameTextureRegionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameTextureRegion=ruleGameTextureRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameTextureRegion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameTextureRegion"


    // $ANTLR start "ruleGameTextureRegion"
    // InternalGameDSL.g:3571:1: ruleGameTextureRegion returns [EObject current=null] : ( () otherlv_1= 'region' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'name' ( (lv_region_4_0= RULE_STRING ) ) otherlv_5= 'width' ( (lv_width_6_0= RULE_INT ) ) otherlv_7= 'height' ( (lv_height_8_0= RULE_INT ) ) (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )? (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )? ( (lv_flipX_13_0= 'flipX' ) )? ( (lv_flipY_14_0= 'flipY' ) )? ) ;
    public final EObject ruleGameTextureRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_region_4_0=null;
        Token otherlv_5=null;
        Token lv_width_6_0=null;
        Token otherlv_7=null;
        Token lv_height_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_flipX_13_0=null;
        Token lv_flipY_14_0=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_offsetX_10_0 = null;

        AntlrDatatypeRuleToken lv_offsetY_12_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3577:2: ( ( () otherlv_1= 'region' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'name' ( (lv_region_4_0= RULE_STRING ) ) otherlv_5= 'width' ( (lv_width_6_0= RULE_INT ) ) otherlv_7= 'height' ( (lv_height_8_0= RULE_INT ) ) (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )? (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )? ( (lv_flipX_13_0= 'flipX' ) )? ( (lv_flipY_14_0= 'flipY' ) )? ) )
            // InternalGameDSL.g:3578:2: ( () otherlv_1= 'region' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'name' ( (lv_region_4_0= RULE_STRING ) ) otherlv_5= 'width' ( (lv_width_6_0= RULE_INT ) ) otherlv_7= 'height' ( (lv_height_8_0= RULE_INT ) ) (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )? (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )? ( (lv_flipX_13_0= 'flipX' ) )? ( (lv_flipY_14_0= 'flipY' ) )? )
            {
            // InternalGameDSL.g:3578:2: ( () otherlv_1= 'region' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'name' ( (lv_region_4_0= RULE_STRING ) ) otherlv_5= 'width' ( (lv_width_6_0= RULE_INT ) ) otherlv_7= 'height' ( (lv_height_8_0= RULE_INT ) ) (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )? (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )? ( (lv_flipX_13_0= 'flipX' ) )? ( (lv_flipY_14_0= 'flipY' ) )? )
            // InternalGameDSL.g:3579:3: () otherlv_1= 'region' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= 'name' ( (lv_region_4_0= RULE_STRING ) ) otherlv_5= 'width' ( (lv_width_6_0= RULE_INT ) ) otherlv_7= 'height' ( (lv_height_8_0= RULE_INT ) ) (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )? (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )? ( (lv_flipX_13_0= 'flipX' ) )? ( (lv_flipY_14_0= 'flipY' ) )?
            {
            // InternalGameDSL.g:3579:3: ()
            // InternalGameDSL.g:3580:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameTextureRegionAccess().getGameTextureRegionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,109,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameTextureRegionAccess().getRegionKeyword_1());
              		
            }
            // InternalGameDSL.g:3590:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3591:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3591:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3592:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameTextureRegionAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameTextureRegionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,23,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameTextureRegionAccess().getNameKeyword_3());
              		
            }
            // InternalGameDSL.g:3613:3: ( (lv_region_4_0= RULE_STRING ) )
            // InternalGameDSL.g:3614:4: (lv_region_4_0= RULE_STRING )
            {
            // InternalGameDSL.g:3614:4: (lv_region_4_0= RULE_STRING )
            // InternalGameDSL.g:3615:5: lv_region_4_0= RULE_STRING
            {
            lv_region_4_0=(Token)match(input,RULE_STRING,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_region_4_0, grammarAccess.getGameTextureRegionAccess().getRegionSTRINGTerminalRuleCall_4_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameTextureRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"region",
              						lv_region_4_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_5=(Token)match(input,110,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGameTextureRegionAccess().getWidthKeyword_5());
              		
            }
            // InternalGameDSL.g:3635:3: ( (lv_width_6_0= RULE_INT ) )
            // InternalGameDSL.g:3636:4: (lv_width_6_0= RULE_INT )
            {
            // InternalGameDSL.g:3636:4: (lv_width_6_0= RULE_INT )
            // InternalGameDSL.g:3637:5: lv_width_6_0= RULE_INT
            {
            lv_width_6_0=(Token)match(input,RULE_INT,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_width_6_0, grammarAccess.getGameTextureRegionAccess().getWidthINTTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameTextureRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"width",
              						lv_width_6_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_7=(Token)match(input,111,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGameTextureRegionAccess().getHeightKeyword_7());
              		
            }
            // InternalGameDSL.g:3657:3: ( (lv_height_8_0= RULE_INT ) )
            // InternalGameDSL.g:3658:4: (lv_height_8_0= RULE_INT )
            {
            // InternalGameDSL.g:3658:4: (lv_height_8_0= RULE_INT )
            // InternalGameDSL.g:3659:5: lv_height_8_0= RULE_INT
            {
            lv_height_8_0=(Token)match(input,RULE_INT,FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_height_8_0, grammarAccess.getGameTextureRegionAccess().getHeightINTTerminalRuleCall_8_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGameTextureRegionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"height",
              						lv_height_8_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            // InternalGameDSL.g:3675:3: (otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==112) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalGameDSL.g:3676:4: otherlv_9= 'positionOffsetX' ( (lv_offsetX_10_0= ruleSignedNumber ) )
                    {
                    otherlv_9=(Token)match(input,112,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getGameTextureRegionAccess().getPositionOffsetXKeyword_9_0());
                      			
                    }
                    // InternalGameDSL.g:3680:4: ( (lv_offsetX_10_0= ruleSignedNumber ) )
                    // InternalGameDSL.g:3681:5: (lv_offsetX_10_0= ruleSignedNumber )
                    {
                    // InternalGameDSL.g:3681:5: (lv_offsetX_10_0= ruleSignedNumber )
                    // InternalGameDSL.g:3682:6: lv_offsetX_10_0= ruleSignedNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameTextureRegionAccess().getOffsetXSignedNumberParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_offsetX_10_0=ruleSignedNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameTextureRegionRule());
                      						}
                      						set(
                      							current,
                      							"offsetX",
                      							lv_offsetX_10_0,
                      							"com.hypermodel.games.engine.GameDSL.SignedNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:3700:3: (otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==113) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalGameDSL.g:3701:4: otherlv_11= 'positionOffsetY' ( (lv_offsetY_12_0= ruleSignedNumber ) )
                    {
                    otherlv_11=(Token)match(input,113,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getGameTextureRegionAccess().getPositionOffsetYKeyword_10_0());
                      			
                    }
                    // InternalGameDSL.g:3705:4: ( (lv_offsetY_12_0= ruleSignedNumber ) )
                    // InternalGameDSL.g:3706:5: (lv_offsetY_12_0= ruleSignedNumber )
                    {
                    // InternalGameDSL.g:3706:5: (lv_offsetY_12_0= ruleSignedNumber )
                    // InternalGameDSL.g:3707:6: lv_offsetY_12_0= ruleSignedNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameTextureRegionAccess().getOffsetYSignedNumberParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FOLLOW_110);
                    lv_offsetY_12_0=ruleSignedNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameTextureRegionRule());
                      						}
                      						set(
                      							current,
                      							"offsetY",
                      							lv_offsetY_12_0,
                      							"com.hypermodel.games.engine.GameDSL.SignedNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:3725:3: ( (lv_flipX_13_0= 'flipX' ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==114) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalGameDSL.g:3726:4: (lv_flipX_13_0= 'flipX' )
                    {
                    // InternalGameDSL.g:3726:4: (lv_flipX_13_0= 'flipX' )
                    // InternalGameDSL.g:3727:5: lv_flipX_13_0= 'flipX'
                    {
                    lv_flipX_13_0=(Token)match(input,114,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_flipX_13_0, grammarAccess.getGameTextureRegionAccess().getFlipXFlipXKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGameTextureRegionRule());
                      					}
                      					setWithLastConsumed(current, "flipX", true, "flipX");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:3739:3: ( (lv_flipY_14_0= 'flipY' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==115) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalGameDSL.g:3740:4: (lv_flipY_14_0= 'flipY' )
                    {
                    // InternalGameDSL.g:3740:4: (lv_flipY_14_0= 'flipY' )
                    // InternalGameDSL.g:3741:5: lv_flipY_14_0= 'flipY'
                    {
                    lv_flipY_14_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_flipY_14_0, grammarAccess.getGameTextureRegionAccess().getFlipYFlipYKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGameTextureRegionRule());
                      					}
                      					setWithLastConsumed(current, "flipY", true, "flipY");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameTextureRegion"


    // $ANTLR start "entryRuleGameEvent"
    // InternalGameDSL.g:3757:1: entryRuleGameEvent returns [EObject current=null] : iv_ruleGameEvent= ruleGameEvent EOF ;
    public final EObject entryRuleGameEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGameEvent = null;


        try {
            // InternalGameDSL.g:3757:50: (iv_ruleGameEvent= ruleGameEvent EOF )
            // InternalGameDSL.g:3758:2: iv_ruleGameEvent= ruleGameEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGameEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGameEvent=ruleGameEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGameEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGameEvent"


    // $ANTLR start "ruleGameEvent"
    // InternalGameDSL.g:3764:1: ruleGameEvent returns [EObject current=null] : ( () otherlv_1= 'event' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleGameEvent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_params_4_0 = null;

        EObject lv_params_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3770:2: ( ( () otherlv_1= 'event' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) )
            // InternalGameDSL.g:3771:2: ( () otherlv_1= 'event' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            {
            // InternalGameDSL.g:3771:2: ( () otherlv_1= 'event' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            // InternalGameDSL.g:3772:3: () otherlv_1= 'event' ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) )
            {
            // InternalGameDSL.g:3772:3: ()
            // InternalGameDSL.g:3773:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGameEventAccess().getGameEventAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,116,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGameEventAccess().getEventKeyword_1());
              		
            }
            // InternalGameDSL.g:3783:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalGameDSL.g:3784:4: (lv_name_2_0= ruleValidID )
            {
            // InternalGameDSL.g:3784:4: (lv_name_2_0= ruleValidID )
            // InternalGameDSL.g:3785:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameEventAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameEventRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,100,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGameEventAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalGameDSL.g:3806:3: ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )? )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID||LA52_0==100||LA52_0==142) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalGameDSL.g:3807:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )?
                    {
                    // InternalGameDSL.g:3807:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) )
                    // InternalGameDSL.g:3808:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    {
                    // InternalGameDSL.g:3808:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    // InternalGameDSL.g:3809:6: lv_params_4_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGameEventAccess().getParamsFullJvmFormalParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_params_4_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGameEventRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_4_0,
                      							"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:3826:4: (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==91) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // InternalGameDSL.g:3827:5: otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                            {
                            otherlv_5=(Token)match(input,91,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getGameEventAccess().getCommaKeyword_4_1_0());
                              				
                            }
                            // InternalGameDSL.g:3831:5: ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                            // InternalGameDSL.g:3832:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                            {
                            // InternalGameDSL.g:3832:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                            // InternalGameDSL.g:3833:7: lv_params_6_0= ruleFullJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getGameEventAccess().getParamsFullJvmFormalParameterParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_params_6_0=ruleFullJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getGameEventRule());
                              							}
                              							add(
                              								current,
                              								"params",
                              								lv_params_6_0,
                              								"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getGameEventAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalGameDSL.g:3856:3: ( (lv_body_8_0= ruleXBlockExpression ) )
            // InternalGameDSL.g:3857:4: (lv_body_8_0= ruleXBlockExpression )
            {
            // InternalGameDSL.g:3857:4: (lv_body_8_0= ruleXBlockExpression )
            // InternalGameDSL.g:3858:5: lv_body_8_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGameEventAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGameEventRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameEvent"


    // $ANTLR start "entryRuleSignedNumber"
    // InternalGameDSL.g:3879:1: entryRuleSignedNumber returns [String current=null] : iv_ruleSignedNumber= ruleSignedNumber EOF ;
    public final String entryRuleSignedNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSignedNumber = null;


        try {
            // InternalGameDSL.g:3879:52: (iv_ruleSignedNumber= ruleSignedNumber EOF )
            // InternalGameDSL.g:3880:2: iv_ruleSignedNumber= ruleSignedNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedNumber=ruleSignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedNumber"


    // $ANTLR start "ruleSignedNumber"
    // InternalGameDSL.g:3886:1: ruleSignedNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_UnsignedNumber_1= ruleUnsignedNumber ) ;
    public final AntlrDatatypeRuleToken ruleSignedNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnsignedNumber_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3892:2: ( ( (kw= '-' )? this_UnsignedNumber_1= ruleUnsignedNumber ) )
            // InternalGameDSL.g:3893:2: ( (kw= '-' )? this_UnsignedNumber_1= ruleUnsignedNumber )
            {
            // InternalGameDSL.g:3893:2: ( (kw= '-' )? this_UnsignedNumber_1= ruleUnsignedNumber )
            // InternalGameDSL.g:3894:3: (kw= '-' )? this_UnsignedNumber_1= ruleUnsignedNumber
            {
            // InternalGameDSL.g:3894:3: (kw= '-' )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==117) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalGameDSL.g:3895:4: kw= '-'
                    {
                    kw=(Token)match(input,117,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSignedNumberAccess().getUnsignedNumberParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_UnsignedNumber_1=ruleUnsignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_UnsignedNumber_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignedNumber"


    // $ANTLR start "entryRuleUnsignedNumber"
    // InternalGameDSL.g:3915:1: entryRuleUnsignedNumber returns [String current=null] : iv_ruleUnsignedNumber= ruleUnsignedNumber EOF ;
    public final String entryRuleUnsignedNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnsignedNumber = null;


        try {
            // InternalGameDSL.g:3915:54: (iv_ruleUnsignedNumber= ruleUnsignedNumber EOF )
            // InternalGameDSL.g:3916:2: iv_ruleUnsignedNumber= ruleUnsignedNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedNumber=ruleUnsignedNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedNumber"


    // $ANTLR start "ruleUnsignedNumber"
    // InternalGameDSL.g:3922:1: ruleUnsignedNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUnsignedNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;


        	enterRule();

        try {
            // InternalGameDSL.g:3928:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT ) ) )
            // InternalGameDSL.g:3929:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT ) )
            {
            // InternalGameDSL.g:3929:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT ) )
            // InternalGameDSL.g:3930:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT )
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getUnsignedNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalGameDSL.g:3937:3: (kw= '.' this_INT_2= RULE_INT )
            // InternalGameDSL.g:3938:4: kw= '.' this_INT_2= RULE_INT
            {
            kw=(Token)match(input,118,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current.merge(kw);
              				newLeafNode(kw, grammarAccess.getUnsignedNumberAccess().getFullStopKeyword_1_0());
              			
            }
            this_INT_2=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				current.merge(this_INT_2);
              			
            }
            if ( state.backtracking==0 ) {

              				newLeafNode(this_INT_2, grammarAccess.getUnsignedNumberAccess().getINTTerminalRuleCall_1_1());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedNumber"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalGameDSL.g:3955:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalGameDSL.g:3955:52: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalGameDSL.g:3956:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalGameDSL.g:3962:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:3968:2: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // InternalGameDSL.g:3969:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // InternalGameDSL.g:3969:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // InternalGameDSL.g:3970:3: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // InternalGameDSL.g:3970:3: ()
            // InternalGameDSL.g:3971:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,119,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
              		
            }
            // InternalGameDSL.g:3981:3: ( ( ruleQualifiedName ) )
            // InternalGameDSL.g:3982:4: ( ruleQualifiedName )
            {
            // InternalGameDSL.g:3982:4: ( ruleQualifiedName )
            // InternalGameDSL.g:3983:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXAnnotationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_113);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:3997:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==100) && (synpred1_InternalGameDSL())) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalGameDSL.g:3998:4: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // InternalGameDSL.g:3998:4: ( ( '(' )=>otherlv_3= '(' )
                    // InternalGameDSL.g:3999:5: ( '(' )=>otherlv_3= '('
                    {
                    otherlv_3=(Token)match(input,100,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                      				
                    }

                    }

                    // InternalGameDSL.g:4005:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt55=3;
                    alt55 = dfa55.predict(input);
                    switch (alt55) {
                        case 1 :
                            // InternalGameDSL.g:4006:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalGameDSL.g:4006:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalGameDSL.g:4007:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalGameDSL.g:4007:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalGameDSL.g:4008:7: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalGameDSL.g:4017:7: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalGameDSL.g:4018:8: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_96);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              								}
                              								add(
                              									current,
                              									"elementValuePairs",
                              									lv_elementValuePairs_4_0,
                              									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGameDSL.g:4035:6: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop54:
                            do {
                                int alt54=2;
                                int LA54_0 = input.LA(1);

                                if ( (LA54_0==91) ) {
                                    alt54=1;
                                }


                                switch (alt54) {
                            	case 1 :
                            	    // InternalGameDSL.g:4036:7: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,91,FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	      						
                            	    }
                            	    // InternalGameDSL.g:4040:7: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalGameDSL.g:4041:8: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalGameDSL.g:4050:8: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalGameDSL.g:4051:9: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_96);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"elementValuePairs",
                            	      										lv_elementValuePairs_6_0,
                            	      										"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop54;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:4071:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalGameDSL.g:4071:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalGameDSL.g:4072:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalGameDSL.g:4072:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalGameDSL.g:4073:7: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_7_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValueOrCommaList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalGameDSL.g:4100:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalGameDSL.g:4100:68: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalGameDSL.g:4101:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalGameDSL.g:4107:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4113:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalGameDSL.g:4114:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalGameDSL.g:4114:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalGameDSL.g:4115:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalGameDSL.g:4115:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // InternalGameDSL.g:4116:4: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // InternalGameDSL.g:4125:4: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // InternalGameDSL.g:4126:5: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // InternalGameDSL.g:4126:5: ( ( ruleValidID ) )
            // InternalGameDSL.g:4127:6: ( ruleValidID )
            {
            // InternalGameDSL.g:4127:6: ( ruleValidID )
            // InternalGameDSL.g:4128:7: ruleValidID
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0());
              						
            }
            pushFollow(FOLLOW_115);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_1=(Token)match(input,120,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
              				
            }

            }


            }

            // InternalGameDSL.g:4148:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalGameDSL.g:4149:4: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalGameDSL.g:4149:4: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalGameDSL.g:4150:5: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalGameDSL.g:4171:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalGameDSL.g:4171:75: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalGameDSL.g:4172:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalGameDSL.g:4178:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;

        EObject lv_elements_10_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4184:2: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) ) )
            // InternalGameDSL.g:4185:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            {
            // InternalGameDSL.g:4185:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalGameDSL.g:4186:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // InternalGameDSL.g:4186:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // InternalGameDSL.g:4187:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // InternalGameDSL.g:4187:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // InternalGameDSL.g:4188:5: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // InternalGameDSL.g:4195:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // InternalGameDSL.g:4196:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // InternalGameDSL.g:4196:6: ()
                    // InternalGameDSL.g:4197:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,121,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getNumberSignKeyword_0_0_0_1());
                      					
                    }
                    otherlv_2=(Token)match(input,122,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftSquareBracketKeyword_0_0_0_2());
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:4213:4: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( ((LA58_0>=RULE_INT && LA58_0<=RULE_DECIMAL)||LA58_0==14||LA58_0==75||LA58_0==87||LA58_0==100||LA58_0==117||LA58_0==119||(LA58_0>=121 && LA58_0<=122)||LA58_0==129||LA58_0==145||LA58_0==150||LA58_0==159||(LA58_0>=163 && LA58_0<=164)||(LA58_0>=167 && LA58_0<=179)||LA58_0==181) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalGameDSL.g:4214:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalGameDSL.g:4214:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalGameDSL.g:4215:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalGameDSL.g:4215:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalGameDSL.g:4216:7: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_119);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_3_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalGameDSL.g:4233:5: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop57:
                            do {
                                int alt57=2;
                                int LA57_0 = input.LA(1);

                                if ( (LA57_0==91) ) {
                                    alt57=1;
                                }


                                switch (alt57) {
                            	case 1 :
                            	    // InternalGameDSL.g:4234:6: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalGameDSL.g:4238:6: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalGameDSL.g:4239:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalGameDSL.g:4239:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalGameDSL.g:4240:8: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_119);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_5_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop57;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:4265:3: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    {
                    // InternalGameDSL.g:4265:3: (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? )
                    // InternalGameDSL.g:4266:4: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_120);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XAnnotationOrExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGameDSL.g:4274:4: ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==91) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalGameDSL.g:4275:5: () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            {
                            // InternalGameDSL.g:4275:5: ()
                            // InternalGameDSL.g:4276:6: 
                            {
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndAdd(
                              							grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXListLiteralElementsAction_1_1_0(),
                              							current);
                              					
                            }

                            }

                            // InternalGameDSL.g:4282:5: (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+
                            int cnt59=0;
                            loop59:
                            do {
                                int alt59=2;
                                int LA59_0 = input.LA(1);

                                if ( (LA59_0==91) ) {
                                    alt59=1;
                                }


                                switch (alt59) {
                            	case 1 :
                            	    // InternalGameDSL.g:4283:6: otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_9=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_9, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_1_1_1_0());
                            	      					
                            	    }
                            	    // InternalGameDSL.g:4287:6: ( (lv_elements_10_0= ruleXAnnotationOrExpression ) )
                            	    // InternalGameDSL.g:4288:7: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalGameDSL.g:4288:7: (lv_elements_10_0= ruleXAnnotationOrExpression )
                            	    // InternalGameDSL.g:4289:8: lv_elements_10_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_1_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_elements_10_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_10_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt59 >= 1 ) break loop59;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(59, input);
                                        throw eee;
                                }
                                cnt59++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalGameDSL.g:4313:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalGameDSL.g:4313:64: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalGameDSL.g:4314:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalGameDSL.g:4320:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject this_XAnnotationOrExpression_7 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4326:2: ( ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ) )
            // InternalGameDSL.g:4327:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            {
            // InternalGameDSL.g:4327:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalGameDSL.g:4328:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    {
                    // InternalGameDSL.g:4328:3: ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' )
                    // InternalGameDSL.g:4329:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']'
                    {
                    // InternalGameDSL.g:4329:4: ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) )
                    // InternalGameDSL.g:4330:5: ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' )
                    {
                    // InternalGameDSL.g:4337:5: ( () otherlv_1= '#' otherlv_2= '[' )
                    // InternalGameDSL.g:4338:6: () otherlv_1= '#' otherlv_2= '['
                    {
                    // InternalGameDSL.g:4338:6: ()
                    // InternalGameDSL.g:4339:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueAccess().getXListLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,121,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getNumberSignKeyword_0_0_0_1());
                      					
                    }
                    otherlv_2=(Token)match(input,122,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getXAnnotationElementValueAccess().getLeftSquareBracketKeyword_0_0_0_2());
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:4355:4: ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( ((LA63_0>=RULE_INT && LA63_0<=RULE_DECIMAL)||LA63_0==14||LA63_0==75||LA63_0==87||LA63_0==100||LA63_0==117||LA63_0==119||(LA63_0>=121 && LA63_0<=122)||LA63_0==129||LA63_0==145||LA63_0==150||LA63_0==159||(LA63_0>=163 && LA63_0<=164)||(LA63_0>=167 && LA63_0<=179)||LA63_0==181) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalGameDSL.g:4356:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalGameDSL.g:4356:5: ( (lv_elements_3_0= ruleXAnnotationOrExpression ) )
                            // InternalGameDSL.g:4357:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            {
                            // InternalGameDSL.g:4357:6: (lv_elements_3_0= ruleXAnnotationOrExpression )
                            // InternalGameDSL.g:4358:7: lv_elements_3_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_119);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_3_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalGameDSL.g:4375:5: (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==91) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalGameDSL.g:4376:6: otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalGameDSL.g:4380:6: ( (lv_elements_5_0= ruleXAnnotationOrExpression ) )
                            	    // InternalGameDSL.g:4381:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalGameDSL.g:4381:7: (lv_elements_5_0= ruleXAnnotationOrExpression )
                            	    // InternalGameDSL.g:4382:8: lv_elements_5_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_119);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_5_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXAnnotationElementValueAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:4407:3: this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalGameDSL.g:4419:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalGameDSL.g:4419:64: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalGameDSL.g:4420:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalGameDSL.g:4426:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4432:2: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalGameDSL.g:4433:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalGameDSL.g:4433:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==119) ) {
                alt65=1;
            }
            else if ( ((LA65_0>=RULE_INT && LA65_0<=RULE_DECIMAL)||LA65_0==14||LA65_0==75||LA65_0==87||LA65_0==100||LA65_0==117||(LA65_0>=121 && LA65_0<=122)||LA65_0==129||LA65_0==145||LA65_0==150||LA65_0==159||(LA65_0>=163 && LA65_0<=164)||(LA65_0>=167 && LA65_0<=179)||LA65_0==181) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalGameDSL.g:4434:3: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:4443:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalGameDSL.g:4455:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalGameDSL.g:4455:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalGameDSL.g:4456:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalGameDSL.g:4462:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4468:2: (this_XAssignment_0= ruleXAssignment )
            // InternalGameDSL.g:4469:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalGameDSL.g:4480:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalGameDSL.g:4480:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalGameDSL.g:4481:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalGameDSL.g:4487:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4493:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalGameDSL.g:4494:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalGameDSL.g:4494:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt67=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==EOF||(LA67_1>=RULE_INT && LA67_1<=RULE_DECIMAL)||(LA67_1>=14 && LA67_1<=15)||LA67_1==75||LA67_1==87||(LA67_1>=91 && LA67_1<=92)||LA67_1==100||(LA67_1>=117 && LA67_1<=118)||(LA67_1>=121 && LA67_1<=155)||(LA67_1>=157 && LA67_1<=182)) ) {
                    alt67=2;
                }
                else if ( (LA67_1==120) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;
                }
                }
                break;
            case 167:
                {
                int LA67_2 = input.LA(2);

                if ( (LA67_2==120) ) {
                    alt67=1;
                }
                else if ( (LA67_2==EOF||(LA67_2>=RULE_INT && LA67_2<=RULE_DECIMAL)||(LA67_2>=14 && LA67_2<=15)||LA67_2==75||LA67_2==87||(LA67_2>=91 && LA67_2<=92)||LA67_2==100||(LA67_2>=117 && LA67_2<=118)||(LA67_2>=121 && LA67_2<=155)||(LA67_2>=157 && LA67_2<=182)) ) {
                    alt67=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 2, input);

                    throw nvae;
                }
                }
                break;
            case 168:
                {
                int LA67_3 = input.LA(2);

                if ( (LA67_3==EOF||(LA67_3>=RULE_INT && LA67_3<=RULE_DECIMAL)||(LA67_3>=14 && LA67_3<=15)||LA67_3==75||LA67_3==87||(LA67_3>=91 && LA67_3<=92)||LA67_3==100||(LA67_3>=117 && LA67_3<=118)||(LA67_3>=121 && LA67_3<=155)||(LA67_3>=157 && LA67_3<=182)) ) {
                    alt67=2;
                }
                else if ( (LA67_3==120) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 3, input);

                    throw nvae;
                }
                }
                break;
            case 169:
                {
                int LA67_4 = input.LA(2);

                if ( (LA67_4==EOF||(LA67_4>=RULE_INT && LA67_4<=RULE_DECIMAL)||(LA67_4>=14 && LA67_4<=15)||LA67_4==75||LA67_4==87||(LA67_4>=91 && LA67_4<=92)||LA67_4==100||(LA67_4>=117 && LA67_4<=118)||(LA67_4>=121 && LA67_4<=155)||(LA67_4>=157 && LA67_4<=182)) ) {
                    alt67=2;
                }
                else if ( (LA67_4==120) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 4, input);

                    throw nvae;
                }
                }
                break;
            case 170:
                {
                int LA67_5 = input.LA(2);

                if ( (LA67_5==120) ) {
                    alt67=1;
                }
                else if ( (LA67_5==EOF||(LA67_5>=RULE_INT && LA67_5<=RULE_DECIMAL)||(LA67_5>=14 && LA67_5<=15)||LA67_5==75||LA67_5==87||(LA67_5>=91 && LA67_5<=92)||LA67_5==100||(LA67_5>=117 && LA67_5<=118)||(LA67_5>=121 && LA67_5<=155)||(LA67_5>=157 && LA67_5<=182)) ) {
                    alt67=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 14:
            case 75:
            case 87:
            case 100:
            case 117:
            case 121:
            case 122:
            case 129:
            case 145:
            case 150:
            case 159:
            case 163:
            case 164:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 181:
                {
                alt67=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalGameDSL.g:4495:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalGameDSL.g:4495:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalGameDSL.g:4496:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalGameDSL.g:4496:4: ()
                    // InternalGameDSL.g:4497:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGameDSL.g:4503:4: ( ( ruleFeatureCallID ) )
                    // InternalGameDSL.g:4504:5: ( ruleFeatureCallID )
                    {
                    // InternalGameDSL.g:4504:5: ( ruleFeatureCallID )
                    // InternalGameDSL.g:4505:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_115);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_116);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGameDSL.g:4526:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalGameDSL.g:4527:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalGameDSL.g:4527:5: (lv_value_3_0= ruleXAssignment )
                    // InternalGameDSL.g:4528:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:4547:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalGameDSL.g:4547:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalGameDSL.g:4548:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_121);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGameDSL.g:4556:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt66=2;
                    alt66 = dfa66.predict(input);
                    switch (alt66) {
                        case 1 :
                            // InternalGameDSL.g:4557:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalGameDSL.g:4557:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalGameDSL.g:4558:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalGameDSL.g:4568:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalGameDSL.g:4569:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalGameDSL.g:4569:7: ()
                            // InternalGameDSL.g:4570:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalGameDSL.g:4576:7: ( ( ruleOpMultiAssign ) )
                            // InternalGameDSL.g:4577:8: ( ruleOpMultiAssign )
                            {
                            // InternalGameDSL.g:4577:8: ( ruleOpMultiAssign )
                            // InternalGameDSL.g:4578:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_116);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalGameDSL.g:4594:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalGameDSL.g:4595:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalGameDSL.g:4595:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalGameDSL.g:4596:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalGameDSL.g:4619:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalGameDSL.g:4619:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalGameDSL.g:4620:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalGameDSL.g:4626:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:4632:2: (kw= '=' )
            // InternalGameDSL.g:4633:2: kw= '='
            {
            kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalGameDSL.g:4641:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalGameDSL.g:4641:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalGameDSL.g:4642:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalGameDSL.g:4648:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:4654:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalGameDSL.g:4655:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalGameDSL.g:4655:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt69=7;
            switch ( input.LA(1) ) {
            case 124:
                {
                alt69=1;
                }
                break;
            case 125:
                {
                alt69=2;
                }
                break;
            case 126:
                {
                alt69=3;
                }
                break;
            case 127:
                {
                alt69=4;
                }
                break;
            case 128:
                {
                alt69=5;
                }
                break;
            case 129:
                {
                alt69=6;
                }
                break;
            case 130:
                {
                alt69=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalGameDSL.g:4656:3: kw= '+='
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:4662:3: kw= '-='
                    {
                    kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:4668:3: kw= '*='
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:4674:3: kw= '/='
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGameDSL.g:4680:3: kw= '%='
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGameDSL.g:4686:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalGameDSL.g:4686:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalGameDSL.g:4687:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,129,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGameDSL.g:4704:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalGameDSL.g:4704:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalGameDSL.g:4705:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,130,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalGameDSL.g:4710:4: (kw= '>' )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==130) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalGameDSL.g:4711:5: kw= '>'
                            {
                            kw=(Token)match(input,130,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalGameDSL.g:4727:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalGameDSL.g:4727:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalGameDSL.g:4728:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalGameDSL.g:4734:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4740:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalGameDSL.g:4741:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalGameDSL.g:4741:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalGameDSL.g:4742:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:4750:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==132) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred8_InternalGameDSL()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // InternalGameDSL.g:4751:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalGameDSL.g:4751:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalGameDSL.g:4752:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalGameDSL.g:4762:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalGameDSL.g:4763:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalGameDSL.g:4763:6: ()
            	    // InternalGameDSL.g:4764:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:4770:6: ( ( ruleOpOr ) )
            	    // InternalGameDSL.g:4771:7: ( ruleOpOr )
            	    {
            	    // InternalGameDSL.g:4771:7: ( ruleOpOr )
            	    // InternalGameDSL.g:4772:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:4788:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalGameDSL.g:4789:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalGameDSL.g:4789:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalGameDSL.g:4790:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalGameDSL.g:4812:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalGameDSL.g:4812:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalGameDSL.g:4813:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalGameDSL.g:4819:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:4825:2: (kw= '||' )
            // InternalGameDSL.g:4826:2: kw= '||'
            {
            kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalGameDSL.g:4834:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalGameDSL.g:4834:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalGameDSL.g:4835:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalGameDSL.g:4841:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4847:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalGameDSL.g:4848:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalGameDSL.g:4848:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalGameDSL.g:4849:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_126);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:4857:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==133) ) {
                    int LA71_2 = input.LA(2);

                    if ( (synpred9_InternalGameDSL()) ) {
                        alt71=1;
                    }


                }


                switch (alt71) {
            	case 1 :
            	    // InternalGameDSL.g:4858:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalGameDSL.g:4858:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalGameDSL.g:4859:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalGameDSL.g:4869:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalGameDSL.g:4870:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalGameDSL.g:4870:6: ()
            	    // InternalGameDSL.g:4871:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:4877:6: ( ( ruleOpAnd ) )
            	    // InternalGameDSL.g:4878:7: ( ruleOpAnd )
            	    {
            	    // InternalGameDSL.g:4878:7: ( ruleOpAnd )
            	    // InternalGameDSL.g:4879:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:4895:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalGameDSL.g:4896:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalGameDSL.g:4896:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalGameDSL.g:4897:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalGameDSL.g:4919:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalGameDSL.g:4919:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalGameDSL.g:4920:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalGameDSL.g:4926:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:4932:2: (kw= '&&' )
            // InternalGameDSL.g:4933:2: kw= '&&'
            {
            kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalGameDSL.g:4941:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalGameDSL.g:4941:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalGameDSL.g:4942:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalGameDSL.g:4948:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:4954:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalGameDSL.g:4955:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalGameDSL.g:4955:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalGameDSL.g:4956:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:4964:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop72:
            do {
                int alt72=2;
                switch ( input.LA(1) ) {
                case 134:
                    {
                    int LA72_2 = input.LA(2);

                    if ( (synpred10_InternalGameDSL()) ) {
                        alt72=1;
                    }


                    }
                    break;
                case 135:
                    {
                    int LA72_3 = input.LA(2);

                    if ( (synpred10_InternalGameDSL()) ) {
                        alt72=1;
                    }


                    }
                    break;
                case 136:
                    {
                    int LA72_4 = input.LA(2);

                    if ( (synpred10_InternalGameDSL()) ) {
                        alt72=1;
                    }


                    }
                    break;
                case 137:
                    {
                    int LA72_5 = input.LA(2);

                    if ( (synpred10_InternalGameDSL()) ) {
                        alt72=1;
                    }


                    }
                    break;

                }

                switch (alt72) {
            	case 1 :
            	    // InternalGameDSL.g:4965:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalGameDSL.g:4965:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalGameDSL.g:4966:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalGameDSL.g:4976:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalGameDSL.g:4977:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalGameDSL.g:4977:6: ()
            	    // InternalGameDSL.g:4978:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:4984:6: ( ( ruleOpEquality ) )
            	    // InternalGameDSL.g:4985:7: ( ruleOpEquality )
            	    {
            	    // InternalGameDSL.g:4985:7: ( ruleOpEquality )
            	    // InternalGameDSL.g:4986:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:5002:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalGameDSL.g:5003:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalGameDSL.g:5003:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalGameDSL.g:5004:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalGameDSL.g:5026:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalGameDSL.g:5026:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalGameDSL.g:5027:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalGameDSL.g:5033:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5039:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalGameDSL.g:5040:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalGameDSL.g:5040:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt73=4;
            switch ( input.LA(1) ) {
            case 134:
                {
                alt73=1;
                }
                break;
            case 135:
                {
                alt73=2;
                }
                break;
            case 136:
                {
                alt73=3;
                }
                break;
            case 137:
                {
                alt73=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // InternalGameDSL.g:5041:3: kw= '=='
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5047:3: kw= '!='
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:5053:3: kw= '==='
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:5059:3: kw= '!=='
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalGameDSL.g:5068:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalGameDSL.g:5068:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalGameDSL.g:5069:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalGameDSL.g:5075:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5081:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalGameDSL.g:5082:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalGameDSL.g:5082:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalGameDSL.g:5083:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5091:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop74:
            do {
                int alt74=3;
                switch ( input.LA(1) ) {
                case 129:
                    {
                    int LA74_2 = input.LA(2);

                    if ( (synpred12_InternalGameDSL()) ) {
                        alt74=2;
                    }


                    }
                    break;
                case 130:
                    {
                    int LA74_3 = input.LA(2);

                    if ( (synpred12_InternalGameDSL()) ) {
                        alt74=2;
                    }


                    }
                    break;
                case 138:
                    {
                    int LA74_4 = input.LA(2);

                    if ( (synpred11_InternalGameDSL()) ) {
                        alt74=1;
                    }


                    }
                    break;
                case 131:
                    {
                    int LA74_5 = input.LA(2);

                    if ( (synpred12_InternalGameDSL()) ) {
                        alt74=2;
                    }


                    }
                    break;

                }

                switch (alt74) {
            	case 1 :
            	    // InternalGameDSL.g:5092:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalGameDSL.g:5092:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalGameDSL.g:5093:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalGameDSL.g:5093:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalGameDSL.g:5094:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalGameDSL.g:5100:6: ( () otherlv_2= 'instanceof' )
            	    // InternalGameDSL.g:5101:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalGameDSL.g:5101:7: ()
            	    // InternalGameDSL.g:5102:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,138,FOLLOW_97); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:5114:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalGameDSL.g:5115:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalGameDSL.g:5115:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalGameDSL.g:5116:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGameDSL.g:5135:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalGameDSL.g:5135:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalGameDSL.g:5136:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalGameDSL.g:5136:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalGameDSL.g:5137:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalGameDSL.g:5147:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalGameDSL.g:5148:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalGameDSL.g:5148:7: ()
            	    // InternalGameDSL.g:5149:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalGameDSL.g:5155:7: ( ( ruleOpCompare ) )
            	    // InternalGameDSL.g:5156:8: ( ruleOpCompare )
            	    {
            	    // InternalGameDSL.g:5156:8: ( ruleOpCompare )
            	    // InternalGameDSL.g:5157:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:5173:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalGameDSL.g:5174:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalGameDSL.g:5174:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalGameDSL.g:5175:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalGameDSL.g:5198:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalGameDSL.g:5198:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalGameDSL.g:5199:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalGameDSL.g:5205:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5211:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalGameDSL.g:5212:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalGameDSL.g:5212:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt75=4;
            switch ( input.LA(1) ) {
            case 131:
                {
                alt75=1;
                }
                break;
            case 129:
                {
                int LA75_2 = input.LA(2);

                if ( (LA75_2==EOF||(LA75_2>=RULE_INT && LA75_2<=RULE_DECIMAL)||LA75_2==14||LA75_2==75||LA75_2==87||LA75_2==100||LA75_2==117||(LA75_2>=121 && LA75_2<=122)||LA75_2==129||LA75_2==145||LA75_2==150||LA75_2==159||(LA75_2>=163 && LA75_2<=164)||(LA75_2>=167 && LA75_2<=179)||LA75_2==181) ) {
                    alt75=4;
                }
                else if ( (LA75_2==120) ) {
                    alt75=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 2, input);

                    throw nvae;
                }
                }
                break;
            case 130:
                {
                alt75=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }

            switch (alt75) {
                case 1 :
                    // InternalGameDSL.g:5213:3: kw= '>='
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5219:3: (kw= '<' kw= '=' )
                    {
                    // InternalGameDSL.g:5219:3: (kw= '<' kw= '=' )
                    // InternalGameDSL.g:5220:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,129,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:5232:3: kw= '>'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:5238:3: kw= '<'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalGameDSL.g:5247:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalGameDSL.g:5247:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalGameDSL.g:5248:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalGameDSL.g:5254:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5260:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalGameDSL.g:5261:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalGameDSL.g:5261:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalGameDSL.g:5262:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5270:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop76:
            do {
                int alt76=2;
                alt76 = dfa76.predict(input);
                switch (alt76) {
            	case 1 :
            	    // InternalGameDSL.g:5271:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalGameDSL.g:5271:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalGameDSL.g:5272:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalGameDSL.g:5282:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalGameDSL.g:5283:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalGameDSL.g:5283:6: ()
            	    // InternalGameDSL.g:5284:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:5290:6: ( ( ruleOpOther ) )
            	    // InternalGameDSL.g:5291:7: ( ruleOpOther )
            	    {
            	    // InternalGameDSL.g:5291:7: ( ruleOpOther )
            	    // InternalGameDSL.g:5292:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:5308:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalGameDSL.g:5309:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalGameDSL.g:5309:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalGameDSL.g:5310:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalGameDSL.g:5332:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalGameDSL.g:5332:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalGameDSL.g:5333:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalGameDSL.g:5339:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5345:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalGameDSL.g:5346:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalGameDSL.g:5346:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt79=9;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalGameDSL.g:5347:3: kw= '->'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5353:3: kw= '..<'
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:5359:3: (kw= '>' kw= '..' )
                    {
                    // InternalGameDSL.g:5359:3: (kw= '>' kw= '..' )
                    // InternalGameDSL.g:5360:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,130,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:5372:3: kw= '..'
                    {
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGameDSL.g:5378:3: kw= '=>'
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGameDSL.g:5384:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalGameDSL.g:5384:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalGameDSL.g:5385:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,130,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalGameDSL.g:5390:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( (LA77_0==130) ) {
                        int LA77_1 = input.LA(2);

                        if ( (LA77_1==EOF||(LA77_1>=RULE_INT && LA77_1<=RULE_DECIMAL)||LA77_1==14||LA77_1==75||LA77_1==87||LA77_1==100||LA77_1==117||(LA77_1>=121 && LA77_1<=122)||LA77_1==129||LA77_1==145||LA77_1==150||LA77_1==159||(LA77_1>=163 && LA77_1<=164)||(LA77_1>=167 && LA77_1<=179)||LA77_1==181) ) {
                            alt77=2;
                        }
                        else if ( (LA77_1==130) && (synpred14_InternalGameDSL())) {
                            alt77=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 77, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 77, 0, input);

                        throw nvae;
                    }
                    switch (alt77) {
                        case 1 :
                            // InternalGameDSL.g:5391:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalGameDSL.g:5391:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalGameDSL.g:5392:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalGameDSL.g:5397:6: (kw= '>' kw= '>' )
                            // InternalGameDSL.g:5398:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,130,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:5411:5: kw= '>'
                            {
                            kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGameDSL.g:5419:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalGameDSL.g:5419:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalGameDSL.g:5420:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,129,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalGameDSL.g:5425:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt78=3;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==129) ) {
                        int LA78_1 = input.LA(2);

                        if ( (synpred15_InternalGameDSL()) ) {
                            alt78=1;
                        }
                        else if ( (true) ) {
                            alt78=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 78, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA78_0==142) ) {
                        alt78=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 78, 0, input);

                        throw nvae;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalGameDSL.g:5426:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalGameDSL.g:5426:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalGameDSL.g:5427:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalGameDSL.g:5432:6: (kw= '<' kw= '<' )
                            // InternalGameDSL.g:5433:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:5446:5: kw= '<'
                            {
                            kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalGameDSL.g:5452:5: kw= '=>'
                            {
                            kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGameDSL.g:5460:3: kw= '<>'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalGameDSL.g:5466:3: kw= '?:'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalGameDSL.g:5475:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalGameDSL.g:5475:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalGameDSL.g:5476:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalGameDSL.g:5482:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5488:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalGameDSL.g:5489:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalGameDSL.g:5489:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalGameDSL.g:5490:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_133);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5498:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==145) ) {
                    int LA80_2 = input.LA(2);

                    if ( (synpred16_InternalGameDSL()) ) {
                        alt80=1;
                    }


                }
                else if ( (LA80_0==117) ) {
                    int LA80_3 = input.LA(2);

                    if ( (synpred16_InternalGameDSL()) ) {
                        alt80=1;
                    }


                }


                switch (alt80) {
            	case 1 :
            	    // InternalGameDSL.g:5499:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalGameDSL.g:5499:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalGameDSL.g:5500:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalGameDSL.g:5510:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalGameDSL.g:5511:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalGameDSL.g:5511:6: ()
            	    // InternalGameDSL.g:5512:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:5518:6: ( ( ruleOpAdd ) )
            	    // InternalGameDSL.g:5519:7: ( ruleOpAdd )
            	    {
            	    // InternalGameDSL.g:5519:7: ( ruleOpAdd )
            	    // InternalGameDSL.g:5520:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:5536:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalGameDSL.g:5537:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalGameDSL.g:5537:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalGameDSL.g:5538:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalGameDSL.g:5560:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalGameDSL.g:5560:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalGameDSL.g:5561:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalGameDSL.g:5567:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5573:2: ( (kw= '+' | kw= '-' ) )
            // InternalGameDSL.g:5574:2: (kw= '+' | kw= '-' )
            {
            // InternalGameDSL.g:5574:2: (kw= '+' | kw= '-' )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==145) ) {
                alt81=1;
            }
            else if ( (LA81_0==117) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }
            switch (alt81) {
                case 1 :
                    // InternalGameDSL.g:5575:3: kw= '+'
                    {
                    kw=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5581:3: kw= '-'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalGameDSL.g:5590:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalGameDSL.g:5590:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalGameDSL.g:5591:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalGameDSL.g:5597:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5603:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalGameDSL.g:5604:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalGameDSL.g:5604:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalGameDSL.g:5605:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5613:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop82:
            do {
                int alt82=2;
                switch ( input.LA(1) ) {
                case 146:
                    {
                    int LA82_2 = input.LA(2);

                    if ( (synpred17_InternalGameDSL()) ) {
                        alt82=1;
                    }


                    }
                    break;
                case 147:
                    {
                    int LA82_3 = input.LA(2);

                    if ( (synpred17_InternalGameDSL()) ) {
                        alt82=1;
                    }


                    }
                    break;
                case 148:
                    {
                    int LA82_4 = input.LA(2);

                    if ( (synpred17_InternalGameDSL()) ) {
                        alt82=1;
                    }


                    }
                    break;
                case 149:
                    {
                    int LA82_5 = input.LA(2);

                    if ( (synpred17_InternalGameDSL()) ) {
                        alt82=1;
                    }


                    }
                    break;

                }

                switch (alt82) {
            	case 1 :
            	    // InternalGameDSL.g:5614:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalGameDSL.g:5614:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalGameDSL.g:5615:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalGameDSL.g:5625:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalGameDSL.g:5626:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalGameDSL.g:5626:6: ()
            	    // InternalGameDSL.g:5627:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalGameDSL.g:5633:6: ( ( ruleOpMulti ) )
            	    // InternalGameDSL.g:5634:7: ( ruleOpMulti )
            	    {
            	    // InternalGameDSL.g:5634:7: ( ruleOpMulti )
            	    // InternalGameDSL.g:5635:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:5651:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalGameDSL.g:5652:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalGameDSL.g:5652:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalGameDSL.g:5653:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalGameDSL.g:5675:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalGameDSL.g:5675:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalGameDSL.g:5676:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalGameDSL.g:5682:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5688:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalGameDSL.g:5689:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalGameDSL.g:5689:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt83=4;
            switch ( input.LA(1) ) {
            case 146:
                {
                alt83=1;
                }
                break;
            case 147:
                {
                alt83=2;
                }
                break;
            case 148:
                {
                alt83=3;
                }
                break;
            case 149:
                {
                alt83=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalGameDSL.g:5690:3: kw= '*'
                    {
                    kw=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5696:3: kw= '**'
                    {
                    kw=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:5702:3: kw= '/'
                    {
                    kw=(Token)match(input,148,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:5708:3: kw= '%'
                    {
                    kw=(Token)match(input,149,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalGameDSL.g:5717:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalGameDSL.g:5717:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalGameDSL.g:5718:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalGameDSL.g:5724:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5730:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalGameDSL.g:5731:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalGameDSL.g:5731:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==117||LA84_0==145||LA84_0==150) ) {
                alt84=1;
            }
            else if ( ((LA84_0>=RULE_INT && LA84_0<=RULE_DECIMAL)||LA84_0==14||LA84_0==75||LA84_0==87||LA84_0==100||(LA84_0>=121 && LA84_0<=122)||LA84_0==129||LA84_0==159||(LA84_0>=163 && LA84_0<=164)||(LA84_0>=167 && LA84_0<=179)||LA84_0==181) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalGameDSL.g:5732:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalGameDSL.g:5732:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalGameDSL.g:5733:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalGameDSL.g:5733:4: ()
                    // InternalGameDSL.g:5734:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGameDSL.g:5740:4: ( ( ruleOpUnary ) )
                    // InternalGameDSL.g:5741:5: ( ruleOpUnary )
                    {
                    // InternalGameDSL.g:5741:5: ( ruleOpUnary )
                    // InternalGameDSL.g:5742:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_116);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:5756:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalGameDSL.g:5757:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalGameDSL.g:5757:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalGameDSL.g:5758:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5777:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalGameDSL.g:5789:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalGameDSL.g:5789:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalGameDSL.g:5790:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalGameDSL.g:5796:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5802:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalGameDSL.g:5803:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalGameDSL.g:5803:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt85=3;
            switch ( input.LA(1) ) {
            case 150:
                {
                alt85=1;
                }
                break;
            case 117:
                {
                alt85=2;
                }
                break;
            case 145:
                {
                alt85=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalGameDSL.g:5804:3: kw= '!'
                    {
                    kw=(Token)match(input,150,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5810:3: kw= '-'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:5816:3: kw= '+'
                    {
                    kw=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalGameDSL.g:5825:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalGameDSL.g:5825:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalGameDSL.g:5826:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalGameDSL.g:5832:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5838:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalGameDSL.g:5839:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalGameDSL.g:5839:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalGameDSL.g:5840:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5848:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==151) ) {
                    int LA86_2 = input.LA(2);

                    if ( (synpred18_InternalGameDSL()) ) {
                        alt86=1;
                    }


                }


                switch (alt86) {
            	case 1 :
            	    // InternalGameDSL.g:5849:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalGameDSL.g:5849:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalGameDSL.g:5850:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalGameDSL.g:5856:5: ( () otherlv_2= 'as' )
            	    // InternalGameDSL.g:5857:6: () otherlv_2= 'as'
            	    {
            	    // InternalGameDSL.g:5857:6: ()
            	    // InternalGameDSL.g:5858:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,151,FOLLOW_97); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:5870:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalGameDSL.g:5871:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalGameDSL.g:5871:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalGameDSL.g:5872:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalGameDSL.g:5894:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalGameDSL.g:5894:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalGameDSL.g:5895:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalGameDSL.g:5901:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:5907:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalGameDSL.g:5908:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalGameDSL.g:5908:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalGameDSL.g:5909:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:5917:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==152) ) {
                int LA87_1 = input.LA(2);

                if ( (synpred19_InternalGameDSL()) ) {
                    alt87=1;
                }
            }
            else if ( (LA87_0==153) ) {
                int LA87_2 = input.LA(2);

                if ( (synpred19_InternalGameDSL()) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalGameDSL.g:5918:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalGameDSL.g:5928:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalGameDSL.g:5929:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalGameDSL.g:5929:5: ()
                    // InternalGameDSL.g:5930:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalGameDSL.g:5936:5: ( ( ruleOpPostfix ) )
                    // InternalGameDSL.g:5937:6: ( ruleOpPostfix )
                    {
                    // InternalGameDSL.g:5937:6: ( ruleOpPostfix )
                    // InternalGameDSL.g:5938:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalGameDSL.g:5958:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalGameDSL.g:5958:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalGameDSL.g:5959:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalGameDSL.g:5965:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:5971:2: ( (kw= '++' | kw= '--' ) )
            // InternalGameDSL.g:5972:2: (kw= '++' | kw= '--' )
            {
            // InternalGameDSL.g:5972:2: (kw= '++' | kw= '--' )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==152) ) {
                alt88=1;
            }
            else if ( (LA88_0==153) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalGameDSL.g:5973:3: kw= '++'
                    {
                    kw=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:5979:3: kw= '--'
                    {
                    kw=(Token)match(input,153,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalGameDSL.g:5988:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalGameDSL.g:5988:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalGameDSL.g:5989:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalGameDSL.g:5995:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6001:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalGameDSL.g:6002:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalGameDSL.g:6002:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalGameDSL.g:6003:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:6011:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop97:
            do {
                int alt97=3;
                switch ( input.LA(1) ) {
                case 118:
                    {
                    int LA97_2 = input.LA(2);

                    if ( (synpred20_InternalGameDSL()) ) {
                        alt97=1;
                    }
                    else if ( (synpred21_InternalGameDSL()) ) {
                        alt97=2;
                    }


                    }
                    break;
                case 154:
                    {
                    int LA97_3 = input.LA(2);

                    if ( (synpred20_InternalGameDSL()) ) {
                        alt97=1;
                    }
                    else if ( (synpred21_InternalGameDSL()) ) {
                        alt97=2;
                    }


                    }
                    break;
                case 155:
                    {
                    int LA97_4 = input.LA(2);

                    if ( (synpred21_InternalGameDSL()) ) {
                        alt97=2;
                    }


                    }
                    break;

                }

                switch (alt97) {
            	case 1 :
            	    // InternalGameDSL.g:6012:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalGameDSL.g:6012:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalGameDSL.g:6013:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalGameDSL.g:6013:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalGameDSL.g:6014:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalGameDSL.g:6034:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalGameDSL.g:6035:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalGameDSL.g:6035:7: ()
            	    // InternalGameDSL.g:6036:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalGameDSL.g:6042:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt89=2;
            	    int LA89_0 = input.LA(1);

            	    if ( (LA89_0==118) ) {
            	        alt89=1;
            	    }
            	    else if ( (LA89_0==154) ) {
            	        alt89=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 89, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt89) {
            	        case 1 :
            	            // InternalGameDSL.g:6043:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,118,FOLLOW_138); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalGameDSL.g:6048:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalGameDSL.g:6048:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalGameDSL.g:6049:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalGameDSL.g:6049:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalGameDSL.g:6050:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,154,FOLLOW_138); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalGameDSL.g:6063:7: ( ( ruleFeatureCallID ) )
            	    // InternalGameDSL.g:6064:8: ( ruleFeatureCallID )
            	    {
            	    // InternalGameDSL.g:6064:8: ( ruleFeatureCallID )
            	    // InternalGameDSL.g:6065:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_116);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:6088:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalGameDSL.g:6089:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalGameDSL.g:6089:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalGameDSL.g:6090:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGameDSL.g:6109:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalGameDSL.g:6109:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalGameDSL.g:6110:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalGameDSL.g:6110:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalGameDSL.g:6111:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalGameDSL.g:6131:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalGameDSL.g:6132:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalGameDSL.g:6132:7: ()
            	    // InternalGameDSL.g:6133:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalGameDSL.g:6139:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt90=3;
            	    switch ( input.LA(1) ) {
            	    case 118:
            	        {
            	        alt90=1;
            	        }
            	        break;
            	    case 155:
            	        {
            	        alt90=2;
            	        }
            	        break;
            	    case 154:
            	        {
            	        alt90=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 90, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt90) {
            	        case 1 :
            	            // InternalGameDSL.g:6140:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,118,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalGameDSL.g:6145:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalGameDSL.g:6145:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalGameDSL.g:6146:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalGameDSL.g:6146:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalGameDSL.g:6147:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,155,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", true, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalGameDSL.g:6160:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalGameDSL.g:6160:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalGameDSL.g:6161:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalGameDSL.g:6161:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalGameDSL.g:6162:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,154,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalGameDSL.g:6177:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt92=2;
            	    int LA92_0 = input.LA(1);

            	    if ( (LA92_0==129) ) {
            	        alt92=1;
            	    }
            	    switch (alt92) {
            	        case 1 :
            	            // InternalGameDSL.g:6178:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,129,FOLLOW_140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalGameDSL.g:6182:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalGameDSL.g:6183:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalGameDSL.g:6183:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalGameDSL.g:6184:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_141);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalGameDSL.g:6201:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop91:
            	            do {
            	                int alt91=2;
            	                int LA91_0 = input.LA(1);

            	                if ( (LA91_0==91) ) {
            	                    alt91=1;
            	                }


            	                switch (alt91) {
            	            	case 1 :
            	            	    // InternalGameDSL.g:6202:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,91,FOLLOW_140); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalGameDSL.g:6206:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalGameDSL.g:6207:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalGameDSL.g:6207:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalGameDSL.g:6208:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_141);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop91;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,130,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGameDSL.g:6231:5: ( ( ruleIdOrSuper ) )
            	    // InternalGameDSL.g:6232:6: ( ruleIdOrSuper )
            	    {
            	    // InternalGameDSL.g:6232:6: ( ruleIdOrSuper )
            	    // InternalGameDSL.g:6233:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_142);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:6247:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt95=2;
            	    alt95 = dfa95.predict(input);
            	    switch (alt95) {
            	        case 1 :
            	            // InternalGameDSL.g:6248:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalGameDSL.g:6248:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalGameDSL.g:6249:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalGameDSL.g:6253:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalGameDSL.g:6254:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,100,FOLLOW_143); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalGameDSL.g:6266:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt94=3;
            	            alt94 = dfa94.predict(input);
            	            switch (alt94) {
            	                case 1 :
            	                    // InternalGameDSL.g:6267:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalGameDSL.g:6267:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalGameDSL.g:6268:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalGameDSL.g:6293:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalGameDSL.g:6294:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_88);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalGameDSL.g:6312:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalGameDSL.g:6312:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalGameDSL.g:6313:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalGameDSL.g:6313:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalGameDSL.g:6314:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalGameDSL.g:6314:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalGameDSL.g:6315:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_96);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalGameDSL.g:6332:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop93:
            	                    do {
            	                        int alt93=2;
            	                        int LA93_0 = input.LA(1);

            	                        if ( (LA93_0==91) ) {
            	                            alt93=1;
            	                        }


            	                        switch (alt93) {
            	                    	case 1 :
            	                    	    // InternalGameDSL.g:6333:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalGameDSL.g:6337:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalGameDSL.g:6338:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalGameDSL.g:6338:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalGameDSL.g:6339:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_96);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop93;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,92,FOLLOW_144); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalGameDSL.g:6364:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt96=2;
            	    alt96 = dfa96.predict(input);
            	    switch (alt96) {
            	        case 1 :
            	            // InternalGameDSL.g:6365:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalGameDSL.g:6371:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalGameDSL.g:6372:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_137);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalGameDSL.g:6395:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalGameDSL.g:6395:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalGameDSL.g:6396:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalGameDSL.g:6402:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6408:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalGameDSL.g:6409:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalGameDSL.g:6409:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt98=15;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalGameDSL.g:6410:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:6419:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:6428:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:6437:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalGameDSL.g:6437:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalGameDSL.g:6438:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGameDSL.g:6455:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGameDSL.g:6464:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGameDSL.g:6473:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalGameDSL.g:6482:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalGameDSL.g:6482:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalGameDSL.g:6483:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGameDSL.g:6506:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalGameDSL.g:6515:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalGameDSL.g:6524:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalGameDSL.g:6533:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalGameDSL.g:6542:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalGameDSL.g:6551:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalGameDSL.g:6560:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalGameDSL.g:6572:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalGameDSL.g:6572:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalGameDSL.g:6573:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalGameDSL.g:6579:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6585:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalGameDSL.g:6586:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalGameDSL.g:6586:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt99=7;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==121) ) {
                alt99=1;
            }
            else if ( (LA99_0==122) && (synpred27_InternalGameDSL())) {
                alt99=2;
            }
            else if ( ((LA99_0>=173 && LA99_0<=174)) ) {
                alt99=3;
            }
            else if ( (LA99_0==RULE_INT||(LA99_0>=RULE_HEX && LA99_0<=RULE_DECIMAL)) ) {
                alt99=4;
            }
            else if ( (LA99_0==175) ) {
                alt99=5;
            }
            else if ( (LA99_0==RULE_STRING) ) {
                alt99=6;
            }
            else if ( (LA99_0==176) ) {
                alt99=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalGameDSL.g:6587:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:6596:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalGameDSL.g:6596:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalGameDSL.g:6597:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:6613:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:6622:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGameDSL.g:6631:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGameDSL.g:6640:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGameDSL.g:6649:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalGameDSL.g:6661:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalGameDSL.g:6661:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalGameDSL.g:6662:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalGameDSL.g:6668:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6674:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalGameDSL.g:6675:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalGameDSL.g:6675:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==121) ) {
                int LA100_1 = input.LA(2);

                if ( (LA100_1==122) ) {
                    alt100=2;
                }
                else if ( (LA100_1==14) ) {
                    alt100=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalGameDSL.g:6676:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:6685:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalGameDSL.g:6697:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalGameDSL.g:6697:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalGameDSL.g:6698:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalGameDSL.g:6704:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6710:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalGameDSL.g:6711:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalGameDSL.g:6711:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalGameDSL.g:6712:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalGameDSL.g:6712:3: ()
            // InternalGameDSL.g:6713:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,121,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:6727:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=RULE_INT && LA102_0<=RULE_DECIMAL)||LA102_0==14||LA102_0==75||LA102_0==87||LA102_0==100||LA102_0==117||(LA102_0>=121 && LA102_0<=122)||LA102_0==129||LA102_0==145||LA102_0==150||LA102_0==159||(LA102_0>=163 && LA102_0<=164)||(LA102_0>=167 && LA102_0<=179)||LA102_0==181) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalGameDSL.g:6728:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalGameDSL.g:6728:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalGameDSL.g:6729:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:6729:5: (lv_elements_3_0= ruleXExpression )
                    // InternalGameDSL.g:6730:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_146);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:6747:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==91) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalGameDSL.g:6748:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:6752:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalGameDSL.g:6753:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalGameDSL.g:6753:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalGameDSL.g:6754:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_146);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalGameDSL.g:6781:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalGameDSL.g:6781:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalGameDSL.g:6782:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalGameDSL.g:6788:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6794:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalGameDSL.g:6795:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalGameDSL.g:6795:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalGameDSL.g:6796:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalGameDSL.g:6796:3: ()
            // InternalGameDSL.g:6797:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,121,FOLLOW_117); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,122,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalGameDSL.g:6811:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=RULE_INT && LA104_0<=RULE_DECIMAL)||LA104_0==14||LA104_0==75||LA104_0==87||LA104_0==100||LA104_0==117||(LA104_0>=121 && LA104_0<=122)||LA104_0==129||LA104_0==145||LA104_0==150||LA104_0==159||(LA104_0>=163 && LA104_0<=164)||(LA104_0>=167 && LA104_0<=179)||LA104_0==181) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalGameDSL.g:6812:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalGameDSL.g:6812:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalGameDSL.g:6813:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:6813:5: (lv_elements_3_0= ruleXExpression )
                    // InternalGameDSL.g:6814:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_119);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:6831:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==91) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // InternalGameDSL.g:6832:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:6836:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalGameDSL.g:6837:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalGameDSL.g:6837:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalGameDSL.g:6838:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_119);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalGameDSL.g:6865:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalGameDSL.g:6865:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalGameDSL.g:6866:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalGameDSL.g:6872:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:6878:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalGameDSL.g:6879:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalGameDSL.g:6879:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalGameDSL.g:6880:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalGameDSL.g:6880:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalGameDSL.g:6881:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalGameDSL.g:6887:4: ( () otherlv_1= '[' )
            // InternalGameDSL.g:6888:5: () otherlv_1= '['
            {
            // InternalGameDSL.g:6888:5: ()
            // InternalGameDSL.g:6889:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,122,FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalGameDSL.g:6901:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt107=2;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // InternalGameDSL.g:6902:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalGameDSL.g:6925:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalGameDSL.g:6926:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalGameDSL.g:6926:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==RULE_ID||LA106_0==100||LA106_0==142) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // InternalGameDSL.g:6927:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalGameDSL.g:6927:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalGameDSL.g:6928:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalGameDSL.g:6928:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalGameDSL.g:6929:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_148);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGameDSL.g:6946:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop105:
                            do {
                                int alt105=2;
                                int LA105_0 = input.LA(1);

                                if ( (LA105_0==91) ) {
                                    alt105=1;
                                }


                                switch (alt105) {
                            	case 1 :
                            	    // InternalGameDSL.g:6947:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,91,FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalGameDSL.g:6951:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalGameDSL.g:6952:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalGameDSL.g:6952:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalGameDSL.g:6953:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_148);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop105;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalGameDSL.g:6972:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalGameDSL.g:6973:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalGameDSL.g:6973:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalGameDSL.g:6974:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,156,FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", true, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:6988:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalGameDSL.g:6989:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalGameDSL.g:6989:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalGameDSL.g:6990:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_150);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalGameDSL.g:7015:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalGameDSL.g:7015:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalGameDSL.g:7016:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalGameDSL.g:7022:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7028:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalGameDSL.g:7029:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalGameDSL.g:7029:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalGameDSL.g:7030:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalGameDSL.g:7030:3: ()
            // InternalGameDSL.g:7031:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:7037:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( ((LA109_0>=RULE_INT && LA109_0<=RULE_DECIMAL)||LA109_0==14||LA109_0==75||LA109_0==87||LA109_0==100||LA109_0==117||(LA109_0>=121 && LA109_0<=122)||LA109_0==129||LA109_0==145||LA109_0==150||LA109_0==159||(LA109_0>=163 && LA109_0<=179)||LA109_0==181) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalGameDSL.g:7038:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalGameDSL.g:7038:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalGameDSL.g:7039:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalGameDSL.g:7039:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalGameDSL.g:7040:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:7057:4: (otherlv_2= ';' )?
            	    int alt108=2;
            	    int LA108_0 = input.LA(1);

            	    if ( (LA108_0==157) ) {
            	        alt108=1;
            	    }
            	    switch (alt108) {
            	        case 1 :
            	            // InternalGameDSL.g:7058:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,157,FOLLOW_152); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalGameDSL.g:7068:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalGameDSL.g:7068:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalGameDSL.g:7069:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalGameDSL.g:7075:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7081:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:7082:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:7082:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalGameDSL.g:7083:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:7083:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalGameDSL.g:7084:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalGameDSL.g:7109:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalGameDSL.g:7110:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalGameDSL.g:7110:5: ()
            // InternalGameDSL.g:7111:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalGameDSL.g:7117:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_ID||LA111_0==100||LA111_0==142) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalGameDSL.g:7118:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalGameDSL.g:7118:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalGameDSL.g:7119:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalGameDSL.g:7119:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalGameDSL.g:7120:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_148);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalGameDSL.g:7137:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==91) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // InternalGameDSL.g:7138:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,91,FOLLOW_97); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalGameDSL.g:7142:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalGameDSL.g:7143:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalGameDSL.g:7143:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalGameDSL.g:7144:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_148);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalGameDSL.g:7163:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalGameDSL.g:7164:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalGameDSL.g:7164:6: (lv_explicitSyntax_4_0= '|' )
            // InternalGameDSL.g:7165:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,156,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", true, "|");
              						
            }

            }


            }


            }


            }

            // InternalGameDSL.g:7179:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalGameDSL.g:7180:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:7180:4: (lv_expression_5_0= ruleXExpression )
            // InternalGameDSL.g:7181:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalGameDSL.g:7202:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalGameDSL.g:7202:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalGameDSL.g:7203:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalGameDSL.g:7209:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7215:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalGameDSL.g:7216:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalGameDSL.g:7216:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalGameDSL.g:7217:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_88);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalGameDSL.g:7237:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalGameDSL.g:7237:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalGameDSL.g:7238:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalGameDSL.g:7244:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7250:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalGameDSL.g:7251:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalGameDSL.g:7251:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalGameDSL.g:7252:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalGameDSL.g:7252:3: ()
            // InternalGameDSL.g:7253:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:7267:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalGameDSL.g:7268:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalGameDSL.g:7268:4: (lv_if_3_0= ruleXExpression )
            // InternalGameDSL.g:7269:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalGameDSL.g:7290:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalGameDSL.g:7291:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:7291:4: (lv_then_5_0= ruleXExpression )
            // InternalGameDSL.g:7292:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_153);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:7309:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==158) ) {
                int LA112_1 = input.LA(2);

                if ( (synpred31_InternalGameDSL()) ) {
                    alt112=1;
                }
            }
            switch (alt112) {
                case 1 :
                    // InternalGameDSL.g:7310:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalGameDSL.g:7310:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalGameDSL.g:7311:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,158,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalGameDSL.g:7317:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalGameDSL.g:7318:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7318:5: (lv_else_7_0= ruleXExpression )
                    // InternalGameDSL.g:7319:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalGameDSL.g:7341:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalGameDSL.g:7341:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalGameDSL.g:7342:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalGameDSL.g:7348:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7354:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalGameDSL.g:7355:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalGameDSL.g:7355:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalGameDSL.g:7356:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalGameDSL.g:7356:3: ()
            // InternalGameDSL.g:7357:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,159,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalGameDSL.g:7367:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt114=2;
            alt114 = dfa114.predict(input);
            switch (alt114) {
                case 1 :
                    // InternalGameDSL.g:7368:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalGameDSL.g:7368:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalGameDSL.g:7369:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalGameDSL.g:7369:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalGameDSL.g:7370:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalGameDSL.g:7380:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalGameDSL.g:7381:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,100,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalGameDSL.g:7385:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalGameDSL.g:7386:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalGameDSL.g:7386:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalGameDSL.g:7387:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_155);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,160,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:7410:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalGameDSL.g:7411:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7411:6: (lv_switch_5_0= ruleXExpression )
                    // InternalGameDSL.g:7412:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_88);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:7435:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalGameDSL.g:7435:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalGameDSL.g:7436:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalGameDSL.g:7436:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt113=2;
                    alt113 = dfa113.predict(input);
                    switch (alt113) {
                        case 1 :
                            // InternalGameDSL.g:7437:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalGameDSL.g:7446:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalGameDSL.g:7447:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalGameDSL.g:7447:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalGameDSL.g:7448:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalGameDSL.g:7448:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalGameDSL.g:7449:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_155);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,160,FOLLOW_116); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalGameDSL.g:7472:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalGameDSL.g:7473:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7473:6: (lv_switch_9_0= ruleXExpression )
                    // InternalGameDSL.g:7474:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,14,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGameDSL.g:7497:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==RULE_ID||LA115_0==91||LA115_0==100||LA115_0==142||LA115_0==160||LA115_0==162) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalGameDSL.g:7498:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalGameDSL.g:7498:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalGameDSL.g:7499:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            // InternalGameDSL.g:7516:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==161) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalGameDSL.g:7517:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,161,FOLLOW_155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,160,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalGameDSL.g:7525:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalGameDSL.g:7526:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7526:5: (lv_default_14_0= ruleXExpression )
                    // InternalGameDSL.g:7527:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalGameDSL.g:7553:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalGameDSL.g:7553:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalGameDSL.g:7554:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalGameDSL.g:7560:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7566:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalGameDSL.g:7567:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalGameDSL.g:7567:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalGameDSL.g:7568:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalGameDSL.g:7568:3: ()
            // InternalGameDSL.g:7569:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:7575:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_ID||LA117_0==100||LA117_0==142) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalGameDSL.g:7576:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalGameDSL.g:7576:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalGameDSL.g:7577:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_157);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:7594:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==162) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalGameDSL.g:7595:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,162,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalGameDSL.g:7599:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalGameDSL.g:7600:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7600:5: (lv_case_3_0= ruleXExpression )
                    // InternalGameDSL.g:7601:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:7619:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==160) ) {
                alt119=1;
            }
            else if ( (LA119_0==91) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalGameDSL.g:7620:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalGameDSL.g:7620:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalGameDSL.g:7621:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,160,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalGameDSL.g:7625:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalGameDSL.g:7626:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7626:6: (lv_then_5_0= ruleXExpression )
                    // InternalGameDSL.g:7627:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:7646:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalGameDSL.g:7646:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalGameDSL.g:7647:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalGameDSL.g:7647:5: (lv_fallThrough_6_0= ',' )
                    // InternalGameDSL.g:7648:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", true, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalGameDSL.g:7665:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalGameDSL.g:7665:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalGameDSL.g:7666:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalGameDSL.g:7672:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7678:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:7679:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:7679:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalGameDSL.g:7680:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:7680:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalGameDSL.g:7681:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalGameDSL.g:7694:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalGameDSL.g:7695:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalGameDSL.g:7695:5: ()
            // InternalGameDSL.g:7696:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,163,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,100,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalGameDSL.g:7710:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalGameDSL.g:7711:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalGameDSL.g:7711:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalGameDSL.g:7712:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_155);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,160,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalGameDSL.g:7735:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalGameDSL.g:7736:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:7736:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalGameDSL.g:7737:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:7758:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalGameDSL.g:7759:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalGameDSL.g:7759:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalGameDSL.g:7760:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalGameDSL.g:7781:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalGameDSL.g:7781:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalGameDSL.g:7782:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalGameDSL.g:7788:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7794:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:7795:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:7795:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalGameDSL.g:7796:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:7796:3: ()
            // InternalGameDSL.g:7797:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,163,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,100,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:7811:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( ((LA121_0>=RULE_INT && LA121_0<=RULE_DECIMAL)||LA121_0==14||LA121_0==75||LA121_0==87||LA121_0==100||LA121_0==117||(LA121_0>=121 && LA121_0<=122)||LA121_0==129||LA121_0==145||LA121_0==150||LA121_0==159||(LA121_0>=163 && LA121_0<=179)||LA121_0==181) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalGameDSL.g:7812:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalGameDSL.g:7812:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalGameDSL.g:7813:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalGameDSL.g:7813:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalGameDSL.g:7814:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_160);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:7831:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==91) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalGameDSL.g:7832:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,91,FOLLOW_161); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:7836:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalGameDSL.g:7837:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalGameDSL.g:7837:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalGameDSL.g:7838:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_160);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,157,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalGameDSL.g:7861:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_INT && LA122_0<=RULE_DECIMAL)||LA122_0==14||LA122_0==75||LA122_0==87||LA122_0==100||LA122_0==117||(LA122_0>=121 && LA122_0<=122)||LA122_0==129||LA122_0==145||LA122_0==150||LA122_0==159||(LA122_0>=163 && LA122_0<=164)||(LA122_0>=167 && LA122_0<=179)||LA122_0==181) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalGameDSL.g:7862:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7862:4: (lv_expression_7_0= ruleXExpression )
                    // InternalGameDSL.g:7863:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_163);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,157,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalGameDSL.g:7884:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=RULE_INT && LA124_0<=RULE_DECIMAL)||LA124_0==14||LA124_0==75||LA124_0==87||LA124_0==100||LA124_0==117||(LA124_0>=121 && LA124_0<=122)||LA124_0==129||LA124_0==145||LA124_0==150||LA124_0==159||(LA124_0>=163 && LA124_0<=164)||(LA124_0>=167 && LA124_0<=179)||LA124_0==181) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalGameDSL.g:7885:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalGameDSL.g:7885:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalGameDSL.g:7886:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:7886:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalGameDSL.g:7887:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:7904:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop123:
                    do {
                        int alt123=2;
                        int LA123_0 = input.LA(1);

                        if ( (LA123_0==91) ) {
                            alt123=1;
                        }


                        switch (alt123) {
                    	case 1 :
                    	    // InternalGameDSL.g:7905:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:7909:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalGameDSL.g:7910:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalGameDSL.g:7910:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalGameDSL.g:7911:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_96);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop123;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalGameDSL.g:7934:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalGameDSL.g:7935:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalGameDSL.g:7935:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalGameDSL.g:7936:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalGameDSL.g:7957:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalGameDSL.g:7957:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalGameDSL.g:7958:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalGameDSL.g:7964:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:7970:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:7971:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:7971:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalGameDSL.g:7972:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:7972:3: ()
            // InternalGameDSL.g:7973:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,164,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:7987:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalGameDSL.g:7988:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalGameDSL.g:7988:4: (lv_predicate_3_0= ruleXExpression )
            // InternalGameDSL.g:7989:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalGameDSL.g:8010:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalGameDSL.g:8011:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:8011:4: (lv_body_5_0= ruleXExpression )
            // InternalGameDSL.g:8012:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalGameDSL.g:8033:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalGameDSL.g:8033:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalGameDSL.g:8034:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalGameDSL.g:8040:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8046:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalGameDSL.g:8047:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalGameDSL.g:8047:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalGameDSL.g:8048:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalGameDSL.g:8048:3: ()
            // InternalGameDSL.g:8049:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalGameDSL.g:8059:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalGameDSL.g:8060:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalGameDSL.g:8060:4: (lv_body_2_0= ruleXExpression )
            // InternalGameDSL.g:8061:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_164);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,164,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalGameDSL.g:8086:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalGameDSL.g:8087:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:8087:4: (lv_predicate_5_0= ruleXExpression )
            // InternalGameDSL.g:8088:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalGameDSL.g:8113:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalGameDSL.g:8113:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalGameDSL.g:8114:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalGameDSL.g:8120:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8126:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalGameDSL.g:8127:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalGameDSL.g:8127:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalGameDSL.g:8128:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalGameDSL.g:8128:3: ()
            // InternalGameDSL.g:8129:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,14,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGameDSL.g:8139:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( ((LA126_0>=RULE_INT && LA126_0<=RULE_DECIMAL)||LA126_0==14||LA126_0==75||LA126_0==87||LA126_0==100||LA126_0==117||(LA126_0>=121 && LA126_0<=122)||LA126_0==129||LA126_0==145||LA126_0==150||LA126_0==159||(LA126_0>=163 && LA126_0<=179)||LA126_0==181) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalGameDSL.g:8140:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalGameDSL.g:8140:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalGameDSL.g:8141:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalGameDSL.g:8141:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalGameDSL.g:8142:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_166);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGameDSL.g:8159:4: (otherlv_3= ';' )?
            	    int alt125=2;
            	    int LA125_0 = input.LA(1);

            	    if ( (LA125_0==157) ) {
            	        alt125=1;
            	    }
            	    switch (alt125) {
            	        case 1 :
            	            // InternalGameDSL.g:8160:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,157,FOLLOW_165); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            otherlv_4=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalGameDSL.g:8174:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalGameDSL.g:8174:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalGameDSL.g:8175:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalGameDSL.g:8181:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8187:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalGameDSL.g:8188:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalGameDSL.g:8188:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=165 && LA127_0<=166)) ) {
                alt127=1;
            }
            else if ( ((LA127_0>=RULE_INT && LA127_0<=RULE_DECIMAL)||LA127_0==14||LA127_0==75||LA127_0==87||LA127_0==100||LA127_0==117||(LA127_0>=121 && LA127_0<=122)||LA127_0==129||LA127_0==145||LA127_0==150||LA127_0==159||(LA127_0>=163 && LA127_0<=164)||(LA127_0>=167 && LA127_0<=179)||LA127_0==181) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalGameDSL.g:8189:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:8198:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalGameDSL.g:8210:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalGameDSL.g:8210:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalGameDSL.g:8211:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalGameDSL.g:8217:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8223:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalGameDSL.g:8224:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalGameDSL.g:8224:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalGameDSL.g:8225:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalGameDSL.g:8225:3: ()
            // InternalGameDSL.g:8226:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:8232:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==165) ) {
                alt128=1;
            }
            else if ( (LA128_0==166) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalGameDSL.g:8233:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalGameDSL.g:8233:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalGameDSL.g:8234:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalGameDSL.g:8234:5: (lv_writeable_1_0= 'var' )
                    // InternalGameDSL.g:8235:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,165,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", true, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:8248:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,166,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:8253:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==RULE_ID) ) {
                int LA129_1 = input.LA(2);

                if ( (synpred35_InternalGameDSL()) ) {
                    alt129=1;
                }
                else if ( (true) ) {
                    alt129=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 129, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA129_0==100) && (synpred35_InternalGameDSL())) {
                alt129=1;
            }
            else if ( (LA129_0==142) && (synpred35_InternalGameDSL())) {
                alt129=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalGameDSL.g:8254:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalGameDSL.g:8254:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalGameDSL.g:8255:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalGameDSL.g:8268:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalGameDSL.g:8269:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalGameDSL.g:8269:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalGameDSL.g:8270:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalGameDSL.g:8270:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalGameDSL.g:8271:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalGameDSL.g:8288:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalGameDSL.g:8289:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalGameDSL.g:8289:7: (lv_name_4_0= ruleValidID )
                    // InternalGameDSL.g:8290:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_167);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:8310:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalGameDSL.g:8310:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalGameDSL.g:8311:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalGameDSL.g:8311:5: (lv_name_5_0= ruleValidID )
                    // InternalGameDSL.g:8312:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_167);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:8330:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==120) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalGameDSL.g:8331:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,120,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalGameDSL.g:8335:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalGameDSL.g:8336:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:8336:5: (lv_right_7_0= ruleXExpression )
                    // InternalGameDSL.g:8337:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalGameDSL.g:8359:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalGameDSL.g:8359:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalGameDSL.g:8360:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalGameDSL.g:8366:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8372:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalGameDSL.g:8373:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalGameDSL.g:8373:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalGameDSL.g:8374:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalGameDSL.g:8374:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_ID) ) {
                int LA131_1 = input.LA(2);

                if ( (LA131_1==RULE_ID||LA131_1==118||LA131_1==122||LA131_1==129) ) {
                    alt131=1;
                }
            }
            else if ( (LA131_0==100||LA131_0==142) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalGameDSL.g:8375:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalGameDSL.g:8375:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalGameDSL.g:8376:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGameDSL.g:8393:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalGameDSL.g:8394:4: (lv_name_1_0= ruleValidID )
            {
            // InternalGameDSL.g:8394:4: (lv_name_1_0= ruleValidID )
            // InternalGameDSL.g:8395:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalGameDSL.g:8416:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalGameDSL.g:8416:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalGameDSL.g:8417:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalGameDSL.g:8423:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8429:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalGameDSL.g:8430:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalGameDSL.g:8430:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalGameDSL.g:8431:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalGameDSL.g:8431:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:8432:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:8432:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalGameDSL.g:8433:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:8450:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalGameDSL.g:8451:4: (lv_name_1_0= ruleValidID )
            {
            // InternalGameDSL.g:8451:4: (lv_name_1_0= ruleValidID )
            // InternalGameDSL.g:8452:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalGameDSL.g:8473:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalGameDSL.g:8473:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalGameDSL.g:8474:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalGameDSL.g:8480:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8486:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalGameDSL.g:8487:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalGameDSL.g:8487:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalGameDSL.g:8488:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalGameDSL.g:8488:3: ()
            // InternalGameDSL.g:8489:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:8495:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==129) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalGameDSL.g:8496:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,129,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalGameDSL.g:8500:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalGameDSL.g:8501:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalGameDSL.g:8501:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalGameDSL.g:8502:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_141);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:8519:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==91) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // InternalGameDSL.g:8520:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,91,FOLLOW_140); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:8524:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalGameDSL.g:8525:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalGameDSL.g:8525:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalGameDSL.g:8526:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_141);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,130,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:8549:3: ( ( ruleIdOrSuper ) )
            // InternalGameDSL.g:8550:4: ( ruleIdOrSuper )
            {
            // InternalGameDSL.g:8550:4: ( ruleIdOrSuper )
            // InternalGameDSL.g:8551:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_168);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:8565:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalGameDSL.g:8566:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalGameDSL.g:8566:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalGameDSL.g:8567:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalGameDSL.g:8571:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalGameDSL.g:8572:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,100,FOLLOW_143); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:8584:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt135=3;
                    alt135 = dfa135.predict(input);
                    switch (alt135) {
                        case 1 :
                            // InternalGameDSL.g:8585:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalGameDSL.g:8585:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalGameDSL.g:8586:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalGameDSL.g:8611:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalGameDSL.g:8612:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:8630:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalGameDSL.g:8630:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalGameDSL.g:8631:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalGameDSL.g:8631:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalGameDSL.g:8632:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalGameDSL.g:8632:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalGameDSL.g:8633:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_96);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGameDSL.g:8650:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop134:
                            do {
                                int alt134=2;
                                int LA134_0 = input.LA(1);

                                if ( (LA134_0==91) ) {
                                    alt134=1;
                                }


                                switch (alt134) {
                            	case 1 :
                            	    // InternalGameDSL.g:8651:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalGameDSL.g:8655:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalGameDSL.g:8656:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalGameDSL.g:8656:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalGameDSL.g:8657:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_96);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop134;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,92,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:8682:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalGameDSL.g:8683:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalGameDSL.g:8689:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalGameDSL.g:8690:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalGameDSL.g:8711:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalGameDSL.g:8711:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalGameDSL.g:8712:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalGameDSL.g:8718:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8724:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalGameDSL.g:8725:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalGameDSL.g:8725:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt138=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt138=1;
                }
                break;
            case 167:
                {
                alt138=2;
                }
                break;
            case 168:
                {
                alt138=3;
                }
                break;
            case 169:
                {
                alt138=4;
                }
                break;
            case 170:
                {
                alt138=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // InternalGameDSL.g:8726:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:8737:3: kw= 'extends'
                    {
                    kw=(Token)match(input,167,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:8743:3: kw= 'static'
                    {
                    kw=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:8749:3: kw= 'import'
                    {
                    kw=(Token)match(input,169,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGameDSL.g:8755:3: kw= 'extension'
                    {
                    kw=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalGameDSL.g:8764:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalGameDSL.g:8764:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalGameDSL.g:8765:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalGameDSL.g:8771:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8777:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalGameDSL.g:8778:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalGameDSL.g:8778:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==RULE_ID||(LA139_0>=167 && LA139_0<=170)) ) {
                alt139=1;
            }
            else if ( (LA139_0==171) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalGameDSL.g:8779:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:8790:3: kw= 'super'
                    {
                    kw=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalGameDSL.g:8799:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalGameDSL.g:8799:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalGameDSL.g:8800:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalGameDSL.g:8806:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:8812:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalGameDSL.g:8813:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalGameDSL.g:8813:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalGameDSL.g:8814:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalGameDSL.g:8814:3: ()
            // InternalGameDSL.g:8815:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,172,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalGameDSL.g:8825:3: ( ( ruleQualifiedName ) )
            // InternalGameDSL.g:8826:4: ( ruleQualifiedName )
            {
            // InternalGameDSL.g:8826:4: ( ruleQualifiedName )
            // InternalGameDSL.g:8827:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_170);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:8841:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalGameDSL.g:8842:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalGameDSL.g:8842:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalGameDSL.g:8843:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,129,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalGameDSL.g:8849:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalGameDSL.g:8850:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalGameDSL.g:8850:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalGameDSL.g:8851:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_141);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:8868:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==91) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // InternalGameDSL.g:8869:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,91,FOLLOW_140); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:8873:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalGameDSL.g:8874:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalGameDSL.g:8874:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalGameDSL.g:8875:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_141);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,130,FOLLOW_168); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:8898:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt144=2;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    // InternalGameDSL.g:8899:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalGameDSL.g:8899:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalGameDSL.g:8900:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalGameDSL.g:8904:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalGameDSL.g:8905:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,100,FOLLOW_143); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:8917:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt143=3;
                    alt143 = dfa143.predict(input);
                    switch (alt143) {
                        case 1 :
                            // InternalGameDSL.g:8918:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalGameDSL.g:8918:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalGameDSL.g:8919:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalGameDSL.g:8944:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalGameDSL.g:8945:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:8963:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalGameDSL.g:8963:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalGameDSL.g:8964:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalGameDSL.g:8964:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalGameDSL.g:8965:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalGameDSL.g:8965:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalGameDSL.g:8966:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_96);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGameDSL.g:8983:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop142:
                            do {
                                int alt142=2;
                                int LA142_0 = input.LA(1);

                                if ( (LA142_0==91) ) {
                                    alt142=1;
                                }


                                switch (alt142) {
                            	case 1 :
                            	    // InternalGameDSL.g:8984:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,91,FOLLOW_116); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalGameDSL.g:8988:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalGameDSL.g:8989:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalGameDSL.g:8989:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalGameDSL.g:8990:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_96);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop142;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,92,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalGameDSL.g:9015:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // InternalGameDSL.g:9016:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalGameDSL.g:9022:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalGameDSL.g:9023:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalGameDSL.g:9044:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalGameDSL.g:9044:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalGameDSL.g:9045:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalGameDSL.g:9051:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalGameDSL.g:9057:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalGameDSL.g:9058:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalGameDSL.g:9058:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalGameDSL.g:9059:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalGameDSL.g:9059:3: ()
            // InternalGameDSL.g:9060:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:9066:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==173) ) {
                alt146=1;
            }
            else if ( (LA146_0==174) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalGameDSL.g:9067:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:9072:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalGameDSL.g:9072:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalGameDSL.g:9073:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalGameDSL.g:9073:5: (lv_isTrue_2_0= 'true' )
                    // InternalGameDSL.g:9074:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalGameDSL.g:9091:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalGameDSL.g:9091:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalGameDSL.g:9092:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalGameDSL.g:9098:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalGameDSL.g:9104:2: ( ( () otherlv_1= 'null' ) )
            // InternalGameDSL.g:9105:2: ( () otherlv_1= 'null' )
            {
            // InternalGameDSL.g:9105:2: ( () otherlv_1= 'null' )
            // InternalGameDSL.g:9106:3: () otherlv_1= 'null'
            {
            // InternalGameDSL.g:9106:3: ()
            // InternalGameDSL.g:9107:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalGameDSL.g:9121:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalGameDSL.g:9121:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalGameDSL.g:9122:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalGameDSL.g:9128:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9134:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalGameDSL.g:9135:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalGameDSL.g:9135:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalGameDSL.g:9136:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalGameDSL.g:9136:3: ()
            // InternalGameDSL.g:9137:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:9143:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalGameDSL.g:9144:4: (lv_value_1_0= ruleNumber )
            {
            // InternalGameDSL.g:9144:4: (lv_value_1_0= ruleNumber )
            // InternalGameDSL.g:9145:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalGameDSL.g:9166:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalGameDSL.g:9166:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalGameDSL.g:9167:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalGameDSL.g:9173:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalGameDSL.g:9179:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalGameDSL.g:9180:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalGameDSL.g:9180:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalGameDSL.g:9181:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalGameDSL.g:9181:3: ()
            // InternalGameDSL.g:9182:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalGameDSL.g:9188:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalGameDSL.g:9189:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalGameDSL.g:9189:4: (lv_value_1_0= RULE_STRING )
            // InternalGameDSL.g:9190:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalGameDSL.g:9210:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalGameDSL.g:9210:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalGameDSL.g:9211:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalGameDSL.g:9217:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9223:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalGameDSL.g:9224:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalGameDSL.g:9224:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalGameDSL.g:9225:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalGameDSL.g:9225:3: ()
            // InternalGameDSL.g:9226:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,176,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,100,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:9240:3: ( ( ruleQualifiedName ) )
            // InternalGameDSL.g:9241:4: ( ruleQualifiedName )
            {
            // InternalGameDSL.g:9241:4: ( ruleQualifiedName )
            // InternalGameDSL.g:9242:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_171);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:9256:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==122) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalGameDSL.g:9257:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalGameDSL.g:9257:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalGameDSL.g:9258:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_171);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            otherlv_5=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalGameDSL.g:9283:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalGameDSL.g:9283:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalGameDSL.g:9284:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalGameDSL.g:9290:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9296:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:9297:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:9297:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalGameDSL.g:9298:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:9298:3: ()
            // InternalGameDSL.g:9299:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,177,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalGameDSL.g:9309:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalGameDSL.g:9310:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalGameDSL.g:9310:4: (lv_expression_2_0= ruleXExpression )
            // InternalGameDSL.g:9311:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalGameDSL.g:9332:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalGameDSL.g:9332:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalGameDSL.g:9333:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalGameDSL.g:9339:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9345:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalGameDSL.g:9346:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalGameDSL.g:9346:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalGameDSL.g:9347:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalGameDSL.g:9347:3: ()
            // InternalGameDSL.g:9348:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,178,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalGameDSL.g:9358:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt148=2;
            alt148 = dfa148.predict(input);
            switch (alt148) {
                case 1 :
                    // InternalGameDSL.g:9359:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:9360:4: (lv_expression_2_0= ruleXExpression )
                    // InternalGameDSL.g:9361:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalGameDSL.g:9382:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalGameDSL.g:9382:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalGameDSL.g:9383:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalGameDSL.g:9389:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9395:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalGameDSL.g:9396:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalGameDSL.g:9396:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalGameDSL.g:9397:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalGameDSL.g:9397:3: ()
            // InternalGameDSL.g:9398:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,179,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalGameDSL.g:9408:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalGameDSL.g:9409:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalGameDSL.g:9409:4: (lv_expression_2_0= ruleXExpression )
            // InternalGameDSL.g:9410:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_173);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:9427:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==182) ) {
                alt151=1;
            }
            else if ( (LA151_0==180) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalGameDSL.g:9428:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalGameDSL.g:9428:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalGameDSL.g:9429:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalGameDSL.g:9429:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt149=0;
                    loop149:
                    do {
                        int alt149=2;
                        int LA149_0 = input.LA(1);

                        if ( (LA149_0==182) ) {
                            int LA149_2 = input.LA(2);

                            if ( (synpred44_InternalGameDSL()) ) {
                                alt149=1;
                            }


                        }


                        switch (alt149) {
                    	case 1 :
                    	    // InternalGameDSL.g:9430:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalGameDSL.g:9431:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalGameDSL.g:9432:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_174);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt149 >= 1 ) break loop149;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(149, input);
                                throw eee;
                        }
                        cnt149++;
                    } while (true);

                    // InternalGameDSL.g:9449:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==180) ) {
                        int LA150_1 = input.LA(2);

                        if ( (synpred45_InternalGameDSL()) ) {
                            alt150=1;
                        }
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalGameDSL.g:9450:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalGameDSL.g:9450:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalGameDSL.g:9451:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,180,FOLLOW_116); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalGameDSL.g:9457:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalGameDSL.g:9458:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalGameDSL.g:9458:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalGameDSL.g:9459:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:9479:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalGameDSL.g:9479:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalGameDSL.g:9480:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,180,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalGameDSL.g:9484:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalGameDSL.g:9485:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalGameDSL.g:9485:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalGameDSL.g:9486:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalGameDSL.g:9509:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalGameDSL.g:9509:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalGameDSL.g:9510:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalGameDSL.g:9516:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9522:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:9523:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:9523:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalGameDSL.g:9524:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:9524:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalGameDSL.g:9525:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalGameDSL.g:9532:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalGameDSL.g:9533:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalGameDSL.g:9533:5: ()
            // InternalGameDSL.g:9534:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,181,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,100,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalGameDSL.g:9550:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalGameDSL.g:9551:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalGameDSL.g:9551:4: (lv_param_3_0= ruleXExpression )
            // InternalGameDSL.g:9552:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalGameDSL.g:9573:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalGameDSL.g:9574:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalGameDSL.g:9574:4: (lv_expression_5_0= ruleXExpression )
            // InternalGameDSL.g:9575:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalGameDSL.g:9596:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalGameDSL.g:9596:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalGameDSL.g:9597:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalGameDSL.g:9603:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9609:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalGameDSL.g:9610:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalGameDSL.g:9610:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalGameDSL.g:9611:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalGameDSL.g:9611:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalGameDSL.g:9612:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,182,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGameDSL.g:9622:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalGameDSL.g:9623:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalGameDSL.g:9623:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalGameDSL.g:9624:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,92,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalGameDSL.g:9645:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalGameDSL.g:9646:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalGameDSL.g:9646:4: (lv_expression_4_0= ruleXExpression )
            // InternalGameDSL.g:9647:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalGameDSL.g:9668:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalGameDSL.g:9668:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalGameDSL.g:9669:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalGameDSL.g:9675:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9681:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalGameDSL.g:9682:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalGameDSL.g:9682:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalGameDSL.g:9683:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_175);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGameDSL.g:9693:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==118) ) {
                    int LA152_2 = input.LA(2);

                    if ( (LA152_2==RULE_ID) ) {
                        int LA152_3 = input.LA(3);

                        if ( (synpred48_InternalGameDSL()) ) {
                            alt152=1;
                        }


                    }


                }


                switch (alt152) {
            	case 1 :
            	    // InternalGameDSL.g:9694:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalGameDSL.g:9694:4: ( ( '.' )=>kw= '.' )
            	    // InternalGameDSL.g:9695:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,118,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_175);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalGameDSL.g:9717:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalGameDSL.g:9719:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalGameDSL.g:9720:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalGameDSL.g:9729:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalGameDSL.g:9736:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalGameDSL.g:9737:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalGameDSL.g:9737:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_HEX) ) {
                alt156=1;
            }
            else if ( (LA156_0==RULE_INT||LA156_0==RULE_DECIMAL) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalGameDSL.g:9738:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:9746:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalGameDSL.g:9746:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalGameDSL.g:9747:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalGameDSL.g:9747:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==RULE_INT) ) {
                        alt153=1;
                    }
                    else if ( (LA153_0==RULE_DECIMAL) ) {
                        alt153=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 153, 0, input);

                        throw nvae;
                    }
                    switch (alt153) {
                        case 1 :
                            // InternalGameDSL.g:9748:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_175); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:9756:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_175); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGameDSL.g:9764:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==118) ) {
                        int LA155_1 = input.LA(2);

                        if ( (LA155_1==RULE_INT||LA155_1==RULE_DECIMAL) ) {
                            alt155=1;
                        }
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalGameDSL.g:9765:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,118,FOLLOW_176); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalGameDSL.g:9770:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt154=2;
                            int LA154_0 = input.LA(1);

                            if ( (LA154_0==RULE_INT) ) {
                                alt154=1;
                            }
                            else if ( (LA154_0==RULE_DECIMAL) ) {
                                alt154=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 154, 0, input);

                                throw nvae;
                            }
                            switch (alt154) {
                                case 1 :
                                    // InternalGameDSL.g:9771:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalGameDSL.g:9779:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalGameDSL.g:9796:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalGameDSL.g:9796:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalGameDSL.g:9797:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalGameDSL.g:9803:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9809:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalGameDSL.g:9810:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalGameDSL.g:9810:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==RULE_ID) ) {
                alt158=1;
            }
            else if ( (LA158_0==100||LA158_0==142) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // InternalGameDSL.g:9811:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalGameDSL.g:9811:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalGameDSL.g:9812:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_169);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGameDSL.g:9820:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop157:
                    do {
                        int alt157=2;
                        int LA157_0 = input.LA(1);

                        if ( (LA157_0==122) ) {
                            int LA157_2 = input.LA(2);

                            if ( (LA157_2==123) ) {
                                int LA157_3 = input.LA(3);

                                if ( (synpred49_InternalGameDSL()) ) {
                                    alt157=1;
                                }


                            }


                        }


                        switch (alt157) {
                    	case 1 :
                    	    // InternalGameDSL.g:9821:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalGameDSL.g:9827:5: ( () ruleArrayBrackets )
                    	    // InternalGameDSL.g:9828:6: () ruleArrayBrackets
                    	    {
                    	    // InternalGameDSL.g:9828:6: ()
                    	    // InternalGameDSL.g:9829:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_169);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop157;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:9846:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalGameDSL.g:9858:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalGameDSL.g:9858:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalGameDSL.g:9859:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalGameDSL.g:9865:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGameDSL.g:9871:2: ( (kw= '[' kw= ']' ) )
            // InternalGameDSL.g:9872:2: (kw= '[' kw= ']' )
            {
            // InternalGameDSL.g:9872:2: (kw= '[' kw= ']' )
            // InternalGameDSL.g:9873:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,122,FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalGameDSL.g:9887:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalGameDSL.g:9887:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalGameDSL.g:9888:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalGameDSL.g:9894:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9900:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalGameDSL.g:9901:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalGameDSL.g:9901:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalGameDSL.g:9902:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalGameDSL.g:9902:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==100) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalGameDSL.g:9903:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,100,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalGameDSL.g:9907:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==RULE_ID||LA160_0==100||LA160_0==142) ) {
                        alt160=1;
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalGameDSL.g:9908:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalGameDSL.g:9908:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalGameDSL.g:9909:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalGameDSL.g:9909:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalGameDSL.g:9910:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_96);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalGameDSL.g:9927:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop159:
                            do {
                                int alt159=2;
                                int LA159_0 = input.LA(1);

                                if ( (LA159_0==91) ) {
                                    alt159=1;
                                }


                                switch (alt159) {
                            	case 1 :
                            	    // InternalGameDSL.g:9928:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,91,FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalGameDSL.g:9932:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalGameDSL.g:9933:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalGameDSL.g:9933:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalGameDSL.g:9934:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_96);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop159;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,92,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,142,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalGameDSL.g:9962:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:9963:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:9963:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalGameDSL.g:9964:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalGameDSL.g:9985:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalGameDSL.g:9985:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalGameDSL.g:9986:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalGameDSL.g:9992:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:9998:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalGameDSL.g:9999:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalGameDSL.g:9999:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalGameDSL.g:10000:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalGameDSL.g:10000:3: ( ( ruleQualifiedName ) )
            // InternalGameDSL.g:10001:4: ( ruleQualifiedName )
            {
            // InternalGameDSL.g:10001:4: ( ruleQualifiedName )
            // InternalGameDSL.g:10002:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_178);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGameDSL.g:10016:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalGameDSL.g:10017:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalGameDSL.g:10017:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalGameDSL.g:10018:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,129,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalGameDSL.g:10024:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalGameDSL.g:10025:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalGameDSL.g:10025:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalGameDSL.g:10026:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_141);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGameDSL.g:10043:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==91) ) {
                            alt162=1;
                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalGameDSL.g:10044:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,91,FOLLOW_140); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalGameDSL.g:10048:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalGameDSL.g:10049:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalGameDSL.g:10049:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalGameDSL.g:10050:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_141);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,130,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalGameDSL.g:10072:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==118) ) {
                            int LA165_2 = input.LA(2);

                            if ( (LA165_2==RULE_ID) ) {
                                int LA165_3 = input.LA(3);

                                if ( (synpred51_InternalGameDSL()) ) {
                                    alt165=1;
                                }


                            }


                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalGameDSL.g:10073:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalGameDSL.g:10073:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalGameDSL.g:10074:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalGameDSL.g:10080:6: ( () otherlv_7= '.' )
                    	    // InternalGameDSL.g:10081:7: () otherlv_7= '.'
                    	    {
                    	    // InternalGameDSL.g:10081:7: ()
                    	    // InternalGameDSL.g:10082:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,118,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalGameDSL.g:10094:5: ( ( ruleValidID ) )
                    	    // InternalGameDSL.g:10095:6: ( ruleValidID )
                    	    {
                    	    // InternalGameDSL.g:10095:6: ( ruleValidID )
                    	    // InternalGameDSL.g:10096:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_179);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalGameDSL.g:10110:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt164=2;
                    	    alt164 = dfa164.predict(input);
                    	    switch (alt164) {
                    	        case 1 :
                    	            // InternalGameDSL.g:10111:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalGameDSL.g:10111:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalGameDSL.g:10112:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,129,FOLLOW_140); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalGameDSL.g:10118:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalGameDSL.g:10119:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalGameDSL.g:10119:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalGameDSL.g:10120:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_141);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalGameDSL.g:10137:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop163:
                    	            do {
                    	                int alt163=2;
                    	                int LA163_0 = input.LA(1);

                    	                if ( (LA163_0==91) ) {
                    	                    alt163=1;
                    	                }


                    	                switch (alt163) {
                    	            	case 1 :
                    	            	    // InternalGameDSL.g:10138:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,91,FOLLOW_140); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalGameDSL.g:10142:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalGameDSL.g:10143:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalGameDSL.g:10143:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalGameDSL.g:10144:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_141);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop163;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,130,FOLLOW_175); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalGameDSL.g:10173:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalGameDSL.g:10173:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalGameDSL.g:10174:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalGameDSL.g:10180:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10186:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalGameDSL.g:10187:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalGameDSL.g:10187:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==RULE_ID||LA167_0==100||LA167_0==142) ) {
                alt167=1;
            }
            else if ( (LA167_0==183) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // InternalGameDSL.g:10188:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10197:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalGameDSL.g:10209:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalGameDSL.g:10209:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalGameDSL.g:10210:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalGameDSL.g:10216:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10222:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalGameDSL.g:10223:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalGameDSL.g:10223:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalGameDSL.g:10224:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalGameDSL.g:10224:3: ()
            // InternalGameDSL.g:10225:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,183,FOLLOW_180); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalGameDSL.g:10235:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt170=3;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==167) ) {
                alt170=1;
            }
            else if ( (LA170_0==171) ) {
                alt170=2;
            }
            switch (alt170) {
                case 1 :
                    // InternalGameDSL.g:10236:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalGameDSL.g:10236:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalGameDSL.g:10237:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalGameDSL.g:10237:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalGameDSL.g:10238:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalGameDSL.g:10238:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalGameDSL.g:10239:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_181);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:10256:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==184) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalGameDSL.g:10257:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalGameDSL.g:10257:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalGameDSL.g:10258:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_181);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop168;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10277:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalGameDSL.g:10277:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalGameDSL.g:10278:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalGameDSL.g:10278:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalGameDSL.g:10279:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalGameDSL.g:10279:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalGameDSL.g:10280:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_181);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:10297:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==184) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalGameDSL.g:10298:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalGameDSL.g:10298:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalGameDSL.g:10299:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_181);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalGameDSL.g:10322:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalGameDSL.g:10322:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalGameDSL.g:10323:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalGameDSL.g:10329:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10335:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalGameDSL.g:10336:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalGameDSL.g:10336:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalGameDSL.g:10337:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,167,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalGameDSL.g:10341:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:10342:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:10342:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalGameDSL.g:10343:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalGameDSL.g:10364:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalGameDSL.g:10364:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalGameDSL.g:10365:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalGameDSL.g:10371:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10377:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalGameDSL.g:10378:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalGameDSL.g:10378:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalGameDSL.g:10379:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,184,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalGameDSL.g:10383:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:10384:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:10384:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalGameDSL.g:10385:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalGameDSL.g:10406:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalGameDSL.g:10406:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalGameDSL.g:10407:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalGameDSL.g:10413:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10419:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalGameDSL.g:10420:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalGameDSL.g:10420:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalGameDSL.g:10421:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,171,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalGameDSL.g:10425:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:10426:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:10426:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalGameDSL.g:10427:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalGameDSL.g:10448:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalGameDSL.g:10448:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalGameDSL.g:10449:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalGameDSL.g:10455:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10461:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalGameDSL.g:10462:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalGameDSL.g:10462:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalGameDSL.g:10463:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,184,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalGameDSL.g:10467:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalGameDSL.g:10468:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalGameDSL.g:10468:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalGameDSL.g:10469:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalGameDSL.g:10490:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalGameDSL.g:10490:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalGameDSL.g:10491:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalGameDSL.g:10497:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10503:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalGameDSL.g:10504:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalGameDSL.g:10504:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalGameDSL.g:10505:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,118,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalGameDSL.g:10529:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalGameDSL.g:10529:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalGameDSL.g:10530:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalGameDSL.g:10536:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10542:2: (this_ID_0= RULE_ID )
            // InternalGameDSL.g:10543:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalGameDSL.g:10553:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalGameDSL.g:10553:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalGameDSL.g:10554:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalGameDSL.g:10560:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10566:2: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalGameDSL.g:10567:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalGameDSL.g:10567:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt171=0;
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==169) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalGameDSL.g:10568:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalGameDSL.g:10568:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalGameDSL.g:10569:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_183);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt171 >= 1 ) break loop171;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(171, input);
                        throw eee;
                }
                cnt171++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalGameDSL.g:10589:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalGameDSL.g:10589:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalGameDSL.g:10590:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalGameDSL.g:10596:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10602:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalGameDSL.g:10603:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalGameDSL.g:10603:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalGameDSL.g:10604:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,169,FOLLOW_184); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalGameDSL.g:10608:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt174=3;
            alt174 = dfa174.predict(input);
            switch (alt174) {
                case 1 :
                    // InternalGameDSL.g:10609:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalGameDSL.g:10609:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalGameDSL.g:10610:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalGameDSL.g:10610:5: ( (lv_static_1_0= 'static' ) )
                    // InternalGameDSL.g:10611:6: (lv_static_1_0= 'static' )
                    {
                    // InternalGameDSL.g:10611:6: (lv_static_1_0= 'static' )
                    // InternalGameDSL.g:10612:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,168,FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:10624:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==170) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalGameDSL.g:10625:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalGameDSL.g:10625:6: (lv_extension_2_0= 'extension' )
                            // InternalGameDSL.g:10626:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,170,FOLLOW_185); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", true, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalGameDSL.g:10638:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalGameDSL.g:10639:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalGameDSL.g:10639:6: ( ruleQualifiedNameInStaticImport )
                    // InternalGameDSL.g:10640:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_186);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGameDSL.g:10654:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==146) ) {
                        alt173=1;
                    }
                    else if ( (LA173_0==RULE_ID) ) {
                        alt173=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 173, 0, input);

                        throw nvae;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalGameDSL.g:10655:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalGameDSL.g:10655:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalGameDSL.g:10656:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalGameDSL.g:10656:7: (lv_wildcard_4_0= '*' )
                            // InternalGameDSL.g:10657:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,146,FOLLOW_187); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGameDSL.g:10670:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalGameDSL.g:10670:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalGameDSL.g:10671:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalGameDSL.g:10671:7: (lv_memberName_5_0= ruleValidID )
                            // InternalGameDSL.g:10672:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_187);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10692:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalGameDSL.g:10692:4: ( ( ruleQualifiedName ) )
                    // InternalGameDSL.g:10693:5: ( ruleQualifiedName )
                    {
                    // InternalGameDSL.g:10693:5: ( ruleQualifiedName )
                    // InternalGameDSL.g:10694:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_187);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:10709:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalGameDSL.g:10709:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalGameDSL.g:10710:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalGameDSL.g:10710:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalGameDSL.g:10711:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_187);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGameDSL.g:10729:3: (otherlv_8= ';' )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==157) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalGameDSL.g:10730:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,157,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalGameDSL.g:10739:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalGameDSL.g:10739:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalGameDSL.g:10740:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalGameDSL.g:10746:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalGameDSL.g:10752:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalGameDSL.g:10753:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalGameDSL.g:10753:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt176=0;
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==RULE_ID) ) {
                    int LA176_2 = input.LA(2);

                    if ( (LA176_2==118) ) {
                        alt176=1;
                    }


                }


                switch (alt176) {
            	case 1 :
            	    // InternalGameDSL.g:10754:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_112);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,118,FOLLOW_188); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt176 >= 1 ) break loop176;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(176, input);
                        throw eee;
                }
                cnt176++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleGameLayerType"
    // InternalGameDSL.g:10773:1: ruleGameLayerType returns [Enumerator current=null] : ( (enumLiteral_0= 'tile' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'image' ) | (enumLiteral_3= 'group' ) ) ;
    public final Enumerator ruleGameLayerType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10779:2: ( ( (enumLiteral_0= 'tile' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'image' ) | (enumLiteral_3= 'group' ) ) )
            // InternalGameDSL.g:10780:2: ( (enumLiteral_0= 'tile' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'image' ) | (enumLiteral_3= 'group' ) )
            {
            // InternalGameDSL.g:10780:2: ( (enumLiteral_0= 'tile' ) | (enumLiteral_1= 'object' ) | (enumLiteral_2= 'image' ) | (enumLiteral_3= 'group' ) )
            int alt177=4;
            switch ( input.LA(1) ) {
            case 64:
                {
                alt177=1;
                }
                break;
            case 185:
                {
                alt177=2;
                }
                break;
            case 186:
                {
                alt177=3;
                }
                break;
            case 187:
                {
                alt177=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }

            switch (alt177) {
                case 1 :
                    // InternalGameDSL.g:10781:3: (enumLiteral_0= 'tile' )
                    {
                    // InternalGameDSL.g:10781:3: (enumLiteral_0= 'tile' )
                    // InternalGameDSL.g:10782:4: enumLiteral_0= 'tile'
                    {
                    enumLiteral_0=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameLayerTypeAccess().getTileEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameLayerTypeAccess().getTileEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10789:3: (enumLiteral_1= 'object' )
                    {
                    // InternalGameDSL.g:10789:3: (enumLiteral_1= 'object' )
                    // InternalGameDSL.g:10790:4: enumLiteral_1= 'object'
                    {
                    enumLiteral_1=(Token)match(input,185,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameLayerTypeAccess().getObjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameLayerTypeAccess().getObjectEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:10797:3: (enumLiteral_2= 'image' )
                    {
                    // InternalGameDSL.g:10797:3: (enumLiteral_2= 'image' )
                    // InternalGameDSL.g:10798:4: enumLiteral_2= 'image'
                    {
                    enumLiteral_2=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameLayerTypeAccess().getImageEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getGameLayerTypeAccess().getImageEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:10805:3: (enumLiteral_3= 'group' )
                    {
                    // InternalGameDSL.g:10805:3: (enumLiteral_3= 'group' )
                    // InternalGameDSL.g:10806:4: enumLiteral_3= 'group'
                    {
                    enumLiteral_3=(Token)match(input,187,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameLayerTypeAccess().getGroupEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getGameLayerTypeAccess().getGroupEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameLayerType"


    // $ANTLR start "ruleGameDisplayValueType"
    // InternalGameDSL.g:10816:1: ruleGameDisplayValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'number' ) | (enumLiteral_1= 'decimal' ) | (enumLiteral_2= 'text' ) ) ;
    public final Enumerator ruleGameDisplayValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10822:2: ( ( (enumLiteral_0= 'number' ) | (enumLiteral_1= 'decimal' ) | (enumLiteral_2= 'text' ) ) )
            // InternalGameDSL.g:10823:2: ( (enumLiteral_0= 'number' ) | (enumLiteral_1= 'decimal' ) | (enumLiteral_2= 'text' ) )
            {
            // InternalGameDSL.g:10823:2: ( (enumLiteral_0= 'number' ) | (enumLiteral_1= 'decimal' ) | (enumLiteral_2= 'text' ) )
            int alt178=3;
            switch ( input.LA(1) ) {
            case 188:
                {
                alt178=1;
                }
                break;
            case 189:
                {
                alt178=2;
                }
                break;
            case 190:
                {
                alt178=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }

            switch (alt178) {
                case 1 :
                    // InternalGameDSL.g:10824:3: (enumLiteral_0= 'number' )
                    {
                    // InternalGameDSL.g:10824:3: (enumLiteral_0= 'number' )
                    // InternalGameDSL.g:10825:4: enumLiteral_0= 'number'
                    {
                    enumLiteral_0=(Token)match(input,188,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameDisplayValueTypeAccess().getIntEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameDisplayValueTypeAccess().getIntEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10832:3: (enumLiteral_1= 'decimal' )
                    {
                    // InternalGameDSL.g:10832:3: (enumLiteral_1= 'decimal' )
                    // InternalGameDSL.g:10833:4: enumLiteral_1= 'decimal'
                    {
                    enumLiteral_1=(Token)match(input,189,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameDisplayValueTypeAccess().getFloatEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameDisplayValueTypeAccess().getFloatEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:10840:3: (enumLiteral_2= 'text' )
                    {
                    // InternalGameDSL.g:10840:3: (enumLiteral_2= 'text' )
                    // InternalGameDSL.g:10841:4: enumLiteral_2= 'text'
                    {
                    enumLiteral_2=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameDisplayValueTypeAccess().getStringEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getGameDisplayValueTypeAccess().getStringEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameDisplayValueType"


    // $ANTLR start "ruleGameScreenOrientation"
    // InternalGameDSL.g:10851:1: ruleGameScreenOrientation returns [Enumerator current=null] : ( (enumLiteral_0= 'landscape' ) | (enumLiteral_1= 'portrait' ) ) ;
    public final Enumerator ruleGameScreenOrientation() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10857:2: ( ( (enumLiteral_0= 'landscape' ) | (enumLiteral_1= 'portrait' ) ) )
            // InternalGameDSL.g:10858:2: ( (enumLiteral_0= 'landscape' ) | (enumLiteral_1= 'portrait' ) )
            {
            // InternalGameDSL.g:10858:2: ( (enumLiteral_0= 'landscape' ) | (enumLiteral_1= 'portrait' ) )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==191) ) {
                alt179=1;
            }
            else if ( (LA179_0==192) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalGameDSL.g:10859:3: (enumLiteral_0= 'landscape' )
                    {
                    // InternalGameDSL.g:10859:3: (enumLiteral_0= 'landscape' )
                    // InternalGameDSL.g:10860:4: enumLiteral_0= 'landscape'
                    {
                    enumLiteral_0=(Token)match(input,191,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameScreenOrientationAccess().getLandscapeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameScreenOrientationAccess().getLandscapeEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10867:3: (enumLiteral_1= 'portrait' )
                    {
                    // InternalGameDSL.g:10867:3: (enumLiteral_1= 'portrait' )
                    // InternalGameDSL.g:10868:4: enumLiteral_1= 'portrait'
                    {
                    enumLiteral_1=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameScreenOrientationAccess().getPortraitEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameScreenOrientationAccess().getPortraitEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameScreenOrientation"


    // $ANTLR start "ruleGameContactType"
    // InternalGameDSL.g:10878:1: ruleGameContactType returns [Enumerator current=null] : ( (enumLiteral_0= 'fixture' ) | (enumLiteral_1= 'sensor' ) ) ;
    public final Enumerator ruleGameContactType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10884:2: ( ( (enumLiteral_0= 'fixture' ) | (enumLiteral_1= 'sensor' ) ) )
            // InternalGameDSL.g:10885:2: ( (enumLiteral_0= 'fixture' ) | (enumLiteral_1= 'sensor' ) )
            {
            // InternalGameDSL.g:10885:2: ( (enumLiteral_0= 'fixture' ) | (enumLiteral_1= 'sensor' ) )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==193) ) {
                alt180=1;
            }
            else if ( (LA180_0==72) ) {
                alt180=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // InternalGameDSL.g:10886:3: (enumLiteral_0= 'fixture' )
                    {
                    // InternalGameDSL.g:10886:3: (enumLiteral_0= 'fixture' )
                    // InternalGameDSL.g:10887:4: enumLiteral_0= 'fixture'
                    {
                    enumLiteral_0=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameContactTypeAccess().getFixtureEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameContactTypeAccess().getFixtureEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10894:3: (enumLiteral_1= 'sensor' )
                    {
                    // InternalGameDSL.g:10894:3: (enumLiteral_1= 'sensor' )
                    // InternalGameDSL.g:10895:4: enumLiteral_1= 'sensor'
                    {
                    enumLiteral_1=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameContactTypeAccess().getSensorEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameContactTypeAccess().getSensorEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameContactType"


    // $ANTLR start "ruleGameKeyInputType"
    // InternalGameDSL.g:10905:1: ruleGameKeyInputType returns [Enumerator current=null] : ( (enumLiteral_0= 'justPressed' ) | (enumLiteral_1= 'pressed' ) ) ;
    public final Enumerator ruleGameKeyInputType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10911:2: ( ( (enumLiteral_0= 'justPressed' ) | (enumLiteral_1= 'pressed' ) ) )
            // InternalGameDSL.g:10912:2: ( (enumLiteral_0= 'justPressed' ) | (enumLiteral_1= 'pressed' ) )
            {
            // InternalGameDSL.g:10912:2: ( (enumLiteral_0= 'justPressed' ) | (enumLiteral_1= 'pressed' ) )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==194) ) {
                alt181=1;
            }
            else if ( (LA181_0==195) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;
            }
            switch (alt181) {
                case 1 :
                    // InternalGameDSL.g:10913:3: (enumLiteral_0= 'justPressed' )
                    {
                    // InternalGameDSL.g:10913:3: (enumLiteral_0= 'justPressed' )
                    // InternalGameDSL.g:10914:4: enumLiteral_0= 'justPressed'
                    {
                    enumLiteral_0=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputTypeAccess().getJustPressedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameKeyInputTypeAccess().getJustPressedEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10921:3: (enumLiteral_1= 'pressed' )
                    {
                    // InternalGameDSL.g:10921:3: (enumLiteral_1= 'pressed' )
                    // InternalGameDSL.g:10922:4: enumLiteral_1= 'pressed'
                    {
                    enumLiteral_1=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputTypeAccess().getPressedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameKeyInputTypeAccess().getPressedEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameKeyInputType"


    // $ANTLR start "ruleGameKeyInputKey"
    // InternalGameDSL.g:10932:1: ruleGameKeyInputKey returns [Enumerator current=null] : ( (enumLiteral_0= 'left' ) | (enumLiteral_1= 'right' ) | (enumLiteral_2= 'up' ) | (enumLiteral_3= 'space' ) ) ;
    public final Enumerator ruleGameKeyInputKey() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalGameDSL.g:10938:2: ( ( (enumLiteral_0= 'left' ) | (enumLiteral_1= 'right' ) | (enumLiteral_2= 'up' ) | (enumLiteral_3= 'space' ) ) )
            // InternalGameDSL.g:10939:2: ( (enumLiteral_0= 'left' ) | (enumLiteral_1= 'right' ) | (enumLiteral_2= 'up' ) | (enumLiteral_3= 'space' ) )
            {
            // InternalGameDSL.g:10939:2: ( (enumLiteral_0= 'left' ) | (enumLiteral_1= 'right' ) | (enumLiteral_2= 'up' ) | (enumLiteral_3= 'space' ) )
            int alt182=4;
            switch ( input.LA(1) ) {
            case 196:
                {
                alt182=1;
                }
                break;
            case 197:
                {
                alt182=2;
                }
                break;
            case 198:
                {
                alt182=3;
                }
                break;
            case 199:
                {
                alt182=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;
            }

            switch (alt182) {
                case 1 :
                    // InternalGameDSL.g:10940:3: (enumLiteral_0= 'left' )
                    {
                    // InternalGameDSL.g:10940:3: (enumLiteral_0= 'left' )
                    // InternalGameDSL.g:10941:4: enumLiteral_0= 'left'
                    {
                    enumLiteral_0=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputKeyAccess().getLeftEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGameKeyInputKeyAccess().getLeftEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGameDSL.g:10948:3: (enumLiteral_1= 'right' )
                    {
                    // InternalGameDSL.g:10948:3: (enumLiteral_1= 'right' )
                    // InternalGameDSL.g:10949:4: enumLiteral_1= 'right'
                    {
                    enumLiteral_1=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputKeyAccess().getRightEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGameKeyInputKeyAccess().getRightEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGameDSL.g:10956:3: (enumLiteral_2= 'up' )
                    {
                    // InternalGameDSL.g:10956:3: (enumLiteral_2= 'up' )
                    // InternalGameDSL.g:10957:4: enumLiteral_2= 'up'
                    {
                    enumLiteral_2=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputKeyAccess().getUpEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getGameKeyInputKeyAccess().getUpEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGameDSL.g:10964:3: (enumLiteral_3= 'space' )
                    {
                    // InternalGameDSL.g:10964:3: (enumLiteral_3= 'space' )
                    // InternalGameDSL.g:10965:4: enumLiteral_3= 'space'
                    {
                    enumLiteral_3=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGameKeyInputKeyAccess().getSpaceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getGameKeyInputKeyAccess().getSpaceEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGameKeyInputKey"

    // $ANTLR start synpred1_InternalGameDSL
    public final void synpred1_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:3999:5: ( '(' )
        // InternalGameDSL.g:3999:6: '('
        {
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalGameDSL

    // $ANTLR start synpred2_InternalGameDSL
    public final void synpred2_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4008:7: ( ( ( ( ruleValidID ) ) '=' ) )
        // InternalGameDSL.g:4008:8: ( ( ( ruleValidID ) ) '=' )
        {
        // InternalGameDSL.g:4008:8: ( ( ( ruleValidID ) ) '=' )
        // InternalGameDSL.g:4009:8: ( ( ruleValidID ) ) '='
        {
        // InternalGameDSL.g:4009:8: ( ( ruleValidID ) )
        // InternalGameDSL.g:4010:9: ( ruleValidID )
        {
        // InternalGameDSL.g:4010:9: ( ruleValidID )
        // InternalGameDSL.g:4011:10: ruleValidID
        {
        pushFollow(FOLLOW_115);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,120,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalGameDSL

    // $ANTLR start synpred5_InternalGameDSL
    public final void synpred5_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4188:5: ( ( () '#' '[' ) )
        // InternalGameDSL.g:4188:6: ( () '#' '[' )
        {
        // InternalGameDSL.g:4188:6: ( () '#' '[' )
        // InternalGameDSL.g:4189:6: () '#' '['
        {
        // InternalGameDSL.g:4189:6: ()
        // InternalGameDSL.g:4190:6: 
        {
        }

        match(input,121,FOLLOW_117); if (state.failed) return ;
        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalGameDSL

    // $ANTLR start synpred6_InternalGameDSL
    public final void synpred6_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4330:5: ( ( () '#' '[' ) )
        // InternalGameDSL.g:4330:6: ( () '#' '[' )
        {
        // InternalGameDSL.g:4330:6: ( () '#' '[' )
        // InternalGameDSL.g:4331:6: () '#' '['
        {
        // InternalGameDSL.g:4331:6: ()
        // InternalGameDSL.g:4332:6: 
        {
        }

        match(input,121,FOLLOW_117); if (state.failed) return ;
        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalGameDSL

    // $ANTLR start synpred7_InternalGameDSL
    public final void synpred7_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4558:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalGameDSL.g:4558:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalGameDSL.g:4558:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalGameDSL.g:4559:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalGameDSL.g:4559:7: ()
        // InternalGameDSL.g:4560:7: 
        {
        }

        // InternalGameDSL.g:4561:7: ( ( ruleOpMultiAssign ) )
        // InternalGameDSL.g:4562:8: ( ruleOpMultiAssign )
        {
        // InternalGameDSL.g:4562:8: ( ruleOpMultiAssign )
        // InternalGameDSL.g:4563:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalGameDSL

    // $ANTLR start synpred8_InternalGameDSL
    public final void synpred8_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4752:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalGameDSL.g:4752:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalGameDSL.g:4752:6: ( () ( ( ruleOpOr ) ) )
        // InternalGameDSL.g:4753:6: () ( ( ruleOpOr ) )
        {
        // InternalGameDSL.g:4753:6: ()
        // InternalGameDSL.g:4754:6: 
        {
        }

        // InternalGameDSL.g:4755:6: ( ( ruleOpOr ) )
        // InternalGameDSL.g:4756:7: ( ruleOpOr )
        {
        // InternalGameDSL.g:4756:7: ( ruleOpOr )
        // InternalGameDSL.g:4757:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalGameDSL

    // $ANTLR start synpred9_InternalGameDSL
    public final void synpred9_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4859:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalGameDSL.g:4859:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalGameDSL.g:4859:6: ( () ( ( ruleOpAnd ) ) )
        // InternalGameDSL.g:4860:6: () ( ( ruleOpAnd ) )
        {
        // InternalGameDSL.g:4860:6: ()
        // InternalGameDSL.g:4861:6: 
        {
        }

        // InternalGameDSL.g:4862:6: ( ( ruleOpAnd ) )
        // InternalGameDSL.g:4863:7: ( ruleOpAnd )
        {
        // InternalGameDSL.g:4863:7: ( ruleOpAnd )
        // InternalGameDSL.g:4864:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalGameDSL

    // $ANTLR start synpred10_InternalGameDSL
    public final void synpred10_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:4966:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalGameDSL.g:4966:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalGameDSL.g:4966:6: ( () ( ( ruleOpEquality ) ) )
        // InternalGameDSL.g:4967:6: () ( ( ruleOpEquality ) )
        {
        // InternalGameDSL.g:4967:6: ()
        // InternalGameDSL.g:4968:6: 
        {
        }

        // InternalGameDSL.g:4969:6: ( ( ruleOpEquality ) )
        // InternalGameDSL.g:4970:7: ( ruleOpEquality )
        {
        // InternalGameDSL.g:4970:7: ( ruleOpEquality )
        // InternalGameDSL.g:4971:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalGameDSL

    // $ANTLR start synpred11_InternalGameDSL
    public final void synpred11_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5094:6: ( ( () 'instanceof' ) )
        // InternalGameDSL.g:5094:7: ( () 'instanceof' )
        {
        // InternalGameDSL.g:5094:7: ( () 'instanceof' )
        // InternalGameDSL.g:5095:7: () 'instanceof'
        {
        // InternalGameDSL.g:5095:7: ()
        // InternalGameDSL.g:5096:7: 
        {
        }

        match(input,138,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalGameDSL

    // $ANTLR start synpred12_InternalGameDSL
    public final void synpred12_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5137:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalGameDSL.g:5137:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalGameDSL.g:5137:7: ( () ( ( ruleOpCompare ) ) )
        // InternalGameDSL.g:5138:7: () ( ( ruleOpCompare ) )
        {
        // InternalGameDSL.g:5138:7: ()
        // InternalGameDSL.g:5139:7: 
        {
        }

        // InternalGameDSL.g:5140:7: ( ( ruleOpCompare ) )
        // InternalGameDSL.g:5141:8: ( ruleOpCompare )
        {
        // InternalGameDSL.g:5141:8: ( ruleOpCompare )
        // InternalGameDSL.g:5142:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalGameDSL

    // $ANTLR start synpred13_InternalGameDSL
    public final void synpred13_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5272:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalGameDSL.g:5272:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalGameDSL.g:5272:6: ( () ( ( ruleOpOther ) ) )
        // InternalGameDSL.g:5273:6: () ( ( ruleOpOther ) )
        {
        // InternalGameDSL.g:5273:6: ()
        // InternalGameDSL.g:5274:6: 
        {
        }

        // InternalGameDSL.g:5275:6: ( ( ruleOpOther ) )
        // InternalGameDSL.g:5276:7: ( ruleOpOther )
        {
        // InternalGameDSL.g:5276:7: ( ruleOpOther )
        // InternalGameDSL.g:5277:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalGameDSL

    // $ANTLR start synpred14_InternalGameDSL
    public final void synpred14_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5392:6: ( ( '>' '>' ) )
        // InternalGameDSL.g:5392:7: ( '>' '>' )
        {
        // InternalGameDSL.g:5392:7: ( '>' '>' )
        // InternalGameDSL.g:5393:7: '>' '>'
        {
        match(input,130,FOLLOW_131); if (state.failed) return ;
        match(input,130,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalGameDSL

    // $ANTLR start synpred15_InternalGameDSL
    public final void synpred15_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5427:6: ( ( '<' '<' ) )
        // InternalGameDSL.g:5427:7: ( '<' '<' )
        {
        // InternalGameDSL.g:5427:7: ( '<' '<' )
        // InternalGameDSL.g:5428:7: '<' '<'
        {
        match(input,129,FOLLOW_122); if (state.failed) return ;
        match(input,129,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalGameDSL

    // $ANTLR start synpred16_InternalGameDSL
    public final void synpred16_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5500:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalGameDSL.g:5500:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalGameDSL.g:5500:6: ( () ( ( ruleOpAdd ) ) )
        // InternalGameDSL.g:5501:6: () ( ( ruleOpAdd ) )
        {
        // InternalGameDSL.g:5501:6: ()
        // InternalGameDSL.g:5502:6: 
        {
        }

        // InternalGameDSL.g:5503:6: ( ( ruleOpAdd ) )
        // InternalGameDSL.g:5504:7: ( ruleOpAdd )
        {
        // InternalGameDSL.g:5504:7: ( ruleOpAdd )
        // InternalGameDSL.g:5505:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred16_InternalGameDSL

    // $ANTLR start synpred17_InternalGameDSL
    public final void synpred17_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5615:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalGameDSL.g:5615:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalGameDSL.g:5615:6: ( () ( ( ruleOpMulti ) ) )
        // InternalGameDSL.g:5616:6: () ( ( ruleOpMulti ) )
        {
        // InternalGameDSL.g:5616:6: ()
        // InternalGameDSL.g:5617:6: 
        {
        }

        // InternalGameDSL.g:5618:6: ( ( ruleOpMulti ) )
        // InternalGameDSL.g:5619:7: ( ruleOpMulti )
        {
        // InternalGameDSL.g:5619:7: ( ruleOpMulti )
        // InternalGameDSL.g:5620:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalGameDSL

    // $ANTLR start synpred18_InternalGameDSL
    public final void synpred18_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5850:5: ( ( () 'as' ) )
        // InternalGameDSL.g:5850:6: ( () 'as' )
        {
        // InternalGameDSL.g:5850:6: ( () 'as' )
        // InternalGameDSL.g:5851:6: () 'as'
        {
        // InternalGameDSL.g:5851:6: ()
        // InternalGameDSL.g:5852:6: 
        {
        }

        match(input,151,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalGameDSL

    // $ANTLR start synpred19_InternalGameDSL
    public final void synpred19_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:5918:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalGameDSL.g:5918:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalGameDSL.g:5918:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalGameDSL.g:5919:5: () ( ( ruleOpPostfix ) )
        {
        // InternalGameDSL.g:5919:5: ()
        // InternalGameDSL.g:5920:5: 
        {
        }

        // InternalGameDSL.g:5921:5: ( ( ruleOpPostfix ) )
        // InternalGameDSL.g:5922:6: ( ruleOpPostfix )
        {
        // InternalGameDSL.g:5922:6: ( ruleOpPostfix )
        // InternalGameDSL.g:5923:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred19_InternalGameDSL

    // $ANTLR start synpred20_InternalGameDSL
    public final void synpred20_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6014:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalGameDSL.g:6014:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalGameDSL.g:6014:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalGameDSL.g:6015:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalGameDSL.g:6015:7: ()
        // InternalGameDSL.g:6016:7: 
        {
        }

        // InternalGameDSL.g:6017:7: ( '.' | ( ( '::' ) ) )
        int alt183=2;
        int LA183_0 = input.LA(1);

        if ( (LA183_0==118) ) {
            alt183=1;
        }
        else if ( (LA183_0==154) ) {
            alt183=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 183, 0, input);

            throw nvae;
        }
        switch (alt183) {
            case 1 :
                // InternalGameDSL.g:6018:8: '.'
                {
                match(input,118,FOLLOW_138); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalGameDSL.g:6020:8: ( ( '::' ) )
                {
                // InternalGameDSL.g:6020:8: ( ( '::' ) )
                // InternalGameDSL.g:6021:9: ( '::' )
                {
                // InternalGameDSL.g:6021:9: ( '::' )
                // InternalGameDSL.g:6022:10: '::'
                {
                match(input,154,FOLLOW_138); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalGameDSL.g:6026:7: ( ( ruleFeatureCallID ) )
        // InternalGameDSL.g:6027:8: ( ruleFeatureCallID )
        {
        // InternalGameDSL.g:6027:8: ( ruleFeatureCallID )
        // InternalGameDSL.g:6028:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_115);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalGameDSL

    // $ANTLR start synpred21_InternalGameDSL
    public final void synpred21_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6111:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalGameDSL.g:6111:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalGameDSL.g:6111:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalGameDSL.g:6112:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalGameDSL.g:6112:7: ()
        // InternalGameDSL.g:6113:7: 
        {
        }

        // InternalGameDSL.g:6114:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt184=3;
        switch ( input.LA(1) ) {
        case 118:
            {
            alt184=1;
            }
            break;
        case 155:
            {
            alt184=2;
            }
            break;
        case 154:
            {
            alt184=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 184, 0, input);

            throw nvae;
        }

        switch (alt184) {
            case 1 :
                // InternalGameDSL.g:6115:8: '.'
                {
                match(input,118,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalGameDSL.g:6117:8: ( ( '?.' ) )
                {
                // InternalGameDSL.g:6117:8: ( ( '?.' ) )
                // InternalGameDSL.g:6118:9: ( '?.' )
                {
                // InternalGameDSL.g:6118:9: ( '?.' )
                // InternalGameDSL.g:6119:10: '?.'
                {
                match(input,155,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalGameDSL.g:6123:8: ( ( '::' ) )
                {
                // InternalGameDSL.g:6123:8: ( ( '::' ) )
                // InternalGameDSL.g:6124:9: ( '::' )
                {
                // InternalGameDSL.g:6124:9: ( '::' )
                // InternalGameDSL.g:6125:10: '::'
                {
                match(input,154,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalGameDSL

    // $ANTLR start synpred22_InternalGameDSL
    public final void synpred22_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6249:7: ( ( '(' ) )
        // InternalGameDSL.g:6249:8: ( '(' )
        {
        // InternalGameDSL.g:6249:8: ( '(' )
        // InternalGameDSL.g:6250:8: '('
        {
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_InternalGameDSL

    // $ANTLR start synpred23_InternalGameDSL
    public final void synpred23_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6268:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalGameDSL.g:6268:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalGameDSL.g:6268:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalGameDSL.g:6269:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalGameDSL.g:6269:9: ()
        // InternalGameDSL.g:6270:9: 
        {
        }

        // InternalGameDSL.g:6271:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt186=2;
        int LA186_0 = input.LA(1);

        if ( (LA186_0==RULE_ID||LA186_0==100||LA186_0==142) ) {
            alt186=1;
        }
        switch (alt186) {
            case 1 :
                // InternalGameDSL.g:6272:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalGameDSL.g:6272:10: ( ( ruleJvmFormalParameter ) )
                // InternalGameDSL.g:6273:11: ( ruleJvmFormalParameter )
                {
                // InternalGameDSL.g:6273:11: ( ruleJvmFormalParameter )
                // InternalGameDSL.g:6274:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_148);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGameDSL.g:6277:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop185:
                do {
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==91) ) {
                        alt185=1;
                    }


                    switch (alt185) {
                	case 1 :
                	    // InternalGameDSL.g:6278:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,91,FOLLOW_97); if (state.failed) return ;
                	    // InternalGameDSL.g:6279:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalGameDSL.g:6280:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalGameDSL.g:6280:12: ( ruleJvmFormalParameter )
                	    // InternalGameDSL.g:6281:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_148);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop185;
                    }
                } while (true);


                }
                break;

        }

        // InternalGameDSL.g:6286:9: ( ( '|' ) )
        // InternalGameDSL.g:6287:10: ( '|' )
        {
        // InternalGameDSL.g:6287:10: ( '|' )
        // InternalGameDSL.g:6288:11: '|'
        {
        match(input,156,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalGameDSL

    // $ANTLR start synpred24_InternalGameDSL
    public final void synpred24_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6365:6: ( ( () '[' ) )
        // InternalGameDSL.g:6365:7: ( () '[' )
        {
        // InternalGameDSL.g:6365:7: ( () '[' )
        // InternalGameDSL.g:6366:7: () '['
        {
        // InternalGameDSL.g:6366:7: ()
        // InternalGameDSL.g:6367:7: 
        {
        }

        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalGameDSL

    // $ANTLR start synpred25_InternalGameDSL
    public final void synpred25_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6438:4: ( ( () 'synchronized' '(' ) )
        // InternalGameDSL.g:6438:5: ( () 'synchronized' '(' )
        {
        // InternalGameDSL.g:6438:5: ( () 'synchronized' '(' )
        // InternalGameDSL.g:6439:5: () 'synchronized' '('
        {
        // InternalGameDSL.g:6439:5: ()
        // InternalGameDSL.g:6440:5: 
        {
        }

        match(input,181,FOLLOW_94); if (state.failed) return ;
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalGameDSL

    // $ANTLR start synpred26_InternalGameDSL
    public final void synpred26_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6483:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalGameDSL.g:6483:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalGameDSL.g:6483:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalGameDSL.g:6484:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalGameDSL.g:6484:5: ()
        // InternalGameDSL.g:6485:5: 
        {
        }

        match(input,163,FOLLOW_94); if (state.failed) return ;
        match(input,100,FOLLOW_97); if (state.failed) return ;
        // InternalGameDSL.g:6488:5: ( ( ruleJvmFormalParameter ) )
        // InternalGameDSL.g:6489:6: ( ruleJvmFormalParameter )
        {
        // InternalGameDSL.g:6489:6: ( ruleJvmFormalParameter )
        // InternalGameDSL.g:6490:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_155);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,160,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalGameDSL

    // $ANTLR start synpred27_InternalGameDSL
    public final void synpred27_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6597:4: ( ( () '[' ) )
        // InternalGameDSL.g:6597:5: ( () '[' )
        {
        // InternalGameDSL.g:6597:5: ( () '[' )
        // InternalGameDSL.g:6598:5: () '['
        {
        // InternalGameDSL.g:6598:5: ()
        // InternalGameDSL.g:6599:5: 
        {
        }

        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalGameDSL

    // $ANTLR start synpred29_InternalGameDSL
    public final void synpred29_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:6902:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalGameDSL.g:6902:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalGameDSL.g:6902:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalGameDSL.g:6903:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalGameDSL.g:6903:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt188=2;
        int LA188_0 = input.LA(1);

        if ( (LA188_0==RULE_ID||LA188_0==100||LA188_0==142) ) {
            alt188=1;
        }
        switch (alt188) {
            case 1 :
                // InternalGameDSL.g:6904:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalGameDSL.g:6904:6: ( ( ruleJvmFormalParameter ) )
                // InternalGameDSL.g:6905:7: ( ruleJvmFormalParameter )
                {
                // InternalGameDSL.g:6905:7: ( ruleJvmFormalParameter )
                // InternalGameDSL.g:6906:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_148);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGameDSL.g:6909:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop187:
                do {
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==91) ) {
                        alt187=1;
                    }


                    switch (alt187) {
                	case 1 :
                	    // InternalGameDSL.g:6910:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,91,FOLLOW_97); if (state.failed) return ;
                	    // InternalGameDSL.g:6911:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalGameDSL.g:6912:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalGameDSL.g:6912:8: ( ruleJvmFormalParameter )
                	    // InternalGameDSL.g:6913:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_148);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop187;
                    }
                } while (true);


                }
                break;

        }

        // InternalGameDSL.g:6918:5: ( ( '|' ) )
        // InternalGameDSL.g:6919:6: ( '|' )
        {
        // InternalGameDSL.g:6919:6: ( '|' )
        // InternalGameDSL.g:6920:7: '|'
        {
        match(input,156,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalGameDSL

    // $ANTLR start synpred31_InternalGameDSL
    public final void synpred31_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:7311:5: ( 'else' )
        // InternalGameDSL.g:7311:6: 'else'
        {
        match(input,158,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalGameDSL

    // $ANTLR start synpred32_InternalGameDSL
    public final void synpred32_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:7370:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalGameDSL.g:7370:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalGameDSL.g:7370:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalGameDSL.g:7371:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,100,FOLLOW_97); if (state.failed) return ;
        // InternalGameDSL.g:7372:7: ( ( ruleJvmFormalParameter ) )
        // InternalGameDSL.g:7373:8: ( ruleJvmFormalParameter )
        {
        // InternalGameDSL.g:7373:8: ( ruleJvmFormalParameter )
        // InternalGameDSL.g:7374:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_155);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,160,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalGameDSL

    // $ANTLR start synpred33_InternalGameDSL
    public final void synpred33_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:7437:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalGameDSL.g:7437:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalGameDSL.g:7437:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalGameDSL.g:7438:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalGameDSL.g:7438:7: ( ( ruleJvmFormalParameter ) )
        // InternalGameDSL.g:7439:8: ( ruleJvmFormalParameter )
        {
        // InternalGameDSL.g:7439:8: ( ruleJvmFormalParameter )
        // InternalGameDSL.g:7440:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_155);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,160,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalGameDSL

    // $ANTLR start synpred35_InternalGameDSL
    public final void synpred35_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8255:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalGameDSL.g:8255:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalGameDSL.g:8255:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalGameDSL.g:8256:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalGameDSL.g:8256:6: ( ( ruleJvmTypeReference ) )
        // InternalGameDSL.g:8257:7: ( ruleJvmTypeReference )
        {
        // InternalGameDSL.g:8257:7: ( ruleJvmTypeReference )
        // InternalGameDSL.g:8258:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_4);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGameDSL.g:8261:6: ( ( ruleValidID ) )
        // InternalGameDSL.g:8262:7: ( ruleValidID )
        {
        // InternalGameDSL.g:8262:7: ( ruleValidID )
        // InternalGameDSL.g:8263:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalGameDSL

    // $ANTLR start synpred36_InternalGameDSL
    public final void synpred36_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8567:5: ( ( '(' ) )
        // InternalGameDSL.g:8567:6: ( '(' )
        {
        // InternalGameDSL.g:8567:6: ( '(' )
        // InternalGameDSL.g:8568:6: '('
        {
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalGameDSL

    // $ANTLR start synpred37_InternalGameDSL
    public final void synpred37_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8586:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalGameDSL.g:8586:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalGameDSL.g:8586:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalGameDSL.g:8587:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalGameDSL.g:8587:7: ()
        // InternalGameDSL.g:8588:7: 
        {
        }

        // InternalGameDSL.g:8589:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt192=2;
        int LA192_0 = input.LA(1);

        if ( (LA192_0==RULE_ID||LA192_0==100||LA192_0==142) ) {
            alt192=1;
        }
        switch (alt192) {
            case 1 :
                // InternalGameDSL.g:8590:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalGameDSL.g:8590:8: ( ( ruleJvmFormalParameter ) )
                // InternalGameDSL.g:8591:9: ( ruleJvmFormalParameter )
                {
                // InternalGameDSL.g:8591:9: ( ruleJvmFormalParameter )
                // InternalGameDSL.g:8592:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_148);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGameDSL.g:8595:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop191:
                do {
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==91) ) {
                        alt191=1;
                    }


                    switch (alt191) {
                	case 1 :
                	    // InternalGameDSL.g:8596:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,91,FOLLOW_97); if (state.failed) return ;
                	    // InternalGameDSL.g:8597:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalGameDSL.g:8598:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalGameDSL.g:8598:10: ( ruleJvmFormalParameter )
                	    // InternalGameDSL.g:8599:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_148);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop191;
                    }
                } while (true);


                }
                break;

        }

        // InternalGameDSL.g:8604:7: ( ( '|' ) )
        // InternalGameDSL.g:8605:8: ( '|' )
        {
        // InternalGameDSL.g:8605:8: ( '|' )
        // InternalGameDSL.g:8606:9: '|'
        {
        match(input,156,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred37_InternalGameDSL

    // $ANTLR start synpred38_InternalGameDSL
    public final void synpred38_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8683:4: ( ( () '[' ) )
        // InternalGameDSL.g:8683:5: ( () '[' )
        {
        // InternalGameDSL.g:8683:5: ( () '[' )
        // InternalGameDSL.g:8684:5: () '['
        {
        // InternalGameDSL.g:8684:5: ()
        // InternalGameDSL.g:8685:5: 
        {
        }

        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_InternalGameDSL

    // $ANTLR start synpred39_InternalGameDSL
    public final void synpred39_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8843:5: ( '<' )
        // InternalGameDSL.g:8843:6: '<'
        {
        match(input,129,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalGameDSL

    // $ANTLR start synpred40_InternalGameDSL
    public final void synpred40_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8900:5: ( ( '(' ) )
        // InternalGameDSL.g:8900:6: ( '(' )
        {
        // InternalGameDSL.g:8900:6: ( '(' )
        // InternalGameDSL.g:8901:6: '('
        {
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred40_InternalGameDSL

    // $ANTLR start synpred41_InternalGameDSL
    public final void synpred41_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:8919:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalGameDSL.g:8919:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalGameDSL.g:8919:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalGameDSL.g:8920:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalGameDSL.g:8920:7: ()
        // InternalGameDSL.g:8921:7: 
        {
        }

        // InternalGameDSL.g:8922:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt194=2;
        int LA194_0 = input.LA(1);

        if ( (LA194_0==RULE_ID||LA194_0==100||LA194_0==142) ) {
            alt194=1;
        }
        switch (alt194) {
            case 1 :
                // InternalGameDSL.g:8923:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalGameDSL.g:8923:8: ( ( ruleJvmFormalParameter ) )
                // InternalGameDSL.g:8924:9: ( ruleJvmFormalParameter )
                {
                // InternalGameDSL.g:8924:9: ( ruleJvmFormalParameter )
                // InternalGameDSL.g:8925:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_148);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGameDSL.g:8928:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop193:
                do {
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==91) ) {
                        alt193=1;
                    }


                    switch (alt193) {
                	case 1 :
                	    // InternalGameDSL.g:8929:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,91,FOLLOW_97); if (state.failed) return ;
                	    // InternalGameDSL.g:8930:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalGameDSL.g:8931:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalGameDSL.g:8931:10: ( ruleJvmFormalParameter )
                	    // InternalGameDSL.g:8932:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_148);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop193;
                    }
                } while (true);


                }
                break;

        }

        // InternalGameDSL.g:8937:7: ( ( '|' ) )
        // InternalGameDSL.g:8938:8: ( '|' )
        {
        // InternalGameDSL.g:8938:8: ( '|' )
        // InternalGameDSL.g:8939:9: '|'
        {
        match(input,156,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalGameDSL

    // $ANTLR start synpred42_InternalGameDSL
    public final void synpred42_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9016:4: ( ( () '[' ) )
        // InternalGameDSL.g:9016:5: ( () '[' )
        {
        // InternalGameDSL.g:9016:5: ( () '[' )
        // InternalGameDSL.g:9017:5: () '['
        {
        // InternalGameDSL.g:9017:5: ()
        // InternalGameDSL.g:9018:5: 
        {
        }

        match(input,122,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalGameDSL

    // $ANTLR start synpred43_InternalGameDSL
    public final void synpred43_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9359:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalGameDSL.g:
        {
        if ( (input.LA(1)>=RULE_INT && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==14||input.LA(1)==75||input.LA(1)==87||input.LA(1)==100||input.LA(1)==117||(input.LA(1)>=121 && input.LA(1)<=122)||input.LA(1)==129||input.LA(1)==145||input.LA(1)==150||input.LA(1)==159||(input.LA(1)>=163 && input.LA(1)<=164)||(input.LA(1)>=167 && input.LA(1)<=179)||input.LA(1)==181 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred43_InternalGameDSL

    // $ANTLR start synpred44_InternalGameDSL
    public final void synpred44_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9430:6: ( 'catch' )
        // InternalGameDSL.g:9430:7: 'catch'
        {
        match(input,182,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalGameDSL

    // $ANTLR start synpred45_InternalGameDSL
    public final void synpred45_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9451:7: ( 'finally' )
        // InternalGameDSL.g:9451:8: 'finally'
        {
        match(input,180,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_InternalGameDSL

    // $ANTLR start synpred48_InternalGameDSL
    public final void synpred48_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9695:5: ( '.' )
        // InternalGameDSL.g:9695:6: '.'
        {
        match(input,118,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_InternalGameDSL

    // $ANTLR start synpred49_InternalGameDSL
    public final void synpred49_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:9821:5: ( ( () ruleArrayBrackets ) )
        // InternalGameDSL.g:9821:6: ( () ruleArrayBrackets )
        {
        // InternalGameDSL.g:9821:6: ( () ruleArrayBrackets )
        // InternalGameDSL.g:9822:6: () ruleArrayBrackets
        {
        // InternalGameDSL.g:9822:6: ()
        // InternalGameDSL.g:9823:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalGameDSL

    // $ANTLR start synpred50_InternalGameDSL
    public final void synpred50_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:10018:5: ( '<' )
        // InternalGameDSL.g:10018:6: '<'
        {
        match(input,129,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_InternalGameDSL

    // $ANTLR start synpred51_InternalGameDSL
    public final void synpred51_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:10074:6: ( ( () '.' ) )
        // InternalGameDSL.g:10074:7: ( () '.' )
        {
        // InternalGameDSL.g:10074:7: ( () '.' )
        // InternalGameDSL.g:10075:7: () '.'
        {
        // InternalGameDSL.g:10075:7: ()
        // InternalGameDSL.g:10076:7: 
        {
        }

        match(input,118,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred51_InternalGameDSL

    // $ANTLR start synpred52_InternalGameDSL
    public final void synpred52_InternalGameDSL_fragment() throws RecognitionException {   
        // InternalGameDSL.g:10112:7: ( '<' )
        // InternalGameDSL.g:10112:8: '<'
        {
        match(input,129,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_InternalGameDSL

    // Delegated rules

    public final boolean synpred16_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalGameDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalGameDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA33 dfa33 = new DFA33(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA174 dfa174 = new DFA174(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\1\1\12\uffff";
    static final String dfa_3s = "\1\17\12\uffff";
    static final String dfa_4s = "\1\122\12\uffff";
    static final String dfa_5s = "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_6s = "\1\0\12\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\35\uffff\1\3\26\uffff\1\1\1\uffff\1\2\1\3\1\4\1\uffff\1\5\1\uffff\1\6\1\7\1\10\2\uffff\1\11\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2056:6: ( ({...}? => ( ({...}? => ( ( (lv_hasVelocity_8_0= 'velocity' ) ) ( (lv_velocity_9_0= ruleGameVector2d ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_hasLayer_10_0= 'layer' ) ) ( (otherlv_11= RULE_ID ) ) ) | ( ( (lv_hasStartPosition_12_0= 'startPosition' ) ) ( (lv_startPosition_13_0= ruleGameVector2d ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasSensor_14_0= 'sensor' ) ) otherlv_15= '{' ( (lv_vectors2d_16_0= ruleGameVector2d ) )* otherlv_17= '}' otherlv_18= 'sensorID' ( (lv_sensorID_19_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_hasActivationRule_20_0= 'activate' ) ) otherlv_21= 'if' ( (lv_rule_22_0= ruleGameRule ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'actors' otherlv_24= '{' ( (lv_actors_25_0= ruleGameActor ) )* otherlv_26= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'properties' otherlv_28= '{' ( (lv_properties_29_0= ruleGameBodyProperty ) )* otherlv_30= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'states' otherlv_32= '{' ( (lv_states_33_0= ruleGameSpriteState ) )* otherlv_34= '}' otherlv_35= 'initialState' ( (otherlv_36= RULE_ID ) ) (otherlv_37= 'gameOverState' ( (otherlv_38= RULE_ID ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'events' otherlv_40= '{' ( (lv_events_41_0= ruleGameEvent ) )* otherlv_42= '}' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inputs' otherlv_44= '{' ( (lv_inputs_45_0= ruleGameInput ) )* otherlv_46= '}' ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_0 = input.LA(1);

                         
                        int index33_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA33_0==EOF||LA33_0==15||LA33_0==68) ) {s = 1;}

                        else if ( LA33_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 0) ) {s = 2;}

                        else if ( ( LA33_0 == 45 || LA33_0 == 71 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 1) ) {s = 3;}

                        else if ( LA33_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 2) ) {s = 4;}

                        else if ( LA33_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 3) ) {s = 5;}

                        else if ( LA33_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 4) ) {s = 6;}

                        else if ( LA33_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA33_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 6) ) {s = 8;}

                        else if ( LA33_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 7) ) {s = 9;}

                        else if ( LA33_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getGameSpriteAccess().getUnorderedGroup_7(), 8) ) {s = 10;}

                         
                        input.seek(index33_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\44\uffff";
    static final String dfa_9s = "\1\4\1\0\42\uffff";
    static final String dfa_10s = "\1\u00b5\1\0\42\uffff";
    static final String dfa_11s = "\2\uffff\1\2\37\uffff\1\3\1\1";
    static final String dfa_12s = "\1\uffff\1\0\42\uffff}>";
    static final String[] dfa_13s = {
            "\2\2\1\1\2\2\5\uffff\1\2\74\uffff\1\2\13\uffff\1\2\4\uffff\1\42\7\uffff\1\2\20\uffff\1\2\1\uffff\1\2\1\uffff\2\2\6\uffff\1\2\17\uffff\1\2\4\uffff\1\2\10\uffff\1\2\3\uffff\2\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "4005:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalGameDSL()) ) {s = 35;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\43\uffff";
    static final String dfa_15s = "\1\4\1\0\41\uffff";
    static final String dfa_16s = "\1\u00b5\1\0\41\uffff";
    static final String dfa_17s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_18s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_19s = {
            "\5\2\5\uffff\1\2\74\uffff\1\2\13\uffff\1\2\14\uffff\1\2\20\uffff\1\2\1\uffff\1\2\1\uffff\1\1\1\2\6\uffff\1\2\17\uffff\1\2\4\uffff\1\2\10\uffff\1\2\3\uffff\2\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4185:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalGameDSL()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4327:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalGameDSL()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\12\uffff";
    static final String dfa_21s = "\1\10\11\uffff";
    static final String dfa_22s = "\1\4\7\0\2\uffff";
    static final String dfa_23s = "\1\u00b6\7\0\2\uffff";
    static final String dfa_24s = "\10\uffff\1\2\1\1";
    static final String dfa_25s = "\1\uffff\1\2\1\3\1\4\1\5\1\6\1\1\1\0\2\uffff}>";
    static final String[] dfa_26s = {
            "\5\10\5\uffff\2\10\73\uffff\1\10\13\uffff\1\10\3\uffff\2\10\7\uffff\1\10\20\uffff\2\10\2\uffff\3\10\1\1\1\2\1\3\1\4\1\5\1\6\1\7\31\10\1\uffff\32\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "4556:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_7 = input.LA(1);

                         
                        int index66_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_6 = input.LA(1);

                         
                        int index66_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA66_5 = input.LA(1);

                         
                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGameDSL()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_28s = "\1\u00b6\1\uffff\10\0\1\uffff";
    static final String dfa_29s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_30s = "\2\uffff\1\6\1\0\1\1\1\2\1\3\1\7\1\4\1\5\1\uffff}>";
    static final String[] dfa_31s = {
            "\5\1\5\uffff\2\1\73\uffff\1\1\13\uffff\1\1\3\uffff\2\1\7\uffff\1\1\20\uffff\2\1\2\uffff\10\1\1\2\1\3\10\1\1\4\1\5\1\6\1\7\1\10\1\11\13\1\1\uffff\32\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "()* loopback of 5270:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_4 = input.LA(1);

                         
                        int index76_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_5 = input.LA(1);

                         
                        int index76_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA76_6 = input.LA(1);

                         
                        int index76_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA76_8 = input.LA(1);

                         
                        int index76_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA76_9 = input.LA(1);

                         
                        int index76_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA76_2 = input.LA(1);

                         
                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA76_7 = input.LA(1);

                         
                        int index76_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalGameDSL()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\u0081\2\uffff\1\u0082\7\uffff";
    static final String dfa_33s = "\1\u0090\2\uffff\1\u008d\7\uffff";
    static final String dfa_34s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_35s = "\13\uffff}>";
    static final String[] dfa_36s = {
            "\1\6\1\3\10\uffff\1\1\1\2\1\4\1\5\1\7\1\10",
            "",
            "",
            "\1\12\12\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "5346:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_37s = "\116\uffff";
    static final String dfa_38s = "\1\2\115\uffff";
    static final String dfa_39s = "\1\4\1\0\114\uffff";
    static final String dfa_40s = "\1\u00b6\1\0\114\uffff";
    static final String dfa_41s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_42s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_43s = {
            "\5\2\5\uffff\2\2\73\uffff\1\2\13\uffff\1\2\3\uffff\2\2\7\uffff\1\1\20\uffff\2\2\2\uffff\43\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "6247:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\1\4\2\0\41\uffff";
    static final String dfa_45s = "\1\u00b5\2\0\41\uffff";
    static final String dfa_46s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_47s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_48s = {
            "\2\5\1\1\2\5\5\uffff\1\5\74\uffff\1\5\13\uffff\1\5\4\uffff\1\43\7\uffff\1\2\20\uffff\1\5\3\uffff\2\5\6\uffff\1\5\14\uffff\1\3\2\uffff\1\5\4\uffff\1\5\5\uffff\1\4\2\uffff\1\5\3\uffff\2\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "6266:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA94_0==RULE_ID) ) {s = 1;}

                        else if ( (LA94_0==100) ) {s = 2;}

                        else if ( (LA94_0==142) && (synpred23_InternalGameDSL())) {s = 3;}

                        else if ( (LA94_0==156) && (synpred23_InternalGameDSL())) {s = 4;}

                        else if ( ((LA94_0>=RULE_INT && LA94_0<=RULE_STRING)||(LA94_0>=RULE_HEX && LA94_0<=RULE_DECIMAL)||LA94_0==14||LA94_0==75||LA94_0==87||LA94_0==117||(LA94_0>=121 && LA94_0<=122)||LA94_0==129||LA94_0==145||LA94_0==150||LA94_0==159||(LA94_0>=163 && LA94_0<=164)||(LA94_0>=167 && LA94_0<=179)||LA94_0==181) ) {s = 5;}

                        else if ( (LA94_0==92) ) {s = 35;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_1 = input.LA(1);

                         
                        int index94_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index94_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_2 = input.LA(1);

                         
                        int index94_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index94_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_49s = {
            "\5\2\5\uffff\2\2\73\uffff\1\2\13\uffff\1\2\3\uffff\2\2\7\uffff\1\2\20\uffff\2\2\2\uffff\1\2\1\1\41\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "6364:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\40\uffff";
    static final String dfa_51s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_52s = "\1\u00b5\26\uffff\1\0\10\uffff";
    static final String dfa_53s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_54s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_55s = {
            "\2\14\1\5\2\14\5\uffff\1\2\74\uffff\1\26\13\uffff\1\31\14\uffff\1\35\24\uffff\2\14\6\uffff\1\5\35\uffff\1\3\3\uffff\1\27\1\30\2\uffff\5\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "6409:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_0 = input.LA(1);

                         
                        int index98_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_0==172) ) {s = 1;}

                        else if ( (LA98_0==14) ) {s = 2;}

                        else if ( (LA98_0==159) ) {s = 3;}

                        else if ( (LA98_0==181) && (synpred25_InternalGameDSL())) {s = 4;}

                        else if ( (LA98_0==RULE_ID||LA98_0==129||(LA98_0>=167 && LA98_0<=171)) ) {s = 5;}

                        else if ( ((LA98_0>=RULE_INT && LA98_0<=RULE_STRING)||(LA98_0>=RULE_HEX && LA98_0<=RULE_DECIMAL)||(LA98_0>=121 && LA98_0<=122)||(LA98_0>=173 && LA98_0<=176)) ) {s = 12;}

                        else if ( (LA98_0==75) ) {s = 22;}

                        else if ( (LA98_0==163) ) {s = 23;}

                        else if ( (LA98_0==164) ) {s = 24;}

                        else if ( (LA98_0==87) ) {s = 25;}

                        else if ( (LA98_0==177) ) {s = 26;}

                        else if ( (LA98_0==178) ) {s = 27;}

                        else if ( (LA98_0==179) ) {s = 28;}

                        else if ( (LA98_0==100) ) {s = 29;}

                         
                        input.seek(index98_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_23 = input.LA(1);

                         
                        int index98_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalGameDSL()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index98_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\46\uffff";
    static final String dfa_57s = "\1\4\2\0\43\uffff";
    static final String dfa_58s = "\1\u00b5\2\0\43\uffff";
    static final String dfa_59s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_60s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_61s = {
            "\2\5\1\1\2\5\5\uffff\1\5\74\uffff\1\5\13\uffff\1\5\14\uffff\1\2\20\uffff\1\5\3\uffff\3\5\5\uffff\1\5\14\uffff\1\3\2\uffff\1\5\4\uffff\1\5\5\uffff\1\4\2\uffff\1\5\3\uffff\21\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "6901:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_0 = input.LA(1);

                         
                        int index107_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_0==RULE_ID) ) {s = 1;}

                        else if ( (LA107_0==100) ) {s = 2;}

                        else if ( (LA107_0==142) && (synpred29_InternalGameDSL())) {s = 3;}

                        else if ( (LA107_0==156) && (synpred29_InternalGameDSL())) {s = 4;}

                        else if ( ((LA107_0>=RULE_INT && LA107_0<=RULE_STRING)||(LA107_0>=RULE_HEX && LA107_0<=RULE_DECIMAL)||LA107_0==14||LA107_0==75||LA107_0==87||LA107_0==117||(LA107_0>=121 && LA107_0<=123)||LA107_0==129||LA107_0==145||LA107_0==150||LA107_0==159||(LA107_0>=163 && LA107_0<=179)||LA107_0==181) ) {s = 5;}

                         
                        input.seek(index107_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_1 = input.LA(1);

                         
                        int index107_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index107_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA107_2 = input.LA(1);

                         
                        int index107_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index107_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_62s = {
            "\5\2\5\uffff\1\2\74\uffff\1\2\13\uffff\1\2\14\uffff\1\1\20\uffff\1\2\3\uffff\2\2\6\uffff\1\2\14\uffff\1\2\2\uffff\1\2\4\uffff\1\2\10\uffff\1\2\3\uffff\2\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "7367:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_1 = input.LA(1);

                         
                        int index114_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalGameDSL()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index114_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\42\uffff";
    static final String dfa_64s = "\1\4\2\0\37\uffff";
    static final String dfa_65s = "\1\u00b5\2\0\37\uffff";
    static final String dfa_66s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_67s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_68s = {
            "\2\4\1\1\2\4\5\uffff\1\4\74\uffff\1\4\13\uffff\1\4\14\uffff\1\2\20\uffff\1\4\3\uffff\2\4\6\uffff\1\4\14\uffff\1\3\2\uffff\1\4\4\uffff\1\4\10\uffff\1\4\3\uffff\2\4\2\uffff\15\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "7436:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_0 = input.LA(1);

                         
                        int index113_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA113_0==RULE_ID) ) {s = 1;}

                        else if ( (LA113_0==100) ) {s = 2;}

                        else if ( (LA113_0==142) && (synpred33_InternalGameDSL())) {s = 3;}

                        else if ( ((LA113_0>=RULE_INT && LA113_0<=RULE_STRING)||(LA113_0>=RULE_HEX && LA113_0<=RULE_DECIMAL)||LA113_0==14||LA113_0==75||LA113_0==87||LA113_0==117||(LA113_0>=121 && LA113_0<=122)||LA113_0==129||LA113_0==145||LA113_0==150||LA113_0==159||(LA113_0>=163 && LA113_0<=164)||(LA113_0>=167 && LA113_0<=179)||LA113_0==181) ) {s = 4;}

                         
                        input.seek(index113_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalGameDSL()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA113_2 = input.LA(1);

                         
                        int index113_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalGameDSL()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index113_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "8565:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "8584:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA135_0 = input.LA(1);

                         
                        int index135_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA135_0==RULE_ID) ) {s = 1;}

                        else if ( (LA135_0==100) ) {s = 2;}

                        else if ( (LA135_0==142) && (synpred37_InternalGameDSL())) {s = 3;}

                        else if ( (LA135_0==156) && (synpred37_InternalGameDSL())) {s = 4;}

                        else if ( ((LA135_0>=RULE_INT && LA135_0<=RULE_STRING)||(LA135_0>=RULE_HEX && LA135_0<=RULE_DECIMAL)||LA135_0==14||LA135_0==75||LA135_0==87||LA135_0==117||(LA135_0>=121 && LA135_0<=122)||LA135_0==129||LA135_0==145||LA135_0==150||LA135_0==159||(LA135_0>=163 && LA135_0<=164)||(LA135_0>=167 && LA135_0<=179)||LA135_0==181) ) {s = 5;}

                        else if ( (LA135_0==92) ) {s = 35;}

                         
                        input.seek(index135_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA135_1 = input.LA(1);

                         
                        int index135_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index135_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA135_2 = input.LA(1);

                         
                        int index135_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index135_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 135, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "8682:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_1 = input.LA(1);

                         
                        int index137_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index137_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_69s = {
            "\5\2\5\uffff\2\2\73\uffff\1\2\13\uffff\1\2\3\uffff\2\2\7\uffff\1\2\20\uffff\2\2\2\uffff\10\2\1\1\32\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "8841:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA141_1 = input.LA(1);

                         
                        int index141_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index141_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 141, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "8898:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "8917:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA143_0 = input.LA(1);

                         
                        int index143_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA143_0==RULE_ID) ) {s = 1;}

                        else if ( (LA143_0==100) ) {s = 2;}

                        else if ( (LA143_0==142) && (synpred41_InternalGameDSL())) {s = 3;}

                        else if ( (LA143_0==156) && (synpred41_InternalGameDSL())) {s = 4;}

                        else if ( ((LA143_0>=RULE_INT && LA143_0<=RULE_STRING)||(LA143_0>=RULE_HEX && LA143_0<=RULE_DECIMAL)||LA143_0==14||LA143_0==75||LA143_0==87||LA143_0==117||(LA143_0>=121 && LA143_0<=122)||LA143_0==129||LA143_0==145||LA143_0==150||LA143_0==159||(LA143_0>=163 && LA143_0<=164)||(LA143_0>=167 && LA143_0<=179)||LA143_0==181) ) {s = 5;}

                        else if ( (LA143_0==92) ) {s = 35;}

                         
                        input.seek(index143_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA143_1 = input.LA(1);

                         
                        int index143_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index143_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA143_2 = input.LA(1);

                         
                        int index143_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalGameDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index143_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 143, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "9015:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\1\41\115\uffff";
    static final String dfa_71s = "\1\4\40\0\55\uffff";
    static final String dfa_72s = "\1\u00b6\40\0\55\uffff";
    static final String dfa_73s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_74s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_75s = {
            "\1\24\1\27\1\1\1\23\1\25\5\uffff\1\12\1\41\73\uffff\1\31\13\uffff\1\34\3\uffff\2\41\7\uffff\1\40\20\uffff\1\7\1\41\2\uffff\1\17\1\20\6\41\1\15\17\41\1\10\4\41\1\6\5\41\1\uffff\2\41\1\13\3\41\1\32\1\33\2\41\1\2\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_37;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "9358:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_2 = input.LA(1);

                         
                        int index148_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA148_3 = input.LA(1);

                         
                        int index148_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA148_4 = input.LA(1);

                         
                        int index148_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA148_5 = input.LA(1);

                         
                        int index148_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA148_6 = input.LA(1);

                         
                        int index148_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA148_7 = input.LA(1);

                         
                        int index148_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA148_8 = input.LA(1);

                         
                        int index148_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA148_9 = input.LA(1);

                         
                        int index148_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA148_10 = input.LA(1);

                         
                        int index148_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA148_11 = input.LA(1);

                         
                        int index148_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA148_12 = input.LA(1);

                         
                        int index148_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA148_13 = input.LA(1);

                         
                        int index148_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA148_14 = input.LA(1);

                         
                        int index148_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA148_15 = input.LA(1);

                         
                        int index148_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA148_16 = input.LA(1);

                         
                        int index148_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA148_17 = input.LA(1);

                         
                        int index148_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA148_18 = input.LA(1);

                         
                        int index148_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA148_19 = input.LA(1);

                         
                        int index148_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA148_20 = input.LA(1);

                         
                        int index148_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA148_21 = input.LA(1);

                         
                        int index148_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA148_22 = input.LA(1);

                         
                        int index148_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA148_23 = input.LA(1);

                         
                        int index148_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA148_24 = input.LA(1);

                         
                        int index148_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA148_25 = input.LA(1);

                         
                        int index148_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA148_26 = input.LA(1);

                         
                        int index148_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA148_27 = input.LA(1);

                         
                        int index148_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA148_28 = input.LA(1);

                         
                        int index148_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA148_29 = input.LA(1);

                         
                        int index148_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA148_30 = input.LA(1);

                         
                        int index148_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA148_31 = input.LA(1);

                         
                        int index148_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA148_32 = input.LA(1);

                         
                        int index148_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGameDSL()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index148_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\117\uffff";
    static final String dfa_77s = "\1\2\116\uffff";
    static final String dfa_78s = "\1\4\1\0\115\uffff";
    static final String dfa_79s = "\1\u00b8\1\0\115\uffff";
    static final String dfa_80s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_81s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_82s = {
            "\5\2\5\uffff\2\2\73\uffff\1\2\13\uffff\1\2\3\uffff\2\2\7\uffff\1\2\20\uffff\2\2\2\uffff\10\2\1\1\32\2\1\uffff\32\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "10016:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_1 = input.LA(1);

                         
                        int index166_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalGameDSL()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index166_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "10110:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalGameDSL()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\7\uffff";
    static final String dfa_84s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_85s = "\1\6\1\uffff\1\15\1\6\1\uffff\1\15\1\uffff";
    static final String dfa_86s = "\1\u00a8\1\uffff\1\u00a9\1\u0092\1\uffff\1\u00a9\1\uffff";
    static final String dfa_87s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_88s = "\7\uffff}>";
    static final String[] dfa_89s = {
            "\1\2\u00a1\uffff\1\1",
            "",
            "\1\4\150\uffff\1\3\46\uffff\1\4\13\uffff\1\4",
            "\1\5\u008b\uffff\1\6",
            "",
            "\1\4\150\uffff\1\3\46\uffff\1\4\13\uffff\1\4",
            ""
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "10608:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000010008000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000003C08000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000002008000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00001F0000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00001E0000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000200000008000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x00001E0000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0008000000008000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0001000000008000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000008000L,0x0000200000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L,0x0E00000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000001L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0100000000008000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x7000000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0xD800000000000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000030L,0x0020000000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0xD000000000000002L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000010L,0x0020000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0xC000000000000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000200000000002L,0x00000000000675C0L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000008000L,0x0000000004000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000008000L,0x0000000000100011L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000008000L,0x0000000100000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000008000L,0x0000000020000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000200000000002L,0x00000000000775C0L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000008000L,0x0010000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000008000L,0x0000000000080000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000000000F0L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000011L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000003000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000082000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x0000000600000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000040L,0x0000001010000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000018000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000040L,0x0000001000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000048000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x000F000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x000E000000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x000C000000000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001010800800L,0x002FFF9880420002L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001000800800L,0x002FFF9880420002L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x00000000000041F0L,0x0EA0001000800800L,0x002FFF9880420002L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0800000008000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0xF000000000000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000003C0L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000000040EL});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000001F806L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004002L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000003C0000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000003000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000000L,0x0000078000000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000000L,0x00000F8000000002L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000040L,0x0000001000000000L,0x0080000000004000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000002L,0x0440001000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001010800800L,0x002FFF9890424002L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000002L,0x0440000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x000000000000C1F0L,0x06A0001000800800L,0x002FFF9880420002L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000008000L,0x0000000008000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x00000000000041F0L,0x0EA0001000800800L,0x002FFFF890424002L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x00000000000041F0L,0x0EA0001000800800L,0x002FFFF880420002L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x00000000000041F2L,0x06A0001000800800L,0x002FFFF8A0420002L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x00000000000041F2L,0x06A0001000800800L,0x002FFFF880420002L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001000800800L,0x002FFF9880424002L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000008040L,0x0000001008000000L,0x0000000700004000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000500000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001000800800L,0x002FFFF8A0420002L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001000800800L,0x002FFFF880420002L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x00000000000041F0L,0x06A0001000800800L,0x002FFF98A0420002L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x000000000000C1F0L,0x06A0001000800800L,0x002FFFF880420002L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x000000000000C1F0L,0x06A0001000800800L,0x002FFFF8A0420002L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000002L,0x0400001000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0400001000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000000L,0x0400000010000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x00000000000041F2L,0x06A0001000800800L,0x002FFF9880420002L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0050000000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0050000000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000110L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000088000000000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000042L});

}
