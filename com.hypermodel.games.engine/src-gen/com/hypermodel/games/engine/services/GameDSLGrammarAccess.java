/*
 * generated by hypermodels.com with Xtext 2.13.0
 */
package com.hypermodel.games.engine.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class GameDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GameModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameModel");
		private final Assignment cPackagesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPackagesGamePackageParserRuleCall_0 = (RuleCall)cPackagesAssignment.eContents().get(0);
		
		//GameModel:
		//	packages+=GamePackage*;
		@Override public ParserRule getRule() { return rule; }
		
		//packages+=GamePackage*
		public Assignment getPackagesAssignment() { return cPackagesAssignment; }
		
		//GamePackage
		public RuleCall getPackagesGamePackageParserRuleCall_0() { return cPackagesGamePackageParserRuleCall_0; }
	}
	public class GameImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceGameQualifiedNameWithWildCardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//GameImport:
		//	'import' importedNamespace=GameQualifiedNameWithWildCard;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=GameQualifiedNameWithWildCard
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=GameQualifiedNameWithWildCard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//GameQualifiedNameWithWildCard
		public RuleCall getImportedNamespaceGameQualifiedNameWithWildCardParserRuleCall_1_0() { return cImportedNamespaceGameQualifiedNameWithWildCardParserRuleCall_1_0; }
	}
	public class GamePackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportsGameImportParserRuleCall_3_0 = (RuleCall)cImportsAssignment_3.eContents().get(0);
		private final Assignment cConfigAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConfigGamePlatformConfigParserRuleCall_4_0 = (RuleCall)cConfigAssignment_4.eContents().get(0);
		private final Assignment cGamesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGamesGameRootParserRuleCall_5_0 = (RuleCall)cGamesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GamePackage:
		//	'package' name=QualifiedName '{'
		//	imports+=GameImport*
		//	config=GamePlatformConfig
		//	games+=GameRoot*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=QualifiedName '{' imports+=GameImport* config=GamePlatformConfig games+=GameRoot* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//imports+=GameImport*
		public Assignment getImportsAssignment_3() { return cImportsAssignment_3; }
		
		//GameImport
		public RuleCall getImportsGameImportParserRuleCall_3_0() { return cImportsGameImportParserRuleCall_3_0; }
		
		//config=GamePlatformConfig
		public Assignment getConfigAssignment_4() { return cConfigAssignment_4; }
		
		//GamePlatformConfig
		public RuleCall getConfigGamePlatformConfigParserRuleCall_4_0() { return cConfigGamePlatformConfigParserRuleCall_4_0; }
		
		//games+=GameRoot*
		public Assignment getGamesAssignment_5() { return cGamesAssignment_5; }
		
		//GameRoot
		public RuleCall getGamesGameRootParserRuleCall_5_0() { return cGamesGameRootParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GamePlatformConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatformConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGamePlatformConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConfigurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAndroidAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAndroidGamePlatformConfigAndroidParserRuleCall_3_0 = (RuleCall)cAndroidAssignment_3.eContents().get(0);
		private final Assignment cIosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIosGamePlatformConfigIOSParserRuleCall_4_0 = (RuleCall)cIosAssignment_4.eContents().get(0);
		private final Assignment cIosmoeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIosmoeGamePlatformConfigIOSMOEParserRuleCall_5_0 = (RuleCall)cIosmoeAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GamePlatformConfig:
		//	{GamePlatformConfig}
		//	'configuration' '{'
		//	android=GamePlatformConfigAndroid
		//	ios=GamePlatformConfigIOS
		//	iosmoe=GamePlatformConfigIOSMOE
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GamePlatformConfig} 'configuration' '{' android=GamePlatformConfigAndroid ios=GamePlatformConfigIOS
		//iosmoe=GamePlatformConfigIOSMOE '}'
		public Group getGroup() { return cGroup; }
		
		//{GamePlatformConfig}
		public Action getGamePlatformConfigAction_0() { return cGamePlatformConfigAction_0; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_1() { return cConfigurationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//android=GamePlatformConfigAndroid
		public Assignment getAndroidAssignment_3() { return cAndroidAssignment_3; }
		
		//GamePlatformConfigAndroid
		public RuleCall getAndroidGamePlatformConfigAndroidParserRuleCall_3_0() { return cAndroidGamePlatformConfigAndroidParserRuleCall_3_0; }
		
		//ios=GamePlatformConfigIOS
		public Assignment getIosAssignment_4() { return cIosAssignment_4; }
		
		//GamePlatformConfigIOS
		public RuleCall getIosGamePlatformConfigIOSParserRuleCall_4_0() { return cIosGamePlatformConfigIOSParserRuleCall_4_0; }
		
		//iosmoe=GamePlatformConfigIOSMOE
		public Assignment getIosmoeAssignment_5() { return cIosmoeAssignment_5; }
		
		//GamePlatformConfigIOSMOE
		public RuleCall getIosmoeGamePlatformConfigIOSMOEParserRuleCall_5_0() { return cIosmoeGamePlatformConfigIOSMOEParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GamePlatformConfigAndroidElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatformConfigAndroid");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGamePlatformConfigAndroidAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAndroidKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMinAndroidVersionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMinAndroidVersionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMinAndroidVersionINTTerminalRuleCall_4_0 = (RuleCall)cMinAndroidVersionAssignment_4.eContents().get(0);
		private final Keyword cTargetAndroidVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAndroidVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTargetAndroidVersionINTTerminalRuleCall_6_0 = (RuleCall)cTargetAndroidVersionAssignment_6.eContents().get(0);
		private final Keyword cSDKApiLevelKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cApiLevelAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cApiLevelINTTerminalRuleCall_8_0 = (RuleCall)cApiLevelAssignment_8.eContents().get(0);
		private final Keyword cOrientationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cOrientationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cOrientationGameScreenOrientationEnumRuleCall_10_0 = (RuleCall)cOrientationAssignment_10.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_11 = (UnorderedGroup)cGroup.eContents().get(11);
		private final Group cGroup_11_0 = (Group)cUnorderedGroup_11.eContents().get(0);
		private final Keyword cIconKeyword_11_0_0 = (Keyword)cGroup_11_0.eContents().get(0);
		private final Assignment cAppIconAssignment_11_0_1 = (Assignment)cGroup_11_0.eContents().get(1);
		private final RuleCall cAppIconSTRINGTerminalRuleCall_11_0_1_0 = (RuleCall)cAppIconAssignment_11_0_1.eContents().get(0);
		private final Group cGroup_11_1 = (Group)cUnorderedGroup_11.eContents().get(1);
		private final Keyword cNameKeyword_11_1_0 = (Keyword)cGroup_11_1.eContents().get(0);
		private final Assignment cAppNameAssignment_11_1_1 = (Assignment)cGroup_11_1.eContents().get(1);
		private final RuleCall cAppNameSTRINGTerminalRuleCall_11_1_1_0 = (RuleCall)cAppNameAssignment_11_1_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cUnorderedGroup_11.eContents().get(2);
		private final Keyword cLabelKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cAppLabelAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cAppLabelSTRINGTerminalRuleCall_11_2_1_0 = (RuleCall)cAppLabelAssignment_11_2_1.eContents().get(0);
		private final Assignment cUseAccelerometerAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final Keyword cUseAccelerometerUseAccelerometerKeyword_12_0 = (Keyword)cUseAccelerometerAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//GamePlatformConfigAndroid:
		//	{GamePlatformConfigAndroid}
		//	'android' '{'
		//	'minAndroidVersion' minAndroidVersion=INT
		//	'targetAndroidVersion' targetAndroidVersion=INT
		//	'SDKApiLevel' apiLevel=INT
		//	'orientation' orientation=GameScreenOrientation (('icon' appIcon=STRING)? & ('name' appName=STRING)? & ('label'
		//	appLabel=STRING)?) useAccelerometer?='useAccelerometer'?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GamePlatformConfigAndroid} 'android' '{' 'minAndroidVersion' minAndroidVersion=INT 'targetAndroidVersion'
		//targetAndroidVersion=INT 'SDKApiLevel' apiLevel=INT 'orientation' orientation=GameScreenOrientation (('icon'
		//appIcon=STRING)? & ('name' appName=STRING)? & ('label' appLabel=STRING)?) useAccelerometer?='useAccelerometer'? '}'
		public Group getGroup() { return cGroup; }
		
		//{GamePlatformConfigAndroid}
		public Action getGamePlatformConfigAndroidAction_0() { return cGamePlatformConfigAndroidAction_0; }
		
		//'android'
		public Keyword getAndroidKeyword_1() { return cAndroidKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'minAndroidVersion'
		public Keyword getMinAndroidVersionKeyword_3() { return cMinAndroidVersionKeyword_3; }
		
		//minAndroidVersion=INT
		public Assignment getMinAndroidVersionAssignment_4() { return cMinAndroidVersionAssignment_4; }
		
		//INT
		public RuleCall getMinAndroidVersionINTTerminalRuleCall_4_0() { return cMinAndroidVersionINTTerminalRuleCall_4_0; }
		
		//'targetAndroidVersion'
		public Keyword getTargetAndroidVersionKeyword_5() { return cTargetAndroidVersionKeyword_5; }
		
		//targetAndroidVersion=INT
		public Assignment getTargetAndroidVersionAssignment_6() { return cTargetAndroidVersionAssignment_6; }
		
		//INT
		public RuleCall getTargetAndroidVersionINTTerminalRuleCall_6_0() { return cTargetAndroidVersionINTTerminalRuleCall_6_0; }
		
		//'SDKApiLevel'
		public Keyword getSDKApiLevelKeyword_7() { return cSDKApiLevelKeyword_7; }
		
		//apiLevel=INT
		public Assignment getApiLevelAssignment_8() { return cApiLevelAssignment_8; }
		
		//INT
		public RuleCall getApiLevelINTTerminalRuleCall_8_0() { return cApiLevelINTTerminalRuleCall_8_0; }
		
		//'orientation'
		public Keyword getOrientationKeyword_9() { return cOrientationKeyword_9; }
		
		//orientation=GameScreenOrientation
		public Assignment getOrientationAssignment_10() { return cOrientationAssignment_10; }
		
		//GameScreenOrientation
		public RuleCall getOrientationGameScreenOrientationEnumRuleCall_10_0() { return cOrientationGameScreenOrientationEnumRuleCall_10_0; }
		
		//('icon' appIcon=STRING)? & ('name' appName=STRING)? & ('label' appLabel=STRING)?
		public UnorderedGroup getUnorderedGroup_11() { return cUnorderedGroup_11; }
		
		//('icon' appIcon=STRING)?
		public Group getGroup_11_0() { return cGroup_11_0; }
		
		//'icon'
		public Keyword getIconKeyword_11_0_0() { return cIconKeyword_11_0_0; }
		
		//appIcon=STRING
		public Assignment getAppIconAssignment_11_0_1() { return cAppIconAssignment_11_0_1; }
		
		//STRING
		public RuleCall getAppIconSTRINGTerminalRuleCall_11_0_1_0() { return cAppIconSTRINGTerminalRuleCall_11_0_1_0; }
		
		//('name' appName=STRING)?
		public Group getGroup_11_1() { return cGroup_11_1; }
		
		//'name'
		public Keyword getNameKeyword_11_1_0() { return cNameKeyword_11_1_0; }
		
		//appName=STRING
		public Assignment getAppNameAssignment_11_1_1() { return cAppNameAssignment_11_1_1; }
		
		//STRING
		public RuleCall getAppNameSTRINGTerminalRuleCall_11_1_1_0() { return cAppNameSTRINGTerminalRuleCall_11_1_1_0; }
		
		//('label' appLabel=STRING)?
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//'label'
		public Keyword getLabelKeyword_11_2_0() { return cLabelKeyword_11_2_0; }
		
		//appLabel=STRING
		public Assignment getAppLabelAssignment_11_2_1() { return cAppLabelAssignment_11_2_1; }
		
		//STRING
		public RuleCall getAppLabelSTRINGTerminalRuleCall_11_2_1_0() { return cAppLabelSTRINGTerminalRuleCall_11_2_1_0; }
		
		//useAccelerometer?='useAccelerometer'?
		public Assignment getUseAccelerometerAssignment_12() { return cUseAccelerometerAssignment_12; }
		
		//'useAccelerometer'
		public Keyword getUseAccelerometerUseAccelerometerKeyword_12_0() { return cUseAccelerometerUseAccelerometerKeyword_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class GamePlatformConfigIOSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatformConfigIOS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGamePlatformConfigIOSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIosKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUseAccelerometerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cUseAccelerometerUseAccelerometerKeyword_3_0 = (Keyword)cUseAccelerometerAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GamePlatformConfigIOS:
		//	{GamePlatformConfigIOS}
		//	'ios' '{'
		//	useAccelerometer?='useAccelerometer'? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GamePlatformConfigIOS} 'ios' '{' useAccelerometer?='useAccelerometer'? '}'
		public Group getGroup() { return cGroup; }
		
		//{GamePlatformConfigIOS}
		public Action getGamePlatformConfigIOSAction_0() { return cGamePlatformConfigIOSAction_0; }
		
		//'ios'
		public Keyword getIosKeyword_1() { return cIosKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//useAccelerometer?='useAccelerometer'?
		public Assignment getUseAccelerometerAssignment_3() { return cUseAccelerometerAssignment_3; }
		
		//'useAccelerometer'
		public Keyword getUseAccelerometerUseAccelerometerKeyword_3_0() { return cUseAccelerometerUseAccelerometerKeyword_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GamePlatformConfigIOSMOEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatformConfigIOSMOE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGamePlatformConfigIOSMOEAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIosmoeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUseAccelerometerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cUseAccelerometerUseAccelerometerKeyword_3_0 = (Keyword)cUseAccelerometerAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GamePlatformConfigIOSMOE:
		//	{GamePlatformConfigIOSMOE}
		//	'iosmoe' '{'
		//	useAccelerometer?='useAccelerometer'? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GamePlatformConfigIOSMOE} 'iosmoe' '{' useAccelerometer?='useAccelerometer'? '}'
		public Group getGroup() { return cGroup; }
		
		//{GamePlatformConfigIOSMOE}
		public Action getGamePlatformConfigIOSMOEAction_0() { return cGamePlatformConfigIOSMOEAction_0; }
		
		//'iosmoe'
		public Keyword getIosmoeKeyword_1() { return cIosmoeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//useAccelerometer?='useAccelerometer'?
		public Assignment getUseAccelerometerAssignment_3() { return cUseAccelerometerAssignment_3; }
		
		//'useAccelerometer'
		public Keyword getUseAccelerometerUseAccelerometerKeyword_3_0() { return cUseAccelerometerUseAccelerometerKeyword_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GamePlatformConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatformConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPlatformAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPlatformGamePlatformEnumRuleCall_1_0 = (RuleCall)cPlatformAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConfigAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConfigGamePlatformConfigAndroidParserRuleCall_3_0 = (RuleCall)cConfigAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GamePlatformConfiguration:
		//	'configure' platform=GamePlatform '{' config+=GamePlatformConfigAndroid* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'configure' platform=GamePlatform '{' config+=GamePlatformConfigAndroid* '}'
		public Group getGroup() { return cGroup; }
		
		//'configure'
		public Keyword getConfigureKeyword_0() { return cConfigureKeyword_0; }
		
		//platform=GamePlatform
		public Assignment getPlatformAssignment_1() { return cPlatformAssignment_1; }
		
		//GamePlatform
		public RuleCall getPlatformGamePlatformEnumRuleCall_1_0() { return cPlatformGamePlatformEnumRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//config+=GamePlatformConfigAndroid*
		public Assignment getConfigAssignment_3() { return cConfigAssignment_3; }
		
		//GamePlatformConfigAndroid
		public RuleCall getConfigGamePlatformConfigAndroidParserRuleCall_3_0() { return cConfigGamePlatformConfigAndroidParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GameRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGameRootAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWidthKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWidthAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWidthINTTerminalRuleCall_4_0 = (RuleCall)cWidthAssignment_4.eContents().get(0);
		private final Keyword cHeightKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHeightAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHeightINTTerminalRuleCall_6_0 = (RuleCall)cHeightAssignment_6.eContents().get(0);
		private final Keyword cTitleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTitleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTitleSTRINGTerminalRuleCall_8_0 = (RuleCall)cTitleAssignment_8.eContents().get(0);
		private final Keyword cPixelPerMeterKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPpmAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPpmINTTerminalRuleCall_10_0 = (RuleCall)cPpmAssignment_10.eContents().get(0);
		private final Keyword cScenesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cScenesAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cScenesGameSceneParserRuleCall_13_0 = (RuleCall)cScenesAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cScreensKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cScreensAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cScreensGameScreenParserRuleCall_17_0 = (RuleCall)cScreensAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//GameRoot:
		//	{GameRoot} 'game' name=ID
		//	'width' width=INT 'height' height=INT 'title' title=STRING 'pixelPerMeter' ppm=INT
		//	'scenes' '{' scenes+=GameScene* '}'
		//	'screens' '{' screens+=GameScreen* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GameRoot} 'game' name=ID 'width' width=INT 'height' height=INT 'title' title=STRING 'pixelPerMeter' ppm=INT 'scenes'
		//'{' scenes+=GameScene* '}' 'screens' '{' screens+=GameScreen* '}'
		public Group getGroup() { return cGroup; }
		
		//{GameRoot}
		public Action getGameRootAction_0() { return cGameRootAction_0; }
		
		//'game'
		public Keyword getGameKeyword_1() { return cGameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'width'
		public Keyword getWidthKeyword_3() { return cWidthKeyword_3; }
		
		//width=INT
		public Assignment getWidthAssignment_4() { return cWidthAssignment_4; }
		
		//INT
		public RuleCall getWidthINTTerminalRuleCall_4_0() { return cWidthINTTerminalRuleCall_4_0; }
		
		//'height'
		public Keyword getHeightKeyword_5() { return cHeightKeyword_5; }
		
		//height=INT
		public Assignment getHeightAssignment_6() { return cHeightAssignment_6; }
		
		//INT
		public RuleCall getHeightINTTerminalRuleCall_6_0() { return cHeightINTTerminalRuleCall_6_0; }
		
		//'title'
		public Keyword getTitleKeyword_7() { return cTitleKeyword_7; }
		
		//title=STRING
		public Assignment getTitleAssignment_8() { return cTitleAssignment_8; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_8_0() { return cTitleSTRINGTerminalRuleCall_8_0; }
		
		//'pixelPerMeter'
		public Keyword getPixelPerMeterKeyword_9() { return cPixelPerMeterKeyword_9; }
		
		//ppm=INT
		public Assignment getPpmAssignment_10() { return cPpmAssignment_10; }
		
		//INT
		public RuleCall getPpmINTTerminalRuleCall_10_0() { return cPpmINTTerminalRuleCall_10_0; }
		
		//'scenes'
		public Keyword getScenesKeyword_11() { return cScenesKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//scenes+=GameScene*
		public Assignment getScenesAssignment_13() { return cScenesAssignment_13; }
		
		//GameScene
		public RuleCall getScenesGameSceneParserRuleCall_13_0() { return cScenesGameSceneParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'screens'
		public Keyword getScreensKeyword_15() { return cScreensKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//screens+=GameScreen*
		public Assignment getScreensAssignment_17() { return cScreensAssignment_17; }
		
		//GameScreen
		public RuleCall getScreensGameScreenParserRuleCall_17_0() { return cScreensGameScreenParserRuleCall_17_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class GameScreenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameScreen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGameScreenAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cScreenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cAtlasKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAtlasNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAtlasNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cAtlasNameAssignment_4.eContents().get(0);
		
		//GameScreen:
		//	{GameScreen} 'screen' name=ID 'atlas' atlasName=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//{GameScreen} 'screen' name=ID 'atlas' atlasName=STRING
		public Group getGroup() { return cGroup; }
		
		//{GameScreen}
		public Action getGameScreenAction_0() { return cGameScreenAction_0; }
		
		//'screen'
		public Keyword getScreenKeyword_1() { return cScreenKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'atlas'
		public Keyword getAtlasKeyword_3() { return cAtlasKeyword_3; }
		
		//atlasName=STRING
		public Assignment getAtlasNameAssignment_4() { return cAtlasNameAssignment_4; }
		
		//STRING
		public RuleCall getAtlasNameSTRINGTerminalRuleCall_4_0() { return cAtlasNameSTRINGTerminalRuleCall_4_0; }
	}
	public class GameSceneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameScene");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGameSceneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSceneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cHasScoreAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cHasScoreHasScoreKeyword_3_0_0 = (Keyword)cHasScoreAssignment_3_0.eContents().get(0);
		private final Assignment cScoreAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cScoreGameScoreParserRuleCall_3_1_0 = (RuleCall)cScoreAssignment_3_1.eContents().get(0);
		
		//GameScene:
		//	{GameScene} 'scene' name=ID (hasScore?='hasScore' score=GameScore)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{GameScene} 'scene' name=ID (hasScore?='hasScore' score=GameScore)?
		public Group getGroup() { return cGroup; }
		
		//{GameScene}
		public Action getGameSceneAction_0() { return cGameSceneAction_0; }
		
		//'scene'
		public Keyword getSceneKeyword_1() { return cSceneKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(hasScore?='hasScore' score=GameScore)?
		public Group getGroup_3() { return cGroup_3; }
		
		//hasScore?='hasScore'
		public Assignment getHasScoreAssignment_3_0() { return cHasScoreAssignment_3_0; }
		
		//'hasScore'
		public Keyword getHasScoreHasScoreKeyword_3_0_0() { return cHasScoreHasScoreKeyword_3_0_0; }
		
		//score=GameScore
		public Assignment getScoreAssignment_3_1() { return cScoreAssignment_3_1; }
		
		//GameScore
		public RuleCall getScoreGameScoreParserRuleCall_3_1_0() { return cScoreGameScoreParserRuleCall_3_1_0; }
	}
	public class GameScoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameScore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGameScoreAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTopPaddingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTopPaddingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTopPaddingINTTerminalRuleCall_2_0 = (RuleCall)cTopPaddingAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDisplaysAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDisplaysGameDisplayParserRuleCall_4_0 = (RuleCall)cDisplaysAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//GameScore:
		//	{GameScore} 'topPadding' topPadding=INT
		//	'{' displays+=GameDisplay* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GameScore} 'topPadding' topPadding=INT '{' displays+=GameDisplay* '}'
		public Group getGroup() { return cGroup; }
		
		//{GameScore}
		public Action getGameScoreAction_0() { return cGameScoreAction_0; }
		
		//'topPadding'
		public Keyword getTopPaddingKeyword_1() { return cTopPaddingKeyword_1; }
		
		//topPadding=INT
		public Assignment getTopPaddingAssignment_2() { return cTopPaddingAssignment_2; }
		
		//INT
		public RuleCall getTopPaddingINTTerminalRuleCall_2_0() { return cTopPaddingINTTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//displays+=GameDisplay*
		public Assignment getDisplaysAssignment_4() { return cDisplaysAssignment_4; }
		
		//GameDisplay
		public RuleCall getDisplaysGameDisplayParserRuleCall_4_0() { return cDisplaysGameDisplayParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class GameDisplayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameDisplay");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGameDisplayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisplayKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cValueTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeGameDisplayValueTypeEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cFormatKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFormatAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFormatSTRINGTerminalRuleCall_6_0 = (RuleCall)cFormatAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cHasInitialAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cHasInitialInitialValueKeyword_7_0_0 = (Keyword)cHasInitialAssignment_7_0.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Assignment cInitialNumberValueAssignment_7_1_0 = (Assignment)cAlternatives_7_1.eContents().get(0);
		private final RuleCall cInitialNumberValueSignedNumberParserRuleCall_7_1_0_0 = (RuleCall)cInitialNumberValueAssignment_7_1_0.eContents().get(0);
		private final Assignment cInitialIntValueAssignment_7_1_1 = (Assignment)cAlternatives_7_1.eContents().get(1);
		private final RuleCall cInitialIntValueINTTerminalRuleCall_7_1_1_0 = (RuleCall)cInitialIntValueAssignment_7_1_1.eContents().get(0);
		private final Assignment cInitialStringValueAssignment_7_1_2 = (Assignment)cAlternatives_7_1.eContents().get(2);
		private final RuleCall cInitialStringValueSTRINGTerminalRuleCall_7_1_2_0 = (RuleCall)cInitialStringValueAssignment_7_1_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cHasDeltaAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cHasDeltaDeltaValueKeyword_8_0_0 = (Keyword)cHasDeltaAssignment_8_0.eContents().get(0);
		private final Assignment cDeltaValueAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cDeltaValueSignedNumberParserRuleCall_8_1_0 = (RuleCall)cDeltaValueAssignment_8_1.eContents().get(0);
		private final Keyword cEachTimePeriodKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cTimePeriodAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cTimePeriodUnsignedNumberParserRuleCall_8_3_0 = (RuleCall)cTimePeriodAssignment_8_3.eContents().get(0);
		private final Assignment cHasAdderAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cHasAdderAddValueKeyword_9_0 = (Keyword)cHasAdderAssignment_9.eContents().get(0);
		private final Assignment cHasSetterAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cHasSetterSetValueKeyword_10_0 = (Keyword)cHasSetterAssignment_10.eContents().get(0);
		
		//GameDisplay:
		//	{GameDisplay} 'display' name=ID
		//	'valueType' type=GameDisplayValueType
		//	'format' format=STRING (hasInitial?='initialValue' (initialNumberValue=SignedNumber | initialIntValue=INT |
		//	initialStringValue=STRING))? (hasDelta?='deltaValue' deltaValue=SignedNumber 'eachTimePeriod'
		//	timePeriod=UnsignedNumber)?
		//	hasAdder?='addValue'?
		//	hasSetter?='setValue'?;
		@Override public ParserRule getRule() { return rule; }
		
		//{GameDisplay} 'display' name=ID 'valueType' type=GameDisplayValueType 'format' format=STRING (hasInitial?='initialValue'
		//(initialNumberValue=SignedNumber | initialIntValue=INT | initialStringValue=STRING))? (hasDelta?='deltaValue'
		//deltaValue=SignedNumber 'eachTimePeriod' timePeriod=UnsignedNumber)? hasAdder?='addValue'? hasSetter?='setValue'?
		public Group getGroup() { return cGroup; }
		
		//{GameDisplay}
		public Action getGameDisplayAction_0() { return cGameDisplayAction_0; }
		
		//'display'
		public Keyword getDisplayKeyword_1() { return cDisplayKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'valueType'
		public Keyword getValueTypeKeyword_3() { return cValueTypeKeyword_3; }
		
		//type=GameDisplayValueType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//GameDisplayValueType
		public RuleCall getTypeGameDisplayValueTypeEnumRuleCall_4_0() { return cTypeGameDisplayValueTypeEnumRuleCall_4_0; }
		
		//'format'
		public Keyword getFormatKeyword_5() { return cFormatKeyword_5; }
		
		//format=STRING
		public Assignment getFormatAssignment_6() { return cFormatAssignment_6; }
		
		//STRING
		public RuleCall getFormatSTRINGTerminalRuleCall_6_0() { return cFormatSTRINGTerminalRuleCall_6_0; }
		
		//(hasInitial?='initialValue' (initialNumberValue=SignedNumber | initialIntValue=INT | initialStringValue=STRING))?
		public Group getGroup_7() { return cGroup_7; }
		
		//hasInitial?='initialValue'
		public Assignment getHasInitialAssignment_7_0() { return cHasInitialAssignment_7_0; }
		
		//'initialValue'
		public Keyword getHasInitialInitialValueKeyword_7_0_0() { return cHasInitialInitialValueKeyword_7_0_0; }
		
		//initialNumberValue=SignedNumber | initialIntValue=INT | initialStringValue=STRING
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }
		
		//initialNumberValue=SignedNumber
		public Assignment getInitialNumberValueAssignment_7_1_0() { return cInitialNumberValueAssignment_7_1_0; }
		
		//SignedNumber
		public RuleCall getInitialNumberValueSignedNumberParserRuleCall_7_1_0_0() { return cInitialNumberValueSignedNumberParserRuleCall_7_1_0_0; }
		
		//initialIntValue=INT
		public Assignment getInitialIntValueAssignment_7_1_1() { return cInitialIntValueAssignment_7_1_1; }
		
		//INT
		public RuleCall getInitialIntValueINTTerminalRuleCall_7_1_1_0() { return cInitialIntValueINTTerminalRuleCall_7_1_1_0; }
		
		//initialStringValue=STRING
		public Assignment getInitialStringValueAssignment_7_1_2() { return cInitialStringValueAssignment_7_1_2; }
		
		//STRING
		public RuleCall getInitialStringValueSTRINGTerminalRuleCall_7_1_2_0() { return cInitialStringValueSTRINGTerminalRuleCall_7_1_2_0; }
		
		//(hasDelta?='deltaValue' deltaValue=SignedNumber 'eachTimePeriod' timePeriod=UnsignedNumber)?
		public Group getGroup_8() { return cGroup_8; }
		
		//hasDelta?='deltaValue'
		public Assignment getHasDeltaAssignment_8_0() { return cHasDeltaAssignment_8_0; }
		
		//'deltaValue'
		public Keyword getHasDeltaDeltaValueKeyword_8_0_0() { return cHasDeltaDeltaValueKeyword_8_0_0; }
		
		//deltaValue=SignedNumber
		public Assignment getDeltaValueAssignment_8_1() { return cDeltaValueAssignment_8_1; }
		
		//SignedNumber
		public RuleCall getDeltaValueSignedNumberParserRuleCall_8_1_0() { return cDeltaValueSignedNumberParserRuleCall_8_1_0; }
		
		//'eachTimePeriod'
		public Keyword getEachTimePeriodKeyword_8_2() { return cEachTimePeriodKeyword_8_2; }
		
		//timePeriod=UnsignedNumber
		public Assignment getTimePeriodAssignment_8_3() { return cTimePeriodAssignment_8_3; }
		
		//UnsignedNumber
		public RuleCall getTimePeriodUnsignedNumberParserRuleCall_8_3_0() { return cTimePeriodUnsignedNumberParserRuleCall_8_3_0; }
		
		//hasAdder?='addValue'?
		public Assignment getHasAdderAssignment_9() { return cHasAdderAssignment_9; }
		
		//'addValue'
		public Keyword getHasAdderAddValueKeyword_9_0() { return cHasAdderAddValueKeyword_9_0; }
		
		//hasSetter?='setValue'?
		public Assignment getHasSetterAssignment_10() { return cHasSetterAssignment_10; }
		
		//'setValue'
		public Keyword getHasSetterSetValueKeyword_10_0() { return cHasSetterSetValueKeyword_10_0; }
	}
	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.ValidID");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValidID:
		//	ID;
		@Override public ParserRule getRule() { return rule; }
		
		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValidIDParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cValidIDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ValidID (=> '.' ValidID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ValidID (=> '.' ValidID)*
		public Group getGroup() { return cGroup; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_0() { return cValidIDParserRuleCall_0; }
		
		//(=> '.' ValidID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//=> '.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_1_1() { return cValidIDParserRuleCall_1_1; }
	}
	public class SignedNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.SignedNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUnsignedNumberParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SignedNumber ecore::EFloat:
		//	'-'? UnsignedNumber;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? UnsignedNumber
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//UnsignedNumber
		public RuleCall getUnsignedNumberParserRuleCall_1() { return cUnsignedNumberParserRuleCall_1; }
	}
	public class UnsignedNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.UnsignedNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//UnsignedNumber ecore::EFloat:
		//	INT ('.' INT);
		@Override public ParserRule getRule() { return rule; }
		
		//INT ('.' INT)
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.' INT
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}
	public class GameQualifiedNameWithWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameQualifiedNameWithWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//GameQualifiedNameWithWildCard:
		//	QualifiedName ('.' '*')?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName ('.' '*')?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//('.' '*')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	
	public class GameDisplayValueTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameDisplayValueType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIntNumberKeyword_0_0 = (Keyword)cIntEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFloatDecimalKeyword_1_0 = (Keyword)cFloatEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cStringTextKeyword_2_0 = (Keyword)cStringEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum GameDisplayValueType:
		//	int='number' |
		//	float='decimal' |
		//	String='text';
		public EnumRule getRule() { return rule; }
		
		//int='number' | float='decimal' | String='text'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//int='number'
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_0() { return cIntEnumLiteralDeclaration_0; }
		
		//'number'
		public Keyword getIntNumberKeyword_0_0() { return cIntNumberKeyword_0_0; }
		
		//float='decimal'
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_1() { return cFloatEnumLiteralDeclaration_1; }
		
		//'decimal'
		public Keyword getFloatDecimalKeyword_1_0() { return cFloatDecimalKeyword_1_0; }
		
		//String='text'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_2() { return cStringEnumLiteralDeclaration_2; }
		
		//'text'
		public Keyword getStringTextKeyword_2_0() { return cStringTextKeyword_2_0; }
	}
	public class GamePlatformElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GamePlatform");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndroidEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndroidAndroidKeyword_0_0 = (Keyword)cAndroidEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDesktopEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDesktopDesktopKeyword_1_0 = (Keyword)cDesktopEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHtmlEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHtmlHtmlKeyword_2_0 = (Keyword)cHtmlEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIosEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIosIosKeyword_3_0 = (Keyword)cIosEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cIosmoeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cIosmoeIosMoeKeyword_4_0 = (Keyword)cIosmoeEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum GamePlatform:
		//	android |
		//	desktop |
		//	html |
		//	ios |
		//	iosmoe='ios-moe';
		public EnumRule getRule() { return rule; }
		
		//android | desktop | html | ios | iosmoe='ios-moe'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//android
		public EnumLiteralDeclaration getAndroidEnumLiteralDeclaration_0() { return cAndroidEnumLiteralDeclaration_0; }
		
		//'android'
		public Keyword getAndroidAndroidKeyword_0_0() { return cAndroidAndroidKeyword_0_0; }
		
		//desktop
		public EnumLiteralDeclaration getDesktopEnumLiteralDeclaration_1() { return cDesktopEnumLiteralDeclaration_1; }
		
		//'desktop'
		public Keyword getDesktopDesktopKeyword_1_0() { return cDesktopDesktopKeyword_1_0; }
		
		//html
		public EnumLiteralDeclaration getHtmlEnumLiteralDeclaration_2() { return cHtmlEnumLiteralDeclaration_2; }
		
		//'html'
		public Keyword getHtmlHtmlKeyword_2_0() { return cHtmlHtmlKeyword_2_0; }
		
		//ios
		public EnumLiteralDeclaration getIosEnumLiteralDeclaration_3() { return cIosEnumLiteralDeclaration_3; }
		
		//'ios'
		public Keyword getIosIosKeyword_3_0() { return cIosIosKeyword_3_0; }
		
		//iosmoe='ios-moe'
		public EnumLiteralDeclaration getIosmoeEnumLiteralDeclaration_4() { return cIosmoeEnumLiteralDeclaration_4; }
		
		//'ios-moe'
		public Keyword getIosmoeIosMoeKeyword_4_0() { return cIosmoeIosMoeKeyword_4_0; }
	}
	public class GameScreenOrientationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.hypermodel.games.engine.GameDSL.GameScreenOrientation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLandscapeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLandscapeLandscapeKeyword_0_0 = (Keyword)cLandscapeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPortraitEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPortraitPortaitKeyword_1_0 = (Keyword)cPortraitEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum GameScreenOrientation:
		//	landscape |
		//	portrait='portait';
		public EnumRule getRule() { return rule; }
		
		//landscape | portrait='portait'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//landscape
		public EnumLiteralDeclaration getLandscapeEnumLiteralDeclaration_0() { return cLandscapeEnumLiteralDeclaration_0; }
		
		//'landscape'
		public Keyword getLandscapeLandscapeKeyword_0_0() { return cLandscapeLandscapeKeyword_0_0; }
		
		//portrait='portait'
		public EnumLiteralDeclaration getPortraitEnumLiteralDeclaration_1() { return cPortraitEnumLiteralDeclaration_1; }
		
		//'portait'
		public Keyword getPortraitPortaitKeyword_1_0() { return cPortraitPortaitKeyword_1_0; }
	}
	
	private final GameModelElements pGameModel;
	private final GameImportElements pGameImport;
	private final GamePackageElements pGamePackage;
	private final GamePlatformConfigElements pGamePlatformConfig;
	private final GamePlatformConfigAndroidElements pGamePlatformConfigAndroid;
	private final GamePlatformConfigIOSElements pGamePlatformConfigIOS;
	private final GamePlatformConfigIOSMOEElements pGamePlatformConfigIOSMOE;
	private final GamePlatformConfigurationElements pGamePlatformConfiguration;
	private final GameRootElements pGameRoot;
	private final GameScreenElements pGameScreen;
	private final GameSceneElements pGameScene;
	private final GameScoreElements pGameScore;
	private final GameDisplayElements pGameDisplay;
	private final GameDisplayValueTypeElements eGameDisplayValueType;
	private final ValidIDElements pValidID;
	private final QualifiedNameElements pQualifiedName;
	private final SignedNumberElements pSignedNumber;
	private final UnsignedNumberElements pUnsignedNumber;
	private final GameQualifiedNameWithWildCardElements pGameQualifiedNameWithWildCard;
	private final GamePlatformElements eGamePlatform;
	private final GameScreenOrientationElements eGameScreenOrientation;
	
	private final Grammar grammar;
	
	private final XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations;
	
	private final XbaseGrammarAccess gaXbase;
	
	private final XtypeGrammarAccess gaXtype;

	@Inject
	public GameDSLGrammarAccess(GrammarProvider grammarProvider,
			XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations,
			XbaseGrammarAccess gaXbase,
			XtypeGrammarAccess gaXtype) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbaseWithAnnotations = gaXbaseWithAnnotations;
		this.gaXbase = gaXbase;
		this.gaXtype = gaXtype;
		this.pGameModel = new GameModelElements();
		this.pGameImport = new GameImportElements();
		this.pGamePackage = new GamePackageElements();
		this.pGamePlatformConfig = new GamePlatformConfigElements();
		this.pGamePlatformConfigAndroid = new GamePlatformConfigAndroidElements();
		this.pGamePlatformConfigIOS = new GamePlatformConfigIOSElements();
		this.pGamePlatformConfigIOSMOE = new GamePlatformConfigIOSMOEElements();
		this.pGamePlatformConfiguration = new GamePlatformConfigurationElements();
		this.pGameRoot = new GameRootElements();
		this.pGameScreen = new GameScreenElements();
		this.pGameScene = new GameSceneElements();
		this.pGameScore = new GameScoreElements();
		this.pGameDisplay = new GameDisplayElements();
		this.eGameDisplayValueType = new GameDisplayValueTypeElements();
		this.pValidID = new ValidIDElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pSignedNumber = new SignedNumberElements();
		this.pUnsignedNumber = new UnsignedNumberElements();
		this.pGameQualifiedNameWithWildCard = new GameQualifiedNameWithWildCardElements();
		this.eGamePlatform = new GamePlatformElements();
		this.eGameScreenOrientation = new GameScreenOrientationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.hypermodel.games.engine.GameDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public XbaseWithAnnotationsGrammarAccess getXbaseWithAnnotationsGrammarAccess() {
		return gaXbaseWithAnnotations;
	}
	
	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}
	
	public XtypeGrammarAccess getXtypeGrammarAccess() {
		return gaXtype;
	}

	
	//GameModel:
	//	packages+=GamePackage*;
	public GameModelElements getGameModelAccess() {
		return pGameModel;
	}
	
	public ParserRule getGameModelRule() {
		return getGameModelAccess().getRule();
	}
	
	//GameImport:
	//	'import' importedNamespace=GameQualifiedNameWithWildCard;
	public GameImportElements getGameImportAccess() {
		return pGameImport;
	}
	
	public ParserRule getGameImportRule() {
		return getGameImportAccess().getRule();
	}
	
	//GamePackage:
	//	'package' name=QualifiedName '{'
	//	imports+=GameImport*
	//	config=GamePlatformConfig
	//	games+=GameRoot*
	//	'}';
	public GamePackageElements getGamePackageAccess() {
		return pGamePackage;
	}
	
	public ParserRule getGamePackageRule() {
		return getGamePackageAccess().getRule();
	}
	
	//GamePlatformConfig:
	//	{GamePlatformConfig}
	//	'configuration' '{'
	//	android=GamePlatformConfigAndroid
	//	ios=GamePlatformConfigIOS
	//	iosmoe=GamePlatformConfigIOSMOE
	//	'}';
	public GamePlatformConfigElements getGamePlatformConfigAccess() {
		return pGamePlatformConfig;
	}
	
	public ParserRule getGamePlatformConfigRule() {
		return getGamePlatformConfigAccess().getRule();
	}
	
	//GamePlatformConfigAndroid:
	//	{GamePlatformConfigAndroid}
	//	'android' '{'
	//	'minAndroidVersion' minAndroidVersion=INT
	//	'targetAndroidVersion' targetAndroidVersion=INT
	//	'SDKApiLevel' apiLevel=INT
	//	'orientation' orientation=GameScreenOrientation (('icon' appIcon=STRING)? & ('name' appName=STRING)? & ('label'
	//	appLabel=STRING)?) useAccelerometer?='useAccelerometer'?
	//	'}';
	public GamePlatformConfigAndroidElements getGamePlatformConfigAndroidAccess() {
		return pGamePlatformConfigAndroid;
	}
	
	public ParserRule getGamePlatformConfigAndroidRule() {
		return getGamePlatformConfigAndroidAccess().getRule();
	}
	
	//GamePlatformConfigIOS:
	//	{GamePlatformConfigIOS}
	//	'ios' '{'
	//	useAccelerometer?='useAccelerometer'? '}';
	public GamePlatformConfigIOSElements getGamePlatformConfigIOSAccess() {
		return pGamePlatformConfigIOS;
	}
	
	public ParserRule getGamePlatformConfigIOSRule() {
		return getGamePlatformConfigIOSAccess().getRule();
	}
	
	//GamePlatformConfigIOSMOE:
	//	{GamePlatformConfigIOSMOE}
	//	'iosmoe' '{'
	//	useAccelerometer?='useAccelerometer'? '}';
	public GamePlatformConfigIOSMOEElements getGamePlatformConfigIOSMOEAccess() {
		return pGamePlatformConfigIOSMOE;
	}
	
	public ParserRule getGamePlatformConfigIOSMOERule() {
		return getGamePlatformConfigIOSMOEAccess().getRule();
	}
	
	//GamePlatformConfiguration:
	//	'configure' platform=GamePlatform '{' config+=GamePlatformConfigAndroid* '}';
	public GamePlatformConfigurationElements getGamePlatformConfigurationAccess() {
		return pGamePlatformConfiguration;
	}
	
	public ParserRule getGamePlatformConfigurationRule() {
		return getGamePlatformConfigurationAccess().getRule();
	}
	
	//GameRoot:
	//	{GameRoot} 'game' name=ID
	//	'width' width=INT 'height' height=INT 'title' title=STRING 'pixelPerMeter' ppm=INT
	//	'scenes' '{' scenes+=GameScene* '}'
	//	'screens' '{' screens+=GameScreen* '}';
	public GameRootElements getGameRootAccess() {
		return pGameRoot;
	}
	
	public ParserRule getGameRootRule() {
		return getGameRootAccess().getRule();
	}
	
	//GameScreen:
	//	{GameScreen} 'screen' name=ID 'atlas' atlasName=STRING;
	public GameScreenElements getGameScreenAccess() {
		return pGameScreen;
	}
	
	public ParserRule getGameScreenRule() {
		return getGameScreenAccess().getRule();
	}
	
	//GameScene:
	//	{GameScene} 'scene' name=ID (hasScore?='hasScore' score=GameScore)?;
	public GameSceneElements getGameSceneAccess() {
		return pGameScene;
	}
	
	public ParserRule getGameSceneRule() {
		return getGameSceneAccess().getRule();
	}
	
	//GameScore:
	//	{GameScore} 'topPadding' topPadding=INT
	//	'{' displays+=GameDisplay* '}';
	public GameScoreElements getGameScoreAccess() {
		return pGameScore;
	}
	
	public ParserRule getGameScoreRule() {
		return getGameScoreAccess().getRule();
	}
	
	//GameDisplay:
	//	{GameDisplay} 'display' name=ID
	//	'valueType' type=GameDisplayValueType
	//	'format' format=STRING (hasInitial?='initialValue' (initialNumberValue=SignedNumber | initialIntValue=INT |
	//	initialStringValue=STRING))? (hasDelta?='deltaValue' deltaValue=SignedNumber 'eachTimePeriod'
	//	timePeriod=UnsignedNumber)?
	//	hasAdder?='addValue'?
	//	hasSetter?='setValue'?;
	public GameDisplayElements getGameDisplayAccess() {
		return pGameDisplay;
	}
	
	public ParserRule getGameDisplayRule() {
		return getGameDisplayAccess().getRule();
	}
	
	//enum GameDisplayValueType:
	//	int='number' |
	//	float='decimal' |
	//	String='text';
	public GameDisplayValueTypeElements getGameDisplayValueTypeAccess() {
		return eGameDisplayValueType;
	}
	
	public EnumRule getGameDisplayValueTypeRule() {
		return getGameDisplayValueTypeAccess().getRule();
	}
	
	//ValidID:
	//	ID;
	public ValidIDElements getValidIDAccess() {
		return pValidID;
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//QualifiedName:
	//	ValidID (=> '.' ValidID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//SignedNumber ecore::EFloat:
	//	'-'? UnsignedNumber;
	public SignedNumberElements getSignedNumberAccess() {
		return pSignedNumber;
	}
	
	public ParserRule getSignedNumberRule() {
		return getSignedNumberAccess().getRule();
	}
	
	//UnsignedNumber ecore::EFloat:
	//	INT ('.' INT);
	public UnsignedNumberElements getUnsignedNumberAccess() {
		return pUnsignedNumber;
	}
	
	public ParserRule getUnsignedNumberRule() {
		return getUnsignedNumberAccess().getRule();
	}
	
	//GameQualifiedNameWithWildCard:
	//	QualifiedName ('.' '*')?;
	public GameQualifiedNameWithWildCardElements getGameQualifiedNameWithWildCardAccess() {
		return pGameQualifiedNameWithWildCard;
	}
	
	public ParserRule getGameQualifiedNameWithWildCardRule() {
		return getGameQualifiedNameWithWildCardAccess().getRule();
	}
	
	//enum GamePlatform:
	//	android |
	//	desktop |
	//	html |
	//	ios |
	//	iosmoe='ios-moe';
	public GamePlatformElements getGamePlatformAccess() {
		return eGamePlatform;
	}
	
	public EnumRule getGamePlatformRule() {
		return getGamePlatformAccess().getRule();
	}
	
	//enum GameScreenOrientation:
	//	landscape |
	//	portrait='portait';
	public GameScreenOrientationElements getGameScreenOrientationAccess() {
		return eGameScreenOrientation;
	}
	
	public EnumRule getGameScreenOrientationRule() {
		return getGameScreenOrientationAccess().getRule();
	}
	
	//XAnnotation:
	//	{XAnnotation} '@' annotationType=[types::JvmAnnotationType|super::QualifiedName] (=> '('
	//	(elementValuePairs+=XAnnotationElementValuePair (',' elementValuePairs+=XAnnotationElementValuePair)* |
	//	value=XAnnotationElementValueOrCommaList)? ')')?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}
	
	//XAnnotationElementValuePair:
	//	=> (element=[types::JvmOperation|super::ValidID] '=') value=XAnnotationElementValue;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}
	
	//XAnnotationElementValueOrCommaList xbase::XExpression:
	//	=> ({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression)*)? ']'
	//	| XAnnotationOrExpression ({xbase::XListLiteral.elements+=current} (',' elements+=XAnnotationOrExpression)+)?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueOrCommaListElements getXAnnotationElementValueOrCommaListAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueOrCommaListAccess();
	}
	
	public ParserRule getXAnnotationElementValueOrCommaListRule() {
		return getXAnnotationElementValueOrCommaListAccess().getRule();
	}
	
	//XAnnotationElementValue xbase::XExpression:
	//	=> ({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression)*)? ']'
	//	| XAnnotationOrExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}
	
	//XAnnotationOrExpression xbase::XExpression:
	//	XAnnotation | XExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationOrExpressionElements getXAnnotationOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXAnnotationOrExpressionAccess();
	}
	
	public ParserRule getXAnnotationOrExpressionRule() {
		return getXAnnotationOrExpressionAccess().getRule();
	}
	
	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}
	
	//XAssignment XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}
	
	//OpSingleAssign:
	//	'=';
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}
	
	//OpMultiAssign:
	//	'+=' | '-=' | '*=' | '/=' | '%=' | '<' '<' '=' | '>' '>'? '>=';
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}
	
	//XOrExpression XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}
	
	//OpOr:
	//	'||';
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}
	
	//XAndExpression XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}
	
	//OpAnd:
	//	'&&';
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}
	
	//XEqualityExpression XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}
	
	//OpEquality:
	//	'==' | '!=' | '===' | '!==';
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}
	
	//XRelationalExpression XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} 'instanceof') type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}
	
	//OpCompare:
	//	'>=' | '<' '=' | '>' | '<';
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}
	
	//XOtherOperatorExpression XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}
	
	//OpOther:
	//	'->' | '..<' | '>' '..' | '..' | '=>' | '>' (=> ('>' '>') | '>') | '<' (=> ('<' '<') | '<' | '=>') | '<>' | '?:';
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}
	
	//XAdditiveExpression XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}
	
	//OpAdd:
	//	'+' | '-';
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}
	
	//XMultiplicativeExpression XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}
	
	//OpMulti:
	//	'*' | '**' | '/' | '%';
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}
	
	//XUnaryOperation XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}
	
	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}
	
	//XCastedExpression XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} 'as') type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}
	
	//XPostfixOperation XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}
	
	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}
	
	//XMemberFeatureCall XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ('.' | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ('<'
	//	typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (memberCallArguments+=XShortClosure
	//	| memberCallArguments+=XExpression (',' memberCallArguments+=XExpression)*)? ')')? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}
	
	//XPrimaryExpression XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}
	
	//XLiteral XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}
	
	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}
	
	//XSetLiteral:
	//	{XSetLiteral} '#' '{' (elements+=XExpression (',' elements+=XExpression)*)? '}';
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}
	
	//XListLiteral:
	//	{XListLiteral} '#' '[' (elements+=XExpression (',' elements+=XExpression)*)? ']';
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}
	
	//XClosure XExpression:
	//	=> ({XClosure} '[') => ((declaredFormalParameters+=JvmFormalParameter (','
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?='|')? expression=XExpressionInClosure ']';
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}
	
	//XExpressionInClosure XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ';'?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}
	
	//XShortClosure XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?='|') expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}
	
	//XParenthesizedExpression XExpression:
	//	'(' XExpression ')';
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}
	
	//XIfExpression XExpression:
	//	{XIfExpression} 'if' '(' if=XExpression ')' then=XExpression (=> 'else' else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}
	
	//XSwitchExpression XExpression:
	//	{XSwitchExpression} 'switch' (=> ('(' declaredParam=JvmFormalParameter ':') switch=XExpression ')' | =>
	//	(declaredParam=JvmFormalParameter ':')? switch=XExpression) '{' cases+=XCasePart* ('default' ':'
	//	default=XExpression)? '}';
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}
	
	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ('case' case=XExpression)? (':' then=XExpression | fallThrough?=',');
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}
	
	//XForLoopExpression XExpression:
	//	=> ({XForLoopExpression} 'for' '(' declaredParam=JvmFormalParameter ':') forExpression=XExpression ')'
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}
	
	//XBasicForLoopExpression XExpression:
	//	{XBasicForLoopExpression} 'for' '(' (initExpressions+=XExpressionOrVarDeclaration (','
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ';' expression=XExpression? ';' (updateExpressions+=XExpression (','
	//	updateExpressions+=XExpression)*)? ')' eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}
	
	//XWhileExpression XExpression:
	//	{XWhileExpression} 'while' '(' predicate=XExpression ')' body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}
	
	//XDoWhileExpression XExpression:
	//	{XDoWhileExpression} 'do' body=XExpression 'while' '(' predicate=XExpression ')';
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}
	
	//XBlockExpression XExpression:
	//	{XBlockExpression} '{' (expressions+=XExpressionOrVarDeclaration ';'?)* '}';
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}
	
	//XExpressionOrVarDeclaration XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}
	
	//XVariableDeclaration XExpression:
	//	{XVariableDeclaration} (writeable?='var' | 'val') (=> (type=JvmTypeReference name=super::ValidID) |
	//	name=super::ValidID) ('=' right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}
	
	//JvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=super::ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}
	
	//FullJvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=super::ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}
	
	//XFeatureCall XExpression:
	//	{XFeatureCall} ('<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression (',' featureCallArguments+=XExpression)*)? ')')? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}
	
	//FeatureCallID:
	//	super::ValidID | 'extends' | 'static' | 'import' | 'extension';
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}
	
	//IdOrSuper:
	//	FeatureCallID | 'super';
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}
	
	//XConstructorCall XExpression:
	//	{XConstructorCall} 'new' constructor=[types::JvmConstructor|super::QualifiedName] (=> '<'
	//	typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')? (=>
	//	explicitConstructorCall?='(' (arguments+=XShortClosure | arguments+=XExpression (',' arguments+=XExpression)*)? ')')?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}
	
	//XBooleanLiteral XExpression:
	//	{XBooleanLiteral} ('false' | isTrue?='true');
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}
	
	//XNullLiteral XExpression:
	//	{XNullLiteral} 'null';
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}
	
	//XNumberLiteral XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}
	
	//XStringLiteral XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}
	
	//XTypeLiteral XExpression:
	//	{XTypeLiteral} 'typeof' '(' type=[types::JvmType|super::QualifiedName] arrayDimensions+=ArrayBrackets* ')';
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}
	
	//XThrowExpression XExpression:
	//	{XThrowExpression} 'throw' expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}
	
	//XReturnExpression XExpression:
	//	{XReturnExpression} 'return' -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}
	
	//XTryCatchFinallyExpression XExpression:
	//	{XTryCatchFinallyExpression} 'try' expression=XExpression (catchClauses+=XCatchClause+ (=> 'finally'
	//	finallyExpression=XExpression)? | 'finally' finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}
	
	//XSynchronizedExpression XExpression:
	//	=> ({XSynchronizedExpression} 'synchronized' '(') param=XExpression ')' expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}
	
	//XCatchClause:
	//	=> 'catch' '(' declaredParam=FullJvmFormalParameter ')' expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}
	
	//Number hidden():
	//	HEX | (INT | DECIMAL) ('.' (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	///**
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes,
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// */
	//StaticQualifier:
	//	(super::ValidID '::')+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}
	
	//terminal HEX:
	//	('0x' | '0X') ('0'..'9' | 'a'..'f' | 'A'..'F' | '_')+ ('#' (('b' | 'B') ('i' | 'I') | ('l' | 'L')))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9' ('0'..'9' | '_')*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	}
	
	//terminal DECIMAL:
	//	INT (('e' | 'E') ('+' | '-')? INT)? (('b' | 'B') ('i' | 'I' | 'd' | 'D') | ('l' | 'L' | 'd' | 'D' | 'f' | 'F'))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	}
	
	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXtype.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}
	
	//ArrayBrackets:
	//	'[' ']';
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXtype.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}
	
	//XFunctionTypeRef:
	//	('(' (paramTypes+=JvmTypeReference (',' paramTypes+=JvmTypeReference)*)? ')')? '=>' returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXtype.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}
	
	//JvmParameterizedTypeReference:
	//	type=[JvmType|super::QualifiedName] (=> '<' arguments+=JvmArgumentTypeReference (','
	//	arguments+=JvmArgumentTypeReference)* '>' (=> ({JvmInnerTypeReference.outer=current} '.')
	//	type=[JvmType|super::ValidID] (=> '<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)*
	//	'>')?)*)?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXtype.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}
	
	//JvmArgumentTypeReference JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXtype.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}
	
	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} '?' (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* |
	//	constraints+=JvmLowerBound constraints+=JvmLowerBoundAnded*)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXtype.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}
	
	//JvmUpperBound:
	//	'extends' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXtype.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}
	
	//JvmUpperBoundAnded JvmUpperBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXtype.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}
	
	//JvmLowerBound:
	//	'super' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXtype.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}
	
	//JvmLowerBoundAnded JvmLowerBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXtype.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}
	
	//JvmTypeParameter:
	//	name=super::ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXtype.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	super::QualifiedName '.' '*';
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXtype.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXtype.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}
	
	//XImportDeclaration:
	//	'import' (static?='static' extension?='extension'? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?='*' | memberName=super::ValidID) | importedType=[JvmDeclaredType|super::QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ';'?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXtype.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}
	
	//QualifiedNameInStaticImport:
	//	(super::ValidID '.')+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXtype.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '$' | '_') ('a'..'z' | 'A'..'Z' | '$' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaXtype.getIDRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"'? | "'" ('\\' . | !('\\' | "'"))* "'"?;
	public TerminalRule getSTRINGRule() {
		return gaXtype.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaXtype.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXtype.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaXtype.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXtype.getANY_OTHERRule();
	}
}
