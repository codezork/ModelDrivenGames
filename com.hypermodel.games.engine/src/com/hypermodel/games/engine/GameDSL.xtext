grammar com.hypermodel.games.engine.GameDSL with org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations

generate gameDSL "http://www.hypermodel.com/games/engine/GameDSL"

GameModel:
	packages+=GamePackage*;

GameImport:
	'import' importedNamespace=GameQualifiedNameWithWildCard;
	 
GamePackage:
	'package' name=QualifiedName '{' 
		(imports+=GameImport)*
		config=GamePlatformConfig
		(games+=GameRoot)*
	'}';
	
GamePlatformConfig: {GamePlatformConfig}
	'configuration' '{' 
	android = GamePlatformConfigAndroid
	ios = GamePlatformConfigIOS
	iosmoe = GamePlatformConfigIOSMOE
	'}';
	
GamePlatformConfigAndroid: {GamePlatformConfigAndroid}
	'android' '{'
	'minAndroidVersion' minAndroidVersion=INT
	'targetAndroidVersion' targetAndroidVersion=INT
	'SDKApiLevel' apiLevel=INT
	'orientation' orientation=GameScreenOrientation
	(('icon' appIcon=STRING)? &
	('name' appName=STRING)? &
	('label' appLabel=STRING)? )
	(useAccelerometer?='useAccelerometer')? 
	'}' 
;
	
GamePlatformConfigIOS: {GamePlatformConfigIOS}
	'ios' '{'
	(useAccelerometer?='useAccelerometer')? '}'
;

GamePlatformConfigIOSMOE: {GamePlatformConfigIOSMOE}
	'iosmoe' '{'
	(useAccelerometer?='useAccelerometer')? '}'
;

GamePlatformConfiguration:
	'configure' platform=GamePlatform '{' config+=GamePlatformConfigAndroid* '}';

GameRoot:
	{GameRoot} 'game' name=ID
	'width' width = INT 'height' height = INT 'title' title=STRING 'pixelPerMeter' ppm = INT
	'{' (screens+=GameScreen)* '}';
	
GameScreen:
	{GameScreen} 'screen' name=ID 'atlas' atlasName = STRING
;

ValidID:
	ID;
	
QualifiedName:
	ValidID (=>'.' ValidID)*;
  
GameQualifiedNameWithWildCard:
	QualifiedName ('.' '*')?;
	
enum GamePlatform:
	android 	= 'android'|
	desktop 	= 'desktop'|
	html 		= 'html'|
	ios 		= 'ios'|
	iosmoe 		= 'ios-moe';
	
enum GameScreenOrientation:
	landscape = 'landscape'|
	portrait = 'portait';